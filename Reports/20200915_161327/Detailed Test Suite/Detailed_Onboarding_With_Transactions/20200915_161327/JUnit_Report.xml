<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Detailed_Onboarding_With_Transactions" time="37.777" tests="4" failures="0" errors="0">
   <testsuite name="Detailed_Onboarding_With_Transactions" tests="4" failures="0" errors="0" time="37.777" timestamp="2020-09-15 16:13:36" hostname="csmall - csmall-mbp" id="Test Suites/Detailed Test Suite/Detailed_Onboarding_With_Transactions">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="/Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327"/>
         <property name="logFiles" value="/Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="csmall - csmall-mbp"/>
         <property name="hostAddress" value="192.168.1.45"/>
         <property name="os" value="Mac OS X 64bit"/>
         <property name="katalonVersion" value="null.null"/>
      </properties>
      <testcase name="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction" time="12.101" classname="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction" status="PASSED">
         <system-out><![CDATA[2020-09-15 16:13:36 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction

2020-09-15 16:13:36 - [TEST_STEP][PASSED] - card_product_token = detailed_Onboarding.detailed_onboarding.createCardProduct(start_date, card_product_name, payment_instrument, ecommerce, activate_upon_issue): detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-09-15 16:13:39 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/0.har

2020-09-15 16:13:39 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-09-15 16:13:39 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-09-15 16:13:39 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "ba50ff56-4a39-42e8-b406-36b0fb932105",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-15T21:13:39Z",
  "last_modified_time" : "2020-09-15T21:13:39Z"
}

2020-09-15 16:13:39 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "ba50ff56-4a39-42e8-b406-36b0fb932105",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-15T21:13:39Z",
  "last_modified_time" : "2020-09-15T21:13:39Z"
}

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = ba50ff56-4a39-42e8-b406-36b0fb932105

2020-09-15 16:13:39 - [MESSAGE][INFO] - -----> card_product_token = ba50ff56-4a39-42e8-b406-36b0fb932105

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = ba50ff56-4a39-42e8-b406-36b0fb932105

2020-09-15 16:13:39 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = ba50ff56-4a39-42e8-b406-36b0fb932105

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:39 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:39 - [MESSAGE][INFO] - -----> card_product_token = ba50ff56-4a39-42e8-b406-36b0fb932105

2020-09-15 16:13:39 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = ba50ff56-4a39-42e8-b406-36b0fb932105

2020-09-15 16:13:39 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-09-15 16:13:39 - [TEST_STEP][PASSED] - funding_source_token = detailed_Onboarding.detailed_onboarding.createCardFundingSource(program_name): detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-09-15 16:13:40 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/1.har

2020-09-15 16:13:40 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-09-15 16:13:41 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-09-15 16:13:41 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "ce472f18-dee8-48dd-9e58-d22fc1f0df88",
  "created_time" : "2020-09-15T21:13:40Z",
  "last_modified_time" : "2020-09-15T21:13:40Z",
  "account" : "12.003.001.000000"
}

2020-09-15 16:13:41 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "ce472f18-dee8-48dd-9e58-d22fc1f0df88",
  "created_time" : "2020-09-15T21:13:40Z",
  "last_modified_time" : "2020-09-15T21:13:40Z",
  "account" : "12.003.001.000000"
}

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - funding_token = token: null

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = ce472f18-dee8-48dd-9e58-d22fc1f0df88

2020-09-15 16:13:41 - [MESSAGE][INFO] - -----> funding_token = ce472f18-dee8-48dd-9e58-d22fc1f0df88

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = ce472f18-dee8-48dd-9e58-d22fc1f0df88

2020-09-15 16:13:41 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = ce472f18-dee8-48dd-9e58-d22fc1f0df88

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:41 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:41 - [MESSAGE][INFO] - -----> funding_source_token = ce472f18-dee8-48dd-9e58-d22fc1f0df88

2020-09-15 16:13:41 - [MESSAGE][INFO] - ----> GlobalVariable funding_source_token = ce472f18-dee8-48dd-9e58-d22fc1f0df88

2020-09-15 16:13:41 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-09-15 16:13:41 - [TEST_STEP][PASSED] - user_token = detailed_Onboarding.detailed_onboarding.createDetailedUser(user_first_name, user_middle_name, user_last_name, active, user_password, phone, gender, user_email, ssn_expiration_date, user_id_type, user_address1, city, user_state, country, birth_date, corporate_card_holder, user_ssn, id_card_number, id_card_expiration_date, nationality, company, uses_parent_account, user_postal_code): detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-09-15 16:13:42 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/2.har

2020-09-15 16:13:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-09-15 16:13:42 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-09-15 16:13:42 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-09-15T21:13:41Z",
  "last_modified_time" : "2020-09-15T21:13:41Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "6c9e40ba-cb23-4b39-8fe2-5afb5d15c956",
    "account_number" : "40013372018741615",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-09-15 16:13:42 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-09-15T21:13:41Z",
  "last_modified_time" : "2020-09-15T21:13:41Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "6c9e40ba-cb23-4b39-8fe2-5afb5d15c956",
    "account_number" : "40013372018741615",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - user_token = token: null

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = cbf2d234-b070-418a-95f6-5d9a0d046448

2020-09-15 16:13:42 - [MESSAGE][INFO] - -----> user_token = cbf2d234-b070-418a-95f6-5d9a0d046448

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = cbf2d234-b070-418a-95f6-5d9a0d046448

2020-09-15 16:13:42 - [MESSAGE][INFO] - ----> GlobalVariable user_token = cbf2d234-b070-418a-95f6-5d9a0d046448

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:42 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:42 - [MESSAGE][INFO] - -----> user_token = cbf2d234-b070-418a-95f6-5d9a0d046448

2020-09-15 16:13:42 - [MESSAGE][INFO] - ----> GlobalVariable user_token = cbf2d234-b070-418a-95f6-5d9a0d046448

2020-09-15 16:13:42 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-09-15 16:13:42 - [TEST_STEP][PASSED] - card_token = detailed_Onboarding.detailed_onboarding.createCard(user_token, card_product_token): detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-09-15 16:13:43 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/3.har

2020-09-15 16:13:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-09-15 16:13:43 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "cbf2d234-b070-418a-95f6-5d9a0d046448",
  "card_product_token": "ba50ff56-4a39-42e8-b406-36b0fb932105"
}

2020-09-15 16:13:43 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "cbf2d234-b070-418a-95f6-5d9a0d046448",
  "card_product_token": "ba50ff56-4a39-42e8-b406-36b0fb932105"
}

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-09-15T21:13:43Z",
  "last_modified_time" : "2020-09-15T21:13:43Z",
  "token" : "937a397d-995a-472d-9f97-78b39e7c0680",
  "user_token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
  "card_product_token" : "ba50ff56-4a39-42e8-b406-36b0fb932105",
  "last_four" : "7850",
  "pan" : "111111______7850",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59Z",
  "barcode" : "29777995564018335215",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-09-15 16:13:43 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-09-15T21:13:43Z",
  "last_modified_time" : "2020-09-15T21:13:43Z",
  "token" : "937a397d-995a-472d-9f97-78b39e7c0680",
  "user_token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
  "card_product_token" : "ba50ff56-4a39-42e8-b406-36b0fb932105",
  "last_four" : "7850",
  "pan" : "111111______7850",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59Z",
  "barcode" : "29777995564018335215",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - card_token = token: null

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = 937a397d-995a-472d-9f97-78b39e7c0680

2020-09-15 16:13:43 - [MESSAGE][INFO] - -----> card_token = 937a397d-995a-472d-9f97-78b39e7c0680

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = 937a397d-995a-472d-9f97-78b39e7c0680

2020-09-15 16:13:43 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 937a397d-995a-472d-9f97-78b39e7c0680

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:43 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:43 - [MESSAGE][INFO] - -----> card_token = 937a397d-995a-472d-9f97-78b39e7c0680

2020-09-15 16:13:43 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 937a397d-995a-472d-9f97-78b39e7c0680

2020-09-15 16:13:43 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-09-15 16:13:43 - [TEST_STEP][PASSED] - gpa_token = detailed_Onboarding.detailed_onboarding.createGpaOrder(user_token, gpaamount, currency_code, funding_source_token): detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-09-15 16:13:45 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/4.har

2020-09-15 16:13:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-09-15 16:13:45 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "cbf2d234-b070-418a-95f6-5d9a0d046448",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "ce472f18-dee8-48dd-9e58-d22fc1f0df88"
}

2020-09-15 16:13:45 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "cbf2d234-b070-418a-95f6-5d9a0d046448",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "ce472f18-dee8-48dd-9e58-d22fc1f0df88"
}

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "1f6b9090-710e-4757-b4db-b3320c31ab29",
  "amount" : 10000,
  "created_time" : "2020-09-15T21:13:45Z",
  "last_modified_time" : "2020-09-15T21:13:45Z",
  "transaction_token" : "981d9dd2-44af-475d-b0f4-801d769c733f",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********df88",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-09-15T21:13:40Z",
      "last_modified_time" : "2020-09-15T21:13:40Z"
    }
  },
  "funding_source_token" : "**********df88",
  "user_token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
  "currency_code" : "USD"
}

2020-09-15 16:13:45 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "1f6b9090-710e-4757-b4db-b3320c31ab29",
  "amount" : 10000,
  "created_time" : "2020-09-15T21:13:45Z",
  "last_modified_time" : "2020-09-15T21:13:45Z",
  "transaction_token" : "981d9dd2-44af-475d-b0f4-801d769c733f",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********df88",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-09-15T21:13:40Z",
      "last_modified_time" : "2020-09-15T21:13:40Z"
    }
  },
  "funding_source_token" : "**********df88",
  "user_token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
  "currency_code" : "USD"
}

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - gpa_token = token: null

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - log.logInfo("-----> gpa_token = " + gpa_token): -----> gpa_token = 1f6b9090-710e-4757-b4db-b3320c31ab29

2020-09-15 16:13:45 - [MESSAGE][INFO] - -----> gpa_token = 1f6b9090-710e-4757-b4db-b3320c31ab29

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - user_token = gpa_token: null

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable gpa_token = " + gpa_token): ----> GlobalVariable gpa_token = 

2020-09-15 16:13:45 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:45 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:45 - [MESSAGE][INFO] - -----> gpa_token = 1f6b9090-710e-4757-b4db-b3320c31ab29

2020-09-15 16:13:45 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 1f6b9090-710e-4757-b4db-b3320c31ab29

2020-09-15 16:13:45 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-09-15 16:13:45 - [TEST_STEP][PASSED] - original_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuth(card_token, trans_amount1, mid, beeceptor_create_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-09-15 16:13:46 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/5.har

2020-09-15 16:13:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-09-15 16:13:46 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "937a397d-995a-472d-9f97-78b39e7c0680",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:13:46 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "937a397d-995a-472d-9f97-78b39e7c0680",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "61",
    "token" : "ddd800dd-ccf4-416f-89aa-cfdf0c051de0",
    "user_token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
    "acting_user_token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
    "card_token" : "937a397d-995a-472d-9f97-78b39e7c0680",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 106,
    "created_time" : "2020-09-15T21:13:46Z",
    "user_transaction_time" : "2020-09-15T21:13:46Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "659783",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "467978"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "7850",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:13:46.122Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "508189449813",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111113118677850",
    "3" : "000000",
    "4" : 10.00,
    "7" : "0915211346",
    "11" : "000008467978",
    "12" : "20200915211346",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "508189449813",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1809",
    "38" : "659783",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:13:46 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "61",
    "token" : "ddd800dd-ccf4-416f-89aa-cfdf0c051de0",
    "user_token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
    "acting_user_token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
    "card_token" : "937a397d-995a-472d-9f97-78b39e7c0680",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 106,
    "created_time" : "2020-09-15T21:13:46Z",
    "user_transaction_time" : "2020-09-15T21:13:46Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "659783",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "467978"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "7850",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:13:46.122Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "508189449813",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111113118677850",
    "3" : "000000",
    "4" : 10.00,
    "7" : "0915211346",
    "11" : "000008467978",
    "12" : "20200915211346",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "508189449813",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1809",
    "38" : "659783",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = ddd800dd-ccf4-416f-89aa-cfdf0c051de0

2020-09-15 16:13:46 - [MESSAGE][INFO] - -----> original_transaction_token = ddd800dd-ccf4-416f-89aa-cfdf0c051de0

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = ddd800dd-ccf4-416f-89aa-cfdf0c051de0

2020-09-15 16:13:46 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = ddd800dd-ccf4-416f-89aa-cfdf0c051de0

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:46 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:46 - [MESSAGE][INFO] - -----> original_transaction_token = ddd800dd-ccf4-416f-89aa-cfdf0c051de0

2020-09-15 16:13:46 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = ddd800dd-ccf4-416f-89aa-cfdf0c051de0

2020-09-15 16:13:46 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-09-15 16:13:46 - [TEST_STEP][PASSED] - advice_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuthAdvice(original_transaction_token, advice_amount, mid, beeceptor_create_auth_advice, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-09-15 16:13:47 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/6.har

2020-09-15 16:13:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-09-15 16:13:47 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "ddd800dd-ccf4-416f-89aa-cfdf0c051de0",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:13:47 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "ddd800dd-ccf4-416f-89aa-cfdf0c051de0",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "62",
    "token" : "1a8eedca-1176-4025-8bf1-a5b6dce69fc7",
    "user_token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
    "acting_user_token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
    "card_token" : "937a397d-995a-472d-9f97-78b39e7c0680",
    "preceding_related_transaction_token" : "ddd800dd-ccf4-416f-89aa-cfdf0c051de0",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 117,
    "created_time" : "2020-09-15T21:13:47Z",
    "user_transaction_time" : "2020-09-15T21:13:46Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "659783",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000039"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "7850",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:13:47.167Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "508189449813",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111113118677850",
    "3" : "900000",
    "4" : 1.00,
    "7" : "0915211347",
    "11" : "000000000039",
    "12" : "20200915211347",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "508189449813",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1810",
    "38" : "659783",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "ddd800dd-ccf4-416f-89aa-cfdf0c051de0"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:13:47 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "62",
    "token" : "1a8eedca-1176-4025-8bf1-a5b6dce69fc7",
    "user_token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
    "acting_user_token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
    "card_token" : "937a397d-995a-472d-9f97-78b39e7c0680",
    "preceding_related_transaction_token" : "ddd800dd-ccf4-416f-89aa-cfdf0c051de0",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 117,
    "created_time" : "2020-09-15T21:13:47Z",
    "user_transaction_time" : "2020-09-15T21:13:46Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "659783",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000039"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "7850",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:13:47.167Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "508189449813",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111113118677850",
    "3" : "900000",
    "4" : 1.00,
    "7" : "0915211347",
    "11" : "000000000039",
    "12" : "20200915211347",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "508189449813",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1810",
    "38" : "659783",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "ddd800dd-ccf4-416f-89aa-cfdf0c051de0"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - advice_transaction_token = token: null

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - log.logInfo("-----> advice_transaction_token = " + advice_transaction_token): -----> advice_transaction_token = 1a8eedca-1176-4025-8bf1-a5b6dce69fc7

2020-09-15 16:13:47 - [MESSAGE][INFO] - -----> advice_transaction_token = 1a8eedca-1176-4025-8bf1-a5b6dce69fc7

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - advice_transaction_token = advice_transaction_token: null

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable advice_transaction_token = " + advice_transaction_token): ----> GlobalVariable advice_transaction_token = 1a8eedca-1176-4025-8bf1-a5b6dce69fc7

2020-09-15 16:13:47 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = 1a8eedca-1176-4025-8bf1-a5b6dce69fc7

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:47 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:47 - [MESSAGE][INFO] - -----> advice_transaction_token = 1a8eedca-1176-4025-8bf1-a5b6dce69fc7

2020-09-15 16:13:47 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = 1a8eedca-1176-4025-8bf1-a5b6dce69fc7

2020-09-15 16:13:47 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-09-15 16:13:47 - [TEST_STEP][PASSED] - cleared_transaction_token = detailed_Onboarding.detailed_onboarding.createTransClearing(original_transaction_token, trans_amount1, mid, force_post, beeceptor_settle_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-09-15 16:13:48 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/7.har

2020-09-15 16:13:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 16:13:48 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "ddd800dd-ccf4-416f-89aa-cfdf0c051de0",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:13:48 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "ddd800dd-ccf4-416f-89aa-cfdf0c051de0",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "63",
    "token" : "48293340-1afc-4663-8c26-9d407bc278b7",
    "user_token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
    "acting_user_token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
    "card_token" : "937a397d-995a-472d-9f97-78b39e7c0680",
    "preceding_related_transaction_token" : "ddd800dd-ccf4-416f-89aa-cfdf0c051de0",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 71,
    "created_time" : "2020-09-15T21:13:48Z",
    "user_transaction_time" : "2020-09-15T21:13:48Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "659783",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000040"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "7850",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:13:48.222Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "508189449813",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111113118677850",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0915211348",
    "11" : "000000000040",
    "12" : "20200915211348",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "508189449813",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1811",
    "38" : "659783",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "ddd800dd-ccf4-416f-89aa-cfdf0c051de0"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:13:48 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "63",
    "token" : "48293340-1afc-4663-8c26-9d407bc278b7",
    "user_token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
    "acting_user_token" : "cbf2d234-b070-418a-95f6-5d9a0d046448",
    "card_token" : "937a397d-995a-472d-9f97-78b39e7c0680",
    "preceding_related_transaction_token" : "ddd800dd-ccf4-416f-89aa-cfdf0c051de0",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 71,
    "created_time" : "2020-09-15T21:13:48Z",
    "user_transaction_time" : "2020-09-15T21:13:48Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "659783",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000040"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "7850",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:13:48.222Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "508189449813",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111113118677850",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0915211348",
    "11" : "000000000040",
    "12" : "20200915211348",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "508189449813",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1811",
    "38" : "659783",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "ddd800dd-ccf4-416f-89aa-cfdf0c051de0"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - cleared_transaction_token = token: null

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - log.logInfo("-----> cleared_transaction_token = " + cleared_transaction_token): -----> cleared_transaction_token = 48293340-1afc-4663-8c26-9d407bc278b7

2020-09-15 16:13:48 - [MESSAGE][INFO] - -----> cleared_transaction_token = 48293340-1afc-4663-8c26-9d407bc278b7

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - cleared_transaction_token = cleared_transaction_token: null

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable cleared_transaction_token = " + cleared_transaction_token): ----> GlobalVariable cleared_transaction_token = 48293340-1afc-4663-8c26-9d407bc278b7

2020-09-15 16:13:48 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = 48293340-1afc-4663-8c26-9d407bc278b7

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:48 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:48 - [MESSAGE][INFO] - -----> cleared_transaction_token = 48293340-1afc-4663-8c26-9d407bc278b7

2020-09-15 16:13:48 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = 48293340-1afc-4663-8c26-9d407bc278b7

2020-09-15 16:13:48 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction With Refund/Detailed_onboarding_with_card_transaction_and_refund" time="9.683" classname="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction With Refund/Detailed_onboarding_with_card_transaction_and_refund" status="PASSED">
         <system-out><![CDATA[2020-09-15 16:13:48 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction With Refund/Detailed_onboarding_with_card_transaction_and_refund: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction With Refund/Detailed_onboarding_with_card_transaction_and_refund

2020-09-15 16:13:48 - [TEST_STEP][PASSED] - card_product_token = detailed_Onboarding.detailed_onboarding.createCardProduct(start_date, card_product_name, payment_instrument, ecommerce, activate_upon_issue): detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-09-15 16:13:49 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/8.har

2020-09-15 16:13:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-09-15 16:13:49 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-09-15 16:13:49 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "ac84bd52-c6db-482e-a1bf-2df2e87af06d",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-15T21:13:49Z",
  "last_modified_time" : "2020-09-15T21:13:49Z"
}

2020-09-15 16:13:49 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "ac84bd52-c6db-482e-a1bf-2df2e87af06d",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-15T21:13:49Z",
  "last_modified_time" : "2020-09-15T21:13:49Z"
}

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = ac84bd52-c6db-482e-a1bf-2df2e87af06d

2020-09-15 16:13:49 - [MESSAGE][INFO] - -----> card_product_token = ac84bd52-c6db-482e-a1bf-2df2e87af06d

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = ac84bd52-c6db-482e-a1bf-2df2e87af06d

2020-09-15 16:13:49 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = ac84bd52-c6db-482e-a1bf-2df2e87af06d

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:49 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:49 - [MESSAGE][INFO] - -----> card_product_token = ac84bd52-c6db-482e-a1bf-2df2e87af06d

2020-09-15 16:13:49 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = ac84bd52-c6db-482e-a1bf-2df2e87af06d

2020-09-15 16:13:49 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-09-15 16:13:49 - [TEST_STEP][PASSED] - funding_source_token = detailed_Onboarding.detailed_onboarding.createCardFundingSource(program_name): detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-09-15 16:13:50 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/9.har

2020-09-15 16:13:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-09-15 16:13:50 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-09-15 16:13:50 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "3be628f7-c973-4e2d-8ebf-94fcb3852327",
  "created_time" : "2020-09-15T21:13:50Z",
  "last_modified_time" : "2020-09-15T21:13:50Z",
  "account" : "12.003.001.000000"
}

2020-09-15 16:13:50 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "3be628f7-c973-4e2d-8ebf-94fcb3852327",
  "created_time" : "2020-09-15T21:13:50Z",
  "last_modified_time" : "2020-09-15T21:13:50Z",
  "account" : "12.003.001.000000"
}

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - funding_token = token: null

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = 3be628f7-c973-4e2d-8ebf-94fcb3852327

2020-09-15 16:13:50 - [MESSAGE][INFO] - -----> funding_token = 3be628f7-c973-4e2d-8ebf-94fcb3852327

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = 3be628f7-c973-4e2d-8ebf-94fcb3852327

2020-09-15 16:13:50 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = 3be628f7-c973-4e2d-8ebf-94fcb3852327

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:50 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:50 - [MESSAGE][INFO] - -----> funding_source_token = 3be628f7-c973-4e2d-8ebf-94fcb3852327

2020-09-15 16:13:50 - [MESSAGE][INFO] - ----> GlobalVariable funding_source_token = 3be628f7-c973-4e2d-8ebf-94fcb3852327

2020-09-15 16:13:50 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-09-15 16:13:50 - [TEST_STEP][PASSED] - user_token = detailed_Onboarding.detailed_onboarding.createDetailedUser(user_first_name, user_middle_name, user_last_name, active, user_password, phone, gender, user_email, ssn_expiration_date, user_id_type, user_address1, city, user_state, country, birth_date, corporate_card_holder, user_ssn, id_card_number, id_card_expiration_date, nationality, company, uses_parent_account, user_postal_code): detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-09-15 16:13:51 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/10.har

2020-09-15 16:13:51 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-09-15 16:13:51 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-09-15 16:13:51 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-09-15T21:13:51Z",
  "last_modified_time" : "2020-09-15T21:13:51Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "a3db07ac-e7c5-42c1-ae63-27e4f809e672",
    "account_number" : "40013372020851360",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-09-15 16:13:51 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-09-15T21:13:51Z",
  "last_modified_time" : "2020-09-15T21:13:51Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "a3db07ac-e7c5-42c1-ae63-27e4f809e672",
    "account_number" : "40013372020851360",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - user_token = token: null

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = 07482b19-24ef-4e4f-8ab0-a213b9235a73

2020-09-15 16:13:51 - [MESSAGE][INFO] - -----> user_token = 07482b19-24ef-4e4f-8ab0-a213b9235a73

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = 07482b19-24ef-4e4f-8ab0-a213b9235a73

2020-09-15 16:13:51 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 07482b19-24ef-4e4f-8ab0-a213b9235a73

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:51 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:51 - [MESSAGE][INFO] - -----> user_token = 07482b19-24ef-4e4f-8ab0-a213b9235a73

2020-09-15 16:13:51 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 07482b19-24ef-4e4f-8ab0-a213b9235a73

2020-09-15 16:13:51 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-09-15 16:13:51 - [TEST_STEP][PASSED] - card_token = detailed_Onboarding.detailed_onboarding.createCard(user_token, card_product_token): detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-09-15 16:13:53 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/11.har

2020-09-15 16:13:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-09-15 16:13:53 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "07482b19-24ef-4e4f-8ab0-a213b9235a73",
  "card_product_token": "ac84bd52-c6db-482e-a1bf-2df2e87af06d"
}

2020-09-15 16:13:53 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "07482b19-24ef-4e4f-8ab0-a213b9235a73",
  "card_product_token": "ac84bd52-c6db-482e-a1bf-2df2e87af06d"
}

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-09-15T21:13:52Z",
  "last_modified_time" : "2020-09-15T21:13:52Z",
  "token" : "5db357e2-93c8-4fa6-b0b3-b6493a78cd92",
  "user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
  "card_product_token" : "ac84bd52-c6db-482e-a1bf-2df2e87af06d",
  "last_four" : "3676",
  "pan" : "111111______3676",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59Z",
  "barcode" : "14756923319537304584",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-09-15 16:13:53 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-09-15T21:13:52Z",
  "last_modified_time" : "2020-09-15T21:13:52Z",
  "token" : "5db357e2-93c8-4fa6-b0b3-b6493a78cd92",
  "user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
  "card_product_token" : "ac84bd52-c6db-482e-a1bf-2df2e87af06d",
  "last_four" : "3676",
  "pan" : "111111______3676",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59Z",
  "barcode" : "14756923319537304584",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - card_token = token: null

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = 5db357e2-93c8-4fa6-b0b3-b6493a78cd92

2020-09-15 16:13:53 - [MESSAGE][INFO] - -----> card_token = 5db357e2-93c8-4fa6-b0b3-b6493a78cd92

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = 5db357e2-93c8-4fa6-b0b3-b6493a78cd92

2020-09-15 16:13:53 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 5db357e2-93c8-4fa6-b0b3-b6493a78cd92

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:53 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:53 - [MESSAGE][INFO] - -----> card_token = 5db357e2-93c8-4fa6-b0b3-b6493a78cd92

2020-09-15 16:13:53 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 5db357e2-93c8-4fa6-b0b3-b6493a78cd92

2020-09-15 16:13:53 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-09-15 16:13:53 - [TEST_STEP][PASSED] - gpa_token = detailed_Onboarding.detailed_onboarding.createGpaOrder(user_token, gpaamount, currency_code, funding_source_token): detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-09-15 16:13:54 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/12.har

2020-09-15 16:13:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-09-15 16:13:54 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "07482b19-24ef-4e4f-8ab0-a213b9235a73",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "3be628f7-c973-4e2d-8ebf-94fcb3852327"
}

2020-09-15 16:13:54 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "07482b19-24ef-4e4f-8ab0-a213b9235a73",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "3be628f7-c973-4e2d-8ebf-94fcb3852327"
}

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "0a2277df-d4af-4fca-8fb9-d1e74595d71f",
  "amount" : 10000,
  "created_time" : "2020-09-15T21:13:53Z",
  "last_modified_time" : "2020-09-15T21:13:53Z",
  "transaction_token" : "1298a9d3-3bcc-4b63-880e-7d769f6ef733",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********2327",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-09-15T21:13:50Z",
      "last_modified_time" : "2020-09-15T21:13:50Z"
    }
  },
  "funding_source_token" : "**********2327",
  "user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
  "currency_code" : "USD"
}

2020-09-15 16:13:54 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "0a2277df-d4af-4fca-8fb9-d1e74595d71f",
  "amount" : 10000,
  "created_time" : "2020-09-15T21:13:53Z",
  "last_modified_time" : "2020-09-15T21:13:53Z",
  "transaction_token" : "1298a9d3-3bcc-4b63-880e-7d769f6ef733",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********2327",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-09-15T21:13:50Z",
      "last_modified_time" : "2020-09-15T21:13:50Z"
    }
  },
  "funding_source_token" : "**********2327",
  "user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
  "currency_code" : "USD"
}

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - gpa_token = token: null

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - log.logInfo("-----> gpa_token = " + gpa_token): -----> gpa_token = 0a2277df-d4af-4fca-8fb9-d1e74595d71f

2020-09-15 16:13:54 - [MESSAGE][INFO] - -----> gpa_token = 0a2277df-d4af-4fca-8fb9-d1e74595d71f

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - user_token = gpa_token: null

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable gpa_token = " + gpa_token): ----> GlobalVariable gpa_token = 1f6b9090-710e-4757-b4db-b3320c31ab29

2020-09-15 16:13:54 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 1f6b9090-710e-4757-b4db-b3320c31ab29

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:54 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:54 - [MESSAGE][INFO] - -----> gpa_token = 0a2277df-d4af-4fca-8fb9-d1e74595d71f

2020-09-15 16:13:54 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 0a2277df-d4af-4fca-8fb9-d1e74595d71f

2020-09-15 16:13:54 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-09-15 16:13:54 - [TEST_STEP][PASSED] - original_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuth(card_token, trans_amount1, mid, beeceptor_create_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-09-15 16:13:55 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/13.har

2020-09-15 16:13:55 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-09-15 16:13:55 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "5db357e2-93c8-4fa6-b0b3-b6493a78cd92",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:13:55 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "5db357e2-93c8-4fa6-b0b3-b6493a78cd92",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "65",
    "token" : "7dc899b6-8891-4dd6-a328-5c33772bfe64",
    "user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
    "acting_user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
    "card_token" : "5db357e2-93c8-4fa6-b0b3-b6493a78cd92",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 77,
    "created_time" : "2020-09-15T21:13:55Z",
    "user_transaction_time" : "2020-09-15T21:13:55Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "410013",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "011927"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "3676",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:13:55.052Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "910027288247",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111112148563676",
    "3" : "000000",
    "4" : 10.00,
    "7" : "0915211355",
    "11" : "000006011927",
    "12" : "20200915211355",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "910027288247",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1812",
    "38" : "410013",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:13:55 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "65",
    "token" : "7dc899b6-8891-4dd6-a328-5c33772bfe64",
    "user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
    "acting_user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
    "card_token" : "5db357e2-93c8-4fa6-b0b3-b6493a78cd92",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 77,
    "created_time" : "2020-09-15T21:13:55Z",
    "user_transaction_time" : "2020-09-15T21:13:55Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "410013",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "011927"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "3676",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:13:55.052Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "910027288247",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111112148563676",
    "3" : "000000",
    "4" : 10.00,
    "7" : "0915211355",
    "11" : "000006011927",
    "12" : "20200915211355",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "910027288247",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1812",
    "38" : "410013",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = 7dc899b6-8891-4dd6-a328-5c33772bfe64

2020-09-15 16:13:55 - [MESSAGE][INFO] - -----> original_transaction_token = 7dc899b6-8891-4dd6-a328-5c33772bfe64

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = 7dc899b6-8891-4dd6-a328-5c33772bfe64

2020-09-15 16:13:55 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 7dc899b6-8891-4dd6-a328-5c33772bfe64

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:55 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:55 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:55 - [MESSAGE][INFO] - -----> original_transaction_token = 7dc899b6-8891-4dd6-a328-5c33772bfe64

2020-09-15 16:13:55 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 7dc899b6-8891-4dd6-a328-5c33772bfe64

2020-09-15 16:13:55 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-09-15 16:13:55 - [TEST_STEP][PASSED] - advice_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuthAdvice(original_transaction_token, advice_amount, mid, beeceptor_create_auth_advice, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-09-15 16:13:56 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/14.har

2020-09-15 16:13:56 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-09-15 16:13:56 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "7dc899b6-8891-4dd6-a328-5c33772bfe64",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:13:56 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "7dc899b6-8891-4dd6-a328-5c33772bfe64",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "66",
    "token" : "1eae1f95-8685-458c-8244-16d808e61e1c",
    "user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
    "acting_user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
    "card_token" : "5db357e2-93c8-4fa6-b0b3-b6493a78cd92",
    "preceding_related_transaction_token" : "7dc899b6-8891-4dd6-a328-5c33772bfe64",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 103,
    "created_time" : "2020-09-15T21:13:55Z",
    "user_transaction_time" : "2020-09-15T21:13:55Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "410013",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000041"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "3676",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:13:55.900Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "910027288247",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112148563676",
    "3" : "900000",
    "4" : 1.00,
    "7" : "0915211355",
    "11" : "000000000041",
    "12" : "20200915211355",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "910027288247",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1813",
    "38" : "410013",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "7dc899b6-8891-4dd6-a328-5c33772bfe64"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:13:56 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "66",
    "token" : "1eae1f95-8685-458c-8244-16d808e61e1c",
    "user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
    "acting_user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
    "card_token" : "5db357e2-93c8-4fa6-b0b3-b6493a78cd92",
    "preceding_related_transaction_token" : "7dc899b6-8891-4dd6-a328-5c33772bfe64",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 103,
    "created_time" : "2020-09-15T21:13:55Z",
    "user_transaction_time" : "2020-09-15T21:13:55Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "410013",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000041"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "3676",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:13:55.900Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "910027288247",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112148563676",
    "3" : "900000",
    "4" : 1.00,
    "7" : "0915211355",
    "11" : "000000000041",
    "12" : "20200915211355",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "910027288247",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1813",
    "38" : "410013",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "7dc899b6-8891-4dd6-a328-5c33772bfe64"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - advice_transaction_token = token: null

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - log.logInfo("-----> advice_transaction_token = " + advice_transaction_token): -----> advice_transaction_token = 1eae1f95-8685-458c-8244-16d808e61e1c

2020-09-15 16:13:56 - [MESSAGE][INFO] - -----> advice_transaction_token = 1eae1f95-8685-458c-8244-16d808e61e1c

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - advice_transaction_token = advice_transaction_token: null

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable advice_transaction_token = " + advice_transaction_token): ----> GlobalVariable advice_transaction_token = 1eae1f95-8685-458c-8244-16d808e61e1c

2020-09-15 16:13:56 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = 1eae1f95-8685-458c-8244-16d808e61e1c

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:56 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:56 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:56 - [MESSAGE][INFO] - -----> advice_transaction_token = 1eae1f95-8685-458c-8244-16d808e61e1c

2020-09-15 16:13:56 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = 1eae1f95-8685-458c-8244-16d808e61e1c

2020-09-15 16:13:56 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-09-15 16:13:56 - [TEST_STEP][PASSED] - cleared_transaction_token = detailed_Onboarding.detailed_onboarding.createTransClearing(original_transaction_token, trans_amount1, mid, force_post, beeceptor_settle_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-09-15 16:13:57 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/15.har

2020-09-15 16:13:57 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 16:13:57 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "7dc899b6-8891-4dd6-a328-5c33772bfe64",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:13:57 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "7dc899b6-8891-4dd6-a328-5c33772bfe64",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "67",
    "token" : "b537344d-76f1-4950-a155-38a91eeef386",
    "user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
    "acting_user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
    "card_token" : "5db357e2-93c8-4fa6-b0b3-b6493a78cd92",
    "preceding_related_transaction_token" : "7dc899b6-8891-4dd6-a328-5c33772bfe64",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 68,
    "created_time" : "2020-09-15T21:13:56Z",
    "user_transaction_time" : "2020-09-15T21:13:56Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "410013",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000042"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "3676",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:13:56.958Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "910027288247",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112148563676",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0915211356",
    "11" : "000000000042",
    "12" : "20200915211356",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "910027288247",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1814",
    "38" : "410013",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "7dc899b6-8891-4dd6-a328-5c33772bfe64"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:13:57 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "67",
    "token" : "b537344d-76f1-4950-a155-38a91eeef386",
    "user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
    "acting_user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
    "card_token" : "5db357e2-93c8-4fa6-b0b3-b6493a78cd92",
    "preceding_related_transaction_token" : "7dc899b6-8891-4dd6-a328-5c33772bfe64",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 68,
    "created_time" : "2020-09-15T21:13:56Z",
    "user_transaction_time" : "2020-09-15T21:13:56Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "410013",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000042"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "3676",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:13:56.958Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "910027288247",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112148563676",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0915211356",
    "11" : "000000000042",
    "12" : "20200915211356",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "910027288247",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1814",
    "38" : "410013",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "7dc899b6-8891-4dd6-a328-5c33772bfe64"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - cleared_transaction_token = token: null

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - log.logInfo("-----> cleared_transaction_token = " + cleared_transaction_token): -----> cleared_transaction_token = b537344d-76f1-4950-a155-38a91eeef386

2020-09-15 16:13:57 - [MESSAGE][INFO] - -----> cleared_transaction_token = b537344d-76f1-4950-a155-38a91eeef386

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - cleared_transaction_token = cleared_transaction_token: null

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable cleared_transaction_token = " + cleared_transaction_token): ----> GlobalVariable cleared_transaction_token = b537344d-76f1-4950-a155-38a91eeef386

2020-09-15 16:13:57 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = b537344d-76f1-4950-a155-38a91eeef386

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:57 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:57 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:57 - [MESSAGE][INFO] - -----> cleared_transaction_token = b537344d-76f1-4950-a155-38a91eeef386

2020-09-15 16:13:57 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = b537344d-76f1-4950-a155-38a91eeef386

2020-09-15 16:13:57 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-09-15 16:13:57 - [TEST_STEP][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearingRefund(original_transaction_token, trans_amount1, mid, is_refund, beeceptor_create_refund, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearingRefund is PASSED

2020-09-15 16:13:58 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/16.har

2020-09-15 16:13:58 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 16:13:58 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "7dc899b6-8891-4dd6-a328-5c33772bfe64",
  "amount": "10",
  "mid": "USD",
  "is_refund": "true",
    "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-refund",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:13:58 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "7dc899b6-8891-4dd6-a328-5c33772bfe64",
  "amount": "10",
  "mid": "USD",
  "is_refund": "true",
    "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-refund",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "refund",
    "state" : "COMPLETION",
    "identifier" : "68",
    "token" : "4456c395-279a-4b19-ab38-11b62d1301d5",
    "user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
    "acting_user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
    "card_token" : "5db357e2-93c8-4fa6-b0b3-b6493a78cd92",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : 10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : 10.00
        }
      }
    },
    "duration" : 112,
    "created_time" : "2020-09-15T21:13:57Z",
    "user_transaction_time" : "2020-09-15T21:13:57Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "520539",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000044"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "3676",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:13:57.911Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "910027288247",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112148563676",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0915211357",
    "11" : "000000000044",
    "12" : "20200915211357",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "910027288247",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1839",
    "38" : "520539",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "7dc899b6-8891-4dd6-a328-5c33772bfe64"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:13:58 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "refund",
    "state" : "COMPLETION",
    "identifier" : "68",
    "token" : "4456c395-279a-4b19-ab38-11b62d1301d5",
    "user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
    "acting_user_token" : "07482b19-24ef-4e4f-8ab0-a213b9235a73",
    "card_token" : "5db357e2-93c8-4fa6-b0b3-b6493a78cd92",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : 10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : 10.00
        }
      }
    },
    "duration" : 112,
    "created_time" : "2020-09-15T21:13:57Z",
    "user_transaction_time" : "2020-09-15T21:13:57Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "520539",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000044"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "3676",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:13:57.911Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "910027288247",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112148563676",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0915211357",
    "11" : "000000000044",
    "12" : "20200915211357",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "910027288247",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1839",
    "38" : "520539",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "7dc899b6-8891-4dd6-a328-5c33772bfe64"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - refund_transaction_token = token: null

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - log.logInfo("-----> refund_transaction_token = " + refund_transaction_token): -----> refund_transaction_token = 4456c395-279a-4b19-ab38-11b62d1301d5

2020-09-15 16:13:58 - [MESSAGE][INFO] - -----> refund_transaction_token = 4456c395-279a-4b19-ab38-11b62d1301d5

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - refund_transaction_token = refund_transaction_token: null

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable refund_transaction_token = " + refund_transaction_token): ----> GlobalVariable refund_transaction_token = 4456c395-279a-4b19-ab38-11b62d1301d5

2020-09-15 16:13:58 - [MESSAGE][INFO] - ----> GlobalVariable refund_transaction_token = 4456c395-279a-4b19-ab38-11b62d1301d5

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:58 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:58 - [MESSAGE][INFO] - -----> refund_transaction_token = 4456c395-279a-4b19-ab38-11b62d1301d5

2020-09-15 16:13:58 - [MESSAGE][INFO] - ----> GlobalVariable refund_transaction_token = 4456c395-279a-4b19-ab38-11b62d1301d5

2020-09-15 16:13:58 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearingRefund is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction" time="9.828" classname="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction" status="PASSED">
         <system-out><![CDATA[2020-09-15 16:13:58 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction

2020-09-15 16:13:58 - [TEST_STEP][PASSED] - card_product_token = detailed_Onboarding.detailed_onboarding.createCardProduct(start_date, card_product_name, payment_instrument, ecommerce, activate_upon_issue): detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-09-15 16:13:59 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/17.har

2020-09-15 16:13:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-09-15 16:13:59 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-09-15 16:13:59 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "2ce19780-76c7-4b2d-9389-c951379a9043",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-15T21:13:59Z",
  "last_modified_time" : "2020-09-15T21:13:59Z"
}

2020-09-15 16:13:59 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "2ce19780-76c7-4b2d-9389-c951379a9043",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-15T21:13:59Z",
  "last_modified_time" : "2020-09-15T21:13:59Z"
}

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = 2ce19780-76c7-4b2d-9389-c951379a9043

2020-09-15 16:13:59 - [MESSAGE][INFO] - -----> card_product_token = 2ce19780-76c7-4b2d-9389-c951379a9043

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = 2ce19780-76c7-4b2d-9389-c951379a9043

2020-09-15 16:13:59 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 2ce19780-76c7-4b2d-9389-c951379a9043

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:13:59 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:13:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:13:59 - [MESSAGE][INFO] - -----> card_product_token = 2ce19780-76c7-4b2d-9389-c951379a9043

2020-09-15 16:13:59 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 2ce19780-76c7-4b2d-9389-c951379a9043

2020-09-15 16:13:59 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-09-15 16:13:59 - [TEST_STEP][PASSED] - funding_source_token = detailed_Onboarding.detailed_onboarding.createCardFundingSource(program_name): detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-09-15 16:14:01 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/18.har

2020-09-15 16:14:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-09-15 16:14:01 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-09-15 16:14:01 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "2cffa351-8491-4e01-a739-dc6a9e9c3e83",
  "created_time" : "2020-09-15T21:14:01Z",
  "last_modified_time" : "2020-09-15T21:14:01Z",
  "account" : "12.003.001.000000"
}

2020-09-15 16:14:01 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "2cffa351-8491-4e01-a739-dc6a9e9c3e83",
  "created_time" : "2020-09-15T21:14:01Z",
  "last_modified_time" : "2020-09-15T21:14:01Z",
  "account" : "12.003.001.000000"
}

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - funding_token = token: null

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = 2cffa351-8491-4e01-a739-dc6a9e9c3e83

2020-09-15 16:14:01 - [MESSAGE][INFO] - -----> funding_token = 2cffa351-8491-4e01-a739-dc6a9e9c3e83

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = 2cffa351-8491-4e01-a739-dc6a9e9c3e83

2020-09-15 16:14:01 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = 2cffa351-8491-4e01-a739-dc6a9e9c3e83

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:14:01 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:14:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:14:01 - [MESSAGE][INFO] - -----> funding_source_token = 2cffa351-8491-4e01-a739-dc6a9e9c3e83

2020-09-15 16:14:01 - [MESSAGE][INFO] - ----> GlobalVariable funding_source_token = 2cffa351-8491-4e01-a739-dc6a9e9c3e83

2020-09-15 16:14:01 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-09-15 16:14:01 - [TEST_STEP][PASSED] - user_token = detailed_Onboarding.detailed_onboarding.createDetailedUser(user_first_name, user_middle_name, user_last_name, active, user_password, phone, gender, user_email, ssn_expiration_date, user_id_type, user_address1, city, user_state, country, birth_date, corporate_card_holder, user_ssn, id_card_number, id_card_expiration_date, nationality, company, uses_parent_account, user_postal_code): detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-09-15 16:14:02 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/19.har

2020-09-15 16:14:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-09-15 16:14:02 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-09-15 16:14:02 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-09-15T21:14:02Z",
  "last_modified_time" : "2020-09-15T21:14:02Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "35f9082f-1857-4e46-acf5-0f8f2d1b589d",
    "account_number" : "40013372023134418",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-09-15 16:14:02 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-09-15T21:14:02Z",
  "last_modified_time" : "2020-09-15T21:14:02Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "35f9082f-1857-4e46-acf5-0f8f2d1b589d",
    "account_number" : "40013372023134418",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - user_token = token: null

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = 744ccaf0-5bc7-47e1-a62d-ffb58c72eb73

2020-09-15 16:14:02 - [MESSAGE][INFO] - -----> user_token = 744ccaf0-5bc7-47e1-a62d-ffb58c72eb73

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = 744ccaf0-5bc7-47e1-a62d-ffb58c72eb73

2020-09-15 16:14:02 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 744ccaf0-5bc7-47e1-a62d-ffb58c72eb73

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:14:02 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:14:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:14:02 - [MESSAGE][INFO] - -----> user_token = 744ccaf0-5bc7-47e1-a62d-ffb58c72eb73

2020-09-15 16:14:02 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 744ccaf0-5bc7-47e1-a62d-ffb58c72eb73

2020-09-15 16:14:02 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-09-15 16:14:02 - [TEST_STEP][PASSED] - card_token = detailed_Onboarding.detailed_onboarding.createCard(user_token, card_product_token): detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-09-15 16:14:03 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/20.har

2020-09-15 16:14:03 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-09-15 16:14:03 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
  "card_product_token": "2ce19780-76c7-4b2d-9389-c951379a9043"
}

2020-09-15 16:14:03 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
  "card_product_token": "2ce19780-76c7-4b2d-9389-c951379a9043"
}

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-09-15T21:14:03Z",
  "last_modified_time" : "2020-09-15T21:14:03Z",
  "token" : "63728f82-f8b8-473e-abcc-93601ded8bcc",
  "user_token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
  "card_product_token" : "2ce19780-76c7-4b2d-9389-c951379a9043",
  "last_four" : "9799",
  "pan" : "111111______9799",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59Z",
  "barcode" : "27669147885949875707",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-09-15 16:14:03 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-09-15T21:14:03Z",
  "last_modified_time" : "2020-09-15T21:14:03Z",
  "token" : "63728f82-f8b8-473e-abcc-93601ded8bcc",
  "user_token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
  "card_product_token" : "2ce19780-76c7-4b2d-9389-c951379a9043",
  "last_four" : "9799",
  "pan" : "111111______9799",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59Z",
  "barcode" : "27669147885949875707",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - card_token = token: null

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = 63728f82-f8b8-473e-abcc-93601ded8bcc

2020-09-15 16:14:03 - [MESSAGE][INFO] - -----> card_token = 63728f82-f8b8-473e-abcc-93601ded8bcc

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = 63728f82-f8b8-473e-abcc-93601ded8bcc

2020-09-15 16:14:03 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 63728f82-f8b8-473e-abcc-93601ded8bcc

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:14:03 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:14:03 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:14:03 - [MESSAGE][INFO] - -----> card_token = 63728f82-f8b8-473e-abcc-93601ded8bcc

2020-09-15 16:14:03 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 63728f82-f8b8-473e-abcc-93601ded8bcc

2020-09-15 16:14:03 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-09-15 16:14:03 - [TEST_STEP][PASSED] - gpa_token = detailed_Onboarding.detailed_onboarding.createGpaOrder(user_token, gpaamount, currency_code, funding_source_token): detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-09-15 16:14:04 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/21.har

2020-09-15 16:14:05 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-09-15 16:14:05 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "2cffa351-8491-4e01-a739-dc6a9e9c3e83"
}

2020-09-15 16:14:05 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "2cffa351-8491-4e01-a739-dc6a9e9c3e83"
}

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "34f431d6-d634-4ea4-91f2-830ee3899626",
  "amount" : 10000,
  "created_time" : "2020-09-15T21:14:04Z",
  "last_modified_time" : "2020-09-15T21:14:04Z",
  "transaction_token" : "2adf29b4-6d20-4d40-85d7-933eb35b7733",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********3e83",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-09-15T21:14:01Z",
      "last_modified_time" : "2020-09-15T21:14:01Z"
    }
  },
  "funding_source_token" : "**********3e83",
  "user_token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
  "currency_code" : "USD"
}

2020-09-15 16:14:05 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "34f431d6-d634-4ea4-91f2-830ee3899626",
  "amount" : 10000,
  "created_time" : "2020-09-15T21:14:04Z",
  "last_modified_time" : "2020-09-15T21:14:04Z",
  "transaction_token" : "2adf29b4-6d20-4d40-85d7-933eb35b7733",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********3e83",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-09-15T21:14:01Z",
      "last_modified_time" : "2020-09-15T21:14:01Z"
    }
  },
  "funding_source_token" : "**********3e83",
  "user_token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
  "currency_code" : "USD"
}

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - gpa_token = token: null

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - log.logInfo("-----> gpa_token = " + gpa_token): -----> gpa_token = 34f431d6-d634-4ea4-91f2-830ee3899626

2020-09-15 16:14:05 - [MESSAGE][INFO] - -----> gpa_token = 34f431d6-d634-4ea4-91f2-830ee3899626

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - user_token = gpa_token: null

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable gpa_token = " + gpa_token): ----> GlobalVariable gpa_token = 0a2277df-d4af-4fca-8fb9-d1e74595d71f

2020-09-15 16:14:05 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 0a2277df-d4af-4fca-8fb9-d1e74595d71f

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:14:05 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:14:05 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:14:05 - [MESSAGE][INFO] - -----> gpa_token = 34f431d6-d634-4ea4-91f2-830ee3899626

2020-09-15 16:14:05 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 34f431d6-d634-4ea4-91f2-830ee3899626

2020-09-15 16:14:05 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-09-15 16:14:05 - [TEST_STEP][PASSED] - original_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuth(card_token, trans_amount1, mid, beeceptor_create_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-09-15 16:14:06 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/22.har

2020-09-15 16:14:06 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-09-15 16:14:06 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "63728f82-f8b8-473e-abcc-93601ded8bcc",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:14:06 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "63728f82-f8b8-473e-abcc-93601ded8bcc",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "70",
    "token" : "cde8867f-17a1-4bd7-a7d9-07722654a74e",
    "user_token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
    "acting_user_token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
    "card_token" : "63728f82-f8b8-473e-abcc-93601ded8bcc",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 75,
    "created_time" : "2020-09-15T21:14:05Z",
    "user_transaction_time" : "2020-09-15T21:14:05Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "580775",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "467065"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9799",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:14:05.735Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "449466175692",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111112456109799",
    "3" : "000000",
    "4" : 10.00,
    "7" : "0915211405",
    "11" : "000008467065",
    "12" : "20200915211405",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "449466175692",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1815",
    "38" : "580775",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:14:06 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "70",
    "token" : "cde8867f-17a1-4bd7-a7d9-07722654a74e",
    "user_token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
    "acting_user_token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
    "card_token" : "63728f82-f8b8-473e-abcc-93601ded8bcc",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 75,
    "created_time" : "2020-09-15T21:14:05Z",
    "user_transaction_time" : "2020-09-15T21:14:05Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "580775",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "467065"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9799",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:14:05.735Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "449466175692",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111112456109799",
    "3" : "000000",
    "4" : 10.00,
    "7" : "0915211405",
    "11" : "000008467065",
    "12" : "20200915211405",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "449466175692",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1815",
    "38" : "580775",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = cde8867f-17a1-4bd7-a7d9-07722654a74e

2020-09-15 16:14:06 - [MESSAGE][INFO] - -----> original_transaction_token = cde8867f-17a1-4bd7-a7d9-07722654a74e

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = cde8867f-17a1-4bd7-a7d9-07722654a74e

2020-09-15 16:14:06 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = cde8867f-17a1-4bd7-a7d9-07722654a74e

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:14:06 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:14:06 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:14:06 - [MESSAGE][INFO] - -----> original_transaction_token = cde8867f-17a1-4bd7-a7d9-07722654a74e

2020-09-15 16:14:06 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = cde8867f-17a1-4bd7-a7d9-07722654a74e

2020-09-15 16:14:06 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-09-15 16:14:06 - [TEST_STEP][PASSED] - advice_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuthAdvice(original_transaction_token, advice_amount, mid, beeceptor_create_auth_advice, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-09-15 16:14:07 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/23.har

2020-09-15 16:14:07 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-09-15 16:14:07 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "cde8867f-17a1-4bd7-a7d9-07722654a74e",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:14:07 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "cde8867f-17a1-4bd7-a7d9-07722654a74e",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "71",
    "token" : "65041204-f603-4b6e-bdac-2c3710eab824",
    "user_token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
    "acting_user_token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
    "card_token" : "63728f82-f8b8-473e-abcc-93601ded8bcc",
    "preceding_related_transaction_token" : "cde8867f-17a1-4bd7-a7d9-07722654a74e",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 101,
    "created_time" : "2020-09-15T21:14:06Z",
    "user_transaction_time" : "2020-09-15T21:14:05Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "580775",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000045"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9799",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:14:06.813Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "449466175692",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112456109799",
    "3" : "900000",
    "4" : 1.00,
    "7" : "0915211406",
    "11" : "000000000045",
    "12" : "20200915211406",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "449466175692",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1840",
    "38" : "580775",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "cde8867f-17a1-4bd7-a7d9-07722654a74e"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:14:07 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "71",
    "token" : "65041204-f603-4b6e-bdac-2c3710eab824",
    "user_token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
    "acting_user_token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
    "card_token" : "63728f82-f8b8-473e-abcc-93601ded8bcc",
    "preceding_related_transaction_token" : "cde8867f-17a1-4bd7-a7d9-07722654a74e",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 101,
    "created_time" : "2020-09-15T21:14:06Z",
    "user_transaction_time" : "2020-09-15T21:14:05Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "580775",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000045"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9799",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:14:06.813Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "449466175692",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112456109799",
    "3" : "900000",
    "4" : 1.00,
    "7" : "0915211406",
    "11" : "000000000045",
    "12" : "20200915211406",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "449466175692",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1840",
    "38" : "580775",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "cde8867f-17a1-4bd7-a7d9-07722654a74e"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - advice_transaction_token = token: null

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - log.logInfo("-----> advice_transaction_token = " + advice_transaction_token): -----> advice_transaction_token = 65041204-f603-4b6e-bdac-2c3710eab824

2020-09-15 16:14:07 - [MESSAGE][INFO] - -----> advice_transaction_token = 65041204-f603-4b6e-bdac-2c3710eab824

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - advice_transaction_token = advice_transaction_token: null

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable advice_transaction_token = " + advice_transaction_token): ----> GlobalVariable advice_transaction_token = 65041204-f603-4b6e-bdac-2c3710eab824

2020-09-15 16:14:07 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = 65041204-f603-4b6e-bdac-2c3710eab824

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:14:07 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:14:07 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:14:07 - [MESSAGE][INFO] - -----> advice_transaction_token = 65041204-f603-4b6e-bdac-2c3710eab824

2020-09-15 16:14:07 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = 65041204-f603-4b6e-bdac-2c3710eab824

2020-09-15 16:14:07 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-09-15 16:14:07 - [TEST_STEP][PASSED] - cleared_transaction_token = detailed_Onboarding.detailed_onboarding.createTransClearing(original_transaction_token, trans_amount1, mid, force_post, beeceptor_settle_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-09-15 16:14:08 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/24.har

2020-09-15 16:14:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 16:14:08 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "cde8867f-17a1-4bd7-a7d9-07722654a74e",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:14:08 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "cde8867f-17a1-4bd7-a7d9-07722654a74e",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "72",
    "token" : "2e26a7d7-979b-404c-848f-f230e65ca6c9",
    "user_token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
    "acting_user_token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
    "card_token" : "63728f82-f8b8-473e-abcc-93601ded8bcc",
    "preceding_related_transaction_token" : "cde8867f-17a1-4bd7-a7d9-07722654a74e",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 69,
    "created_time" : "2020-09-15T21:14:07Z",
    "user_transaction_time" : "2020-09-15T21:14:07Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "580775",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000043"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9799",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:14:07.765Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "449466175692",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112456109799",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0915211407",
    "11" : "000000000043",
    "12" : "20200915211407",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "449466175692",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1816",
    "38" : "580775",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "cde8867f-17a1-4bd7-a7d9-07722654a74e"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:14:08 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "72",
    "token" : "2e26a7d7-979b-404c-848f-f230e65ca6c9",
    "user_token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
    "acting_user_token" : "744ccaf0-5bc7-47e1-a62d-ffb58c72eb73",
    "card_token" : "63728f82-f8b8-473e-abcc-93601ded8bcc",
    "preceding_related_transaction_token" : "cde8867f-17a1-4bd7-a7d9-07722654a74e",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 69,
    "created_time" : "2020-09-15T21:14:07Z",
    "user_transaction_time" : "2020-09-15T21:14:07Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "580775",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000043"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9799",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:14:07.765Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "449466175692",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112456109799",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0915211407",
    "11" : "000000000043",
    "12" : "20200915211407",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "449466175692",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1816",
    "38" : "580775",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "cde8867f-17a1-4bd7-a7d9-07722654a74e"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - cleared_transaction_token = token: null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - log.logInfo("-----> cleared_transaction_token = " + cleared_transaction_token): -----> cleared_transaction_token = 2e26a7d7-979b-404c-848f-f230e65ca6c9

2020-09-15 16:14:08 - [MESSAGE][INFO] - -----> cleared_transaction_token = 2e26a7d7-979b-404c-848f-f230e65ca6c9

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - cleared_transaction_token = cleared_transaction_token: null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable cleared_transaction_token = " + cleared_transaction_token): ----> GlobalVariable cleared_transaction_token = 2e26a7d7-979b-404c-848f-f230e65ca6c9

2020-09-15 16:14:08 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = 2e26a7d7-979b-404c-848f-f230e65ca6c9

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:14:08 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:14:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:14:08 - [MESSAGE][INFO] - -----> cleared_transaction_token = 2e26a7d7-979b-404c-848f-f230e65ca6c9

2020-09-15 16:14:08 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = 2e26a7d7-979b-404c-848f-f230e65ca6c9

2020-09-15 16:14:08 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Declined Transaction after CardTransition/Detailed_onboarding_and_cardtransition_result_declined_transaction" time="5.97" classname="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Declined Transaction after CardTransition/Detailed_onboarding_and_cardtransition_result_declined_transaction" status="PASSED">
         <system-out><![CDATA[2020-09-15 16:14:08 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Declined Transaction after CardTransition/Detailed_onboarding_and_cardtransition_result_declined_transaction: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Declined Transaction after CardTransition/Detailed_onboarding_and_cardtransition_result_declined_transaction

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - card_product_token = detailed_Onboarding.detailed_onboarding.createCardProduct(start_date, card_product_name, payment_instrument, ecommerce, activate_upon_issue): detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-09-15 16:14:08 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/25.har

2020-09-15 16:14:08 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-09-15 16:14:08 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-09-15 16:14:08 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "af0dc82a-93e7-47a4-9819-1a73cfc20938",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-15T21:14:08Z",
  "last_modified_time" : "2020-09-15T21:14:08Z"
}

2020-09-15 16:14:08 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "af0dc82a-93e7-47a4-9819-1a73cfc20938",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-15T21:14:08Z",
  "last_modified_time" : "2020-09-15T21:14:08Z"
}

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = af0dc82a-93e7-47a4-9819-1a73cfc20938

2020-09-15 16:14:08 - [MESSAGE][INFO] - -----> card_product_token = af0dc82a-93e7-47a4-9819-1a73cfc20938

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = af0dc82a-93e7-47a4-9819-1a73cfc20938

2020-09-15 16:14:08 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = af0dc82a-93e7-47a4-9819-1a73cfc20938

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:14:08 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:14:08 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:14:08 - [MESSAGE][INFO] - -----> card_product_token = af0dc82a-93e7-47a4-9819-1a73cfc20938

2020-09-15 16:14:08 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = af0dc82a-93e7-47a4-9819-1a73cfc20938

2020-09-15 16:14:08 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-09-15 16:14:08 - [TEST_STEP][PASSED] - funding_source_token = detailed_Onboarding.detailed_onboarding.createCardFundingSource(program_name): detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-09-15 16:14:09 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/26.har

2020-09-15 16:14:09 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-09-15 16:14:09 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-09-15 16:14:09 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "e1ac7120-541a-4b3b-a99a-a9eaaf899747",
  "created_time" : "2020-09-15T21:14:09Z",
  "last_modified_time" : "2020-09-15T21:14:09Z",
  "account" : "12.003.001.000000"
}

2020-09-15 16:14:09 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "e1ac7120-541a-4b3b-a99a-a9eaaf899747",
  "created_time" : "2020-09-15T21:14:09Z",
  "last_modified_time" : "2020-09-15T21:14:09Z",
  "account" : "12.003.001.000000"
}

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - funding_token = token: null

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = e1ac7120-541a-4b3b-a99a-a9eaaf899747

2020-09-15 16:14:09 - [MESSAGE][INFO] - -----> funding_token = e1ac7120-541a-4b3b-a99a-a9eaaf899747

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = e1ac7120-541a-4b3b-a99a-a9eaaf899747

2020-09-15 16:14:09 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = e1ac7120-541a-4b3b-a99a-a9eaaf899747

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:14:09 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:14:09 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:14:09 - [MESSAGE][INFO] - -----> funding_source_token = e1ac7120-541a-4b3b-a99a-a9eaaf899747

2020-09-15 16:14:09 - [MESSAGE][INFO] - ----> GlobalVariable funding_source_token = e1ac7120-541a-4b3b-a99a-a9eaaf899747

2020-09-15 16:14:09 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-09-15 16:14:09 - [TEST_STEP][PASSED] - user_token = detailed_Onboarding.detailed_onboarding.createDetailedUser(user_first_name, user_middle_name, user_last_name, active, user_password, phone, gender, user_email, ssn_expiration_date, user_id_type, user_address1, city, user_state, country, birth_date, corporate_card_holder, user_ssn, id_card_number, id_card_expiration_date, nationality, company, uses_parent_account, user_postal_code): detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-09-15 16:14:10 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/27.har

2020-09-15 16:14:10 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-09-15 16:14:10 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-09-15 16:14:10 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "2f61440c-d1fb-4d87-ac02-72e03fd1ab7e",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-09-15T21:14:10Z",
  "last_modified_time" : "2020-09-15T21:14:10Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "359440df-9f14-457d-b402-54fb9c3e1fa9",
    "account_number" : "40013372025600002",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-09-15 16:14:10 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "2f61440c-d1fb-4d87-ac02-72e03fd1ab7e",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-09-15T21:14:10Z",
  "last_modified_time" : "2020-09-15T21:14:10Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "359440df-9f14-457d-b402-54fb9c3e1fa9",
    "account_number" : "40013372025600002",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - user_token = token: null

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = 2f61440c-d1fb-4d87-ac02-72e03fd1ab7e

2020-09-15 16:14:10 - [MESSAGE][INFO] - -----> user_token = 2f61440c-d1fb-4d87-ac02-72e03fd1ab7e

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = 2f61440c-d1fb-4d87-ac02-72e03fd1ab7e

2020-09-15 16:14:10 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 2f61440c-d1fb-4d87-ac02-72e03fd1ab7e

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:14:10 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:14:10 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:14:10 - [MESSAGE][INFO] - -----> user_token = 2f61440c-d1fb-4d87-ac02-72e03fd1ab7e

2020-09-15 16:14:10 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 2f61440c-d1fb-4d87-ac02-72e03fd1ab7e

2020-09-15 16:14:10 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-09-15 16:14:10 - [TEST_STEP][PASSED] - card_token = detailed_Onboarding.detailed_onboarding.createCard(user_token, card_product_token): detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-09-15 16:14:11 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/28.har

2020-09-15 16:14:11 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-09-15 16:14:11 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "2f61440c-d1fb-4d87-ac02-72e03fd1ab7e",
  "card_product_token": "af0dc82a-93e7-47a4-9819-1a73cfc20938"
}

2020-09-15 16:14:11 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "2f61440c-d1fb-4d87-ac02-72e03fd1ab7e",
  "card_product_token": "af0dc82a-93e7-47a4-9819-1a73cfc20938"
}

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-09-15T21:14:11Z",
  "last_modified_time" : "2020-09-15T21:14:11Z",
  "token" : "29f2d148-6f5b-477b-87c9-58aa389ffccc",
  "user_token" : "2f61440c-d1fb-4d87-ac02-72e03fd1ab7e",
  "card_product_token" : "af0dc82a-93e7-47a4-9819-1a73cfc20938",
  "last_four" : "9450",
  "pan" : "111111______9450",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59Z",
  "barcode" : "14193770430613381733",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-09-15 16:14:11 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-09-15T21:14:11Z",
  "last_modified_time" : "2020-09-15T21:14:11Z",
  "token" : "29f2d148-6f5b-477b-87c9-58aa389ffccc",
  "user_token" : "2f61440c-d1fb-4d87-ac02-72e03fd1ab7e",
  "card_product_token" : "af0dc82a-93e7-47a4-9819-1a73cfc20938",
  "last_four" : "9450",
  "pan" : "111111______9450",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59Z",
  "barcode" : "14193770430613381733",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - card_token = token: null

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = 29f2d148-6f5b-477b-87c9-58aa389ffccc

2020-09-15 16:14:11 - [MESSAGE][INFO] - -----> card_token = 29f2d148-6f5b-477b-87c9-58aa389ffccc

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = 29f2d148-6f5b-477b-87c9-58aa389ffccc

2020-09-15 16:14:11 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 29f2d148-6f5b-477b-87c9-58aa389ffccc

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:14:11 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:14:11 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:14:11 - [MESSAGE][INFO] - -----> card_token = 29f2d148-6f5b-477b-87c9-58aa389ffccc

2020-09-15 16:14:11 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 29f2d148-6f5b-477b-87c9-58aa389ffccc

2020-09-15 16:14:11 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-09-15 16:14:11 - [TEST_STEP][PASSED] - gpa_token = detailed_Onboarding.detailed_onboarding.createGpaOrder(user_token, gpaamount, currency_code, funding_source_token): detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-09-15 16:14:12 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/29.har

2020-09-15 16:14:12 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-09-15 16:14:12 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "2f61440c-d1fb-4d87-ac02-72e03fd1ab7e",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "e1ac7120-541a-4b3b-a99a-a9eaaf899747"
}

2020-09-15 16:14:12 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "2f61440c-d1fb-4d87-ac02-72e03fd1ab7e",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "e1ac7120-541a-4b3b-a99a-a9eaaf899747"
}

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "796614af-c16c-4d0e-b88e-b945ab8871d9",
  "amount" : 10000,
  "created_time" : "2020-09-15T21:14:12Z",
  "last_modified_time" : "2020-09-15T21:14:12Z",
  "transaction_token" : "459dc72c-0dc7-429f-a6c1-4e3361cda778",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********9747",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-09-15T21:14:09Z",
      "last_modified_time" : "2020-09-15T21:14:09Z"
    }
  },
  "funding_source_token" : "**********9747",
  "user_token" : "2f61440c-d1fb-4d87-ac02-72e03fd1ab7e",
  "currency_code" : "USD"
}

2020-09-15 16:14:12 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "796614af-c16c-4d0e-b88e-b945ab8871d9",
  "amount" : 10000,
  "created_time" : "2020-09-15T21:14:12Z",
  "last_modified_time" : "2020-09-15T21:14:12Z",
  "transaction_token" : "459dc72c-0dc7-429f-a6c1-4e3361cda778",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********9747",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-09-15T21:14:09Z",
      "last_modified_time" : "2020-09-15T21:14:09Z"
    }
  },
  "funding_source_token" : "**********9747",
  "user_token" : "2f61440c-d1fb-4d87-ac02-72e03fd1ab7e",
  "currency_code" : "USD"
}

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - gpa_token = token: null

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - log.logInfo("-----> gpa_token = " + gpa_token): -----> gpa_token = 796614af-c16c-4d0e-b88e-b945ab8871d9

2020-09-15 16:14:12 - [MESSAGE][INFO] - -----> gpa_token = 796614af-c16c-4d0e-b88e-b945ab8871d9

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - user_token = gpa_token: null

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable gpa_token = " + gpa_token): ----> GlobalVariable gpa_token = 34f431d6-d634-4ea4-91f2-830ee3899626

2020-09-15 16:14:12 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 34f431d6-d634-4ea4-91f2-830ee3899626

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:14:12 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:14:12 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:14:12 - [MESSAGE][INFO] - -----> gpa_token = 796614af-c16c-4d0e-b88e-b945ab8871d9

2020-09-15 16:14:12 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 796614af-c16c-4d0e-b88e-b945ab8871d9

2020-09-15 16:14:12 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-09-15 16:14:12 - [TEST_STEP][PASSED] - detailed_Onboarding.detailed_onboarding.createCardTransition(card_token, "SUSPENDED", channel, "01"): detailed_Onboarding.detailed_onboarding.createCardTransition is PASSED

2020-09-15 16:14:13 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/30.har

2020-09-15 16:14:13 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:14:13 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:14:13 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:14:13 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:14:13 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:14:13 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardtransitions

2020-09-15 16:14:13 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardtransitions

2020-09-15 16:14:13 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "29f2d148-6f5b-477b-87c9-58aa389ffccc",
  "state": "SUSPENDED",
  "channel": "API",
  "reason_code": "01"
}

2020-09-15 16:14:13 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "29f2d148-6f5b-477b-87c9-58aa389ffccc",
  "state": "SUSPENDED",
  "channel": "API",
  "reason_code": "01"
}

2020-09-15 16:14:13 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:14:13 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:14:13 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "e659e494-cded-409e-b5ea-9cb82909faf4",
  "card_token" : "29f2d148-6f5b-477b-87c9-58aa389ffccc",
  "user_token" : "2f61440c-d1fb-4d87-ac02-72e03fd1ab7e",
  "state" : "SUSPENDED",
  "reason" : "Suspended card",
  "reason_code" : "01",
  "channel" : "API",
  "fulfillment_status" : "ISSUED",
  "validations" : {
    "user" : {
      "birth_date" : false,
      "phone" : false,
      "ssn" : false,
      "random_name_line1_postfix" : false
    }
  },
  "type" : "state.suspended",
  "created_time" : "2020-09-15T21:14:13Z",
  "card_product_token" : "af0dc82a-93e7-47a4-9819-1a73cfc20938",
  "last_four" : "9450",
  "pan" : "111111______9450",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59.000Z",
  "barcode" : "14193770430613381733",
  "pin_is_set" : false,
  "user" : {
    "metadata" : { }
  },
  "card" : {
    "metadata" : { }
  }
}

2020-09-15 16:14:13 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "e659e494-cded-409e-b5ea-9cb82909faf4",
  "card_token" : "29f2d148-6f5b-477b-87c9-58aa389ffccc",
  "user_token" : "2f61440c-d1fb-4d87-ac02-72e03fd1ab7e",
  "state" : "SUSPENDED",
  "reason" : "Suspended card",
  "reason_code" : "01",
  "channel" : "API",
  "fulfillment_status" : "ISSUED",
  "validations" : {
    "user" : {
      "birth_date" : false,
      "phone" : false,
      "ssn" : false,
      "random_name_line1_postfix" : false
    }
  },
  "type" : "state.suspended",
  "created_time" : "2020-09-15T21:14:13Z",
  "card_product_token" : "af0dc82a-93e7-47a4-9819-1a73cfc20938",
  "last_four" : "9450",
  "pan" : "111111______9450",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59.000Z",
  "barcode" : "14193770430613381733",
  "pin_is_set" : false,
  "user" : {
    "metadata" : { }
  },
  "card" : {
    "metadata" : { }
  }
}

2020-09-15 16:14:13 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:14:13 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:14:13 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:14:13 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:14:13 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:14:13 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:14:13 - [MESSAGE][INFO] - -----> transition_reason = Suspended card

2020-09-15 16:14:13 - [MESSAGE][INFO] - -----> transitionState = SUSPENDED

2020-09-15 16:14:13 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardTransition is PASSED

2020-09-15 16:14:13 - [TEST_STEP][PASSED] - original_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuthDeclined(card_token, trans_amount1, mid, beeceptor_declined_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuthDeclined is PASSED

2020-09-15 16:14:13 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_161327/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_161327/requests/main/31.har

2020-09-15 16:14:14 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-09-15 16:14:14 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "29f2d148-6f5b-477b-87c9-58aa389ffccc",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "${beeceptor_create_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:14:14 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "29f2d148-6f5b-477b-87c9-58aa389ffccc",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "${beeceptor_create_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "DECLINED",
    "identifier" : "74",
    "token" : "24ac9b16-48a6-48dd-8d63-bd123b056345",
    "user_token" : "2f61440c-d1fb-4d87-ac02-72e03fd1ab7e",
    "acting_user_token" : "2f61440c-d1fb-4d87-ac02-72e03fd1ab7e",
    "card_token" : "29f2d148-6f5b-477b-87c9-58aa389ffccc",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 10000.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 10000.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00
        }
      }
    },
    "duration" : 21,
    "created_time" : "2020-09-15T21:14:13Z",
    "user_transaction_time" : "2020-09-15T21:14:13Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "response" : {
      "code" : "1003",
      "memo" : "Card suspended"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "088415"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9450",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:14:13.803Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "641979239326",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111114042099450",
    "3" : "000000",
    "4" : 10.00,
    "7" : "0915211413",
    "11" : "000003088415",
    "12" : "20200915211413",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "641979239326",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1841",
    "39" : "0014",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Card suspended",
      "2" : "Card suspended",
      "3" : "59",
      "4" : "Card suspended"
    },
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:14:14 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "DECLINED",
    "identifier" : "74",
    "token" : "24ac9b16-48a6-48dd-8d63-bd123b056345",
    "user_token" : "2f61440c-d1fb-4d87-ac02-72e03fd1ab7e",
    "acting_user_token" : "2f61440c-d1fb-4d87-ac02-72e03fd1ab7e",
    "card_token" : "29f2d148-6f5b-477b-87c9-58aa389ffccc",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 10000.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 10000.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00
        }
      }
    },
    "duration" : 21,
    "created_time" : "2020-09-15T21:14:13Z",
    "user_transaction_time" : "2020-09-15T21:14:13Z",
    "settlement_date" : "2020-09-15T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "response" : {
      "code" : "1003",
      "memo" : "Card suspended"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "088415"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9450",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-15T21:14:13.803Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "641979239326",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111114042099450",
    "3" : "000000",
    "4" : 10.00,
    "7" : "0915211413",
    "11" : "000003088415",
    "12" : "20200915211413",
    "13" : "200915",
    "14" : "2409",
    "15" : "20200915",
    "17" : "0915",
    "21" : "641979239326",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1841",
    "39" : "0014",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Card suspended",
      "2" : "Card suspended",
      "3" : "59",
      "4" : "Card suspended"
    },
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - declinedState = state: null

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - log.logInfo("-----> transaction.state = " + declinedState): -----> transaction.state = DECLINED

2020-09-15 16:14:14 - [MESSAGE][INFO] - -----> transaction.state = DECLINED

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - verifyElementPropertyValue(response, "transaction.state", "DECLINED"): Verify element property value successfully

2020-09-15 16:14:14 - [MESSAGE][PASSED] - Verify element property value successfully

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - declined_response_reason = memo: null

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - log.logInfo("-----> declined_response_reason = " + declined_response_reason): -----> declined_response_reason = Card suspended

2020-09-15 16:14:14 - [MESSAGE][INFO] - -----> declined_response_reason = Card suspended

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = 24ac9b16-48a6-48dd-8d63-bd123b056345

2020-09-15 16:14:14 - [MESSAGE][INFO] - -----> original_transaction_token = 24ac9b16-48a6-48dd-8d63-bd123b056345

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = 24ac9b16-48a6-48dd-8d63-bd123b056345

2020-09-15 16:14:14 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 24ac9b16-48a6-48dd-8d63-bd123b056345

2020-09-15 16:14:14 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 16:14:14 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 16:14:14 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 16:14:14 - [MESSAGE][INFO] - -----> original_transaction_token = 24ac9b16-48a6-48dd-8d63-bd123b056345

2020-09-15 16:14:14 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 24ac9b16-48a6-48dd-8d63-bd123b056345

2020-09-15 16:14:14 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuthDeclined is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2020-09-15 16:13:36 - [TEST_SUITE][PASSED] - Detailed_Onboarding_With_Transactions: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Declined Transaction after CardTransition/Detailed_onboarding_and_cardtransition_result_declined_transaction]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
