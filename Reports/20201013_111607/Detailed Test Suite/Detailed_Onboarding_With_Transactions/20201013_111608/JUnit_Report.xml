<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Detailed_Onboarding_With_Transactions" time="25.767" tests="4" failures="0" errors="0">
   <testsuite name="Detailed_Onboarding_With_Transactions" tests="4" failures="0" errors="0" time="25.767" timestamp="2020-10-13 11:16:12" hostname="csmall - csmall-mbp" id="Test Suites/Detailed Test Suite/Detailed_Onboarding_With_Transactions">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="/Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608"/>
         <property name="logFiles" value="/Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="csmall - csmall-mbp"/>
         <property name="hostAddress" value="192.168.1.45"/>
         <property name="os" value="Mac OS X 64bit"/>
         <property name="katalonVersion" value="null.null"/>
      </properties>
      <testcase name="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Declined Transaction after CardTransition/Detailed_onboarding_and_cardtransition_result_declined_transaction" time="7.432" classname="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Declined Transaction after CardTransition/Detailed_onboarding_and_cardtransition_result_declined_transaction" status="PASSED">
         <system-out><![CDATA[2020-10-13 11:16:12 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Declined Transaction after CardTransition/Detailed_onboarding_and_cardtransition_result_declined_transaction: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Declined Transaction after CardTransition/Detailed_onboarding_and_cardtransition_result_declined_transaction

2020-10-13 11:16:12 - [TEST_STEP][PASSED] - card_product_token = detailed_Onboarding.detailed_onboarding.createCardProduct(start_date, card_product_name, payment_instrument, ecommerce, activate_upon_issue): detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-10-13 11:16:15 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/0.har

2020-10-13 11:16:15 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:16:16 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:16:16 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "f0b74009-59f3-4bd9-bc89-57ac21efcf38",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:16:15Z",
  "last_modified_time" : "2020-10-13T16:16:15Z"
}

2020-10-13 11:16:16 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "f0b74009-59f3-4bd9-bc89-57ac21efcf38",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:16:15Z",
  "last_modified_time" : "2020-10-13T16:16:15Z"
}

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = f0b74009-59f3-4bd9-bc89-57ac21efcf38

2020-10-13 11:16:16 - [MESSAGE][INFO] - -----> card_product_token = f0b74009-59f3-4bd9-bc89-57ac21efcf38

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = f0b74009-59f3-4bd9-bc89-57ac21efcf38

2020-10-13 11:16:16 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = f0b74009-59f3-4bd9-bc89-57ac21efcf38

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:16 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:16 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:16 - [MESSAGE][INFO] - -----> card_product_token = f0b74009-59f3-4bd9-bc89-57ac21efcf38

2020-10-13 11:16:16 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = f0b74009-59f3-4bd9-bc89-57ac21efcf38

2020-10-13 11:16:16 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - funding_source_token = detailed_Onboarding.detailed_onboarding.createCardFundingSource(program_name): detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-10-13 11:16:16 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/1.har

2020-10-13 11:16:16 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:16:16 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:16:16 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "5a7d59c0-fdc2-4dbc-8412-b1afb74406bb",
  "created_time" : "2020-10-13T16:16:16Z",
  "last_modified_time" : "2020-10-13T16:16:16Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:16:16 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "5a7d59c0-fdc2-4dbc-8412-b1afb74406bb",
  "created_time" : "2020-10-13T16:16:16Z",
  "last_modified_time" : "2020-10-13T16:16:16Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - funding_token = token: null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = 5a7d59c0-fdc2-4dbc-8412-b1afb74406bb

2020-10-13 11:16:16 - [MESSAGE][INFO] - -----> funding_token = 5a7d59c0-fdc2-4dbc-8412-b1afb74406bb

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = 5a7d59c0-fdc2-4dbc-8412-b1afb74406bb

2020-10-13 11:16:16 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = 5a7d59c0-fdc2-4dbc-8412-b1afb74406bb

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:16 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:16 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:16 - [MESSAGE][INFO] - -----> funding_source_token = 5a7d59c0-fdc2-4dbc-8412-b1afb74406bb

2020-10-13 11:16:16 - [MESSAGE][INFO] - ----> GlobalVariable funding_source_token = 5a7d59c0-fdc2-4dbc-8412-b1afb74406bb

2020-10-13 11:16:16 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-10-13 11:16:16 - [TEST_STEP][PASSED] - user_token = detailed_Onboarding.detailed_onboarding.createDetailedUser(user_first_name, user_middle_name, user_last_name, active, user_password, phone, gender, user_email, ssn_expiration_date, user_id_type, user_address1, city, user_state, country, birth_date, corporate_card_holder, user_ssn, id_card_number, id_card_expiration_date, nationality, company, uses_parent_account, user_postal_code): detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-10-13 11:16:17 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/2.har

2020-10-13 11:16:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:16:17 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:16:17 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:16:17Z",
  "last_modified_time" : "2020-10-13T16:16:17Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "a55c14aa-7d04-418f-9deb-0a47dc19612d",
    "account_number" : "40013372474583212",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:16:17 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:16:17Z",
  "last_modified_time" : "2020-10-13T16:16:17Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "a55c14aa-7d04-418f-9deb-0a47dc19612d",
    "account_number" : "40013372474583212",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - user_token = token: null

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b

2020-10-13 11:16:17 - [MESSAGE][INFO] - -----> user_token = ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b

2020-10-13 11:16:17 - [MESSAGE][INFO] - ----> GlobalVariable user_token = ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:17 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:17 - [MESSAGE][INFO] - -----> user_token = ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b

2020-10-13 11:16:17 - [MESSAGE][INFO] - ----> GlobalVariable user_token = ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b

2020-10-13 11:16:17 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-10-13 11:16:17 - [TEST_STEP][PASSED] - card_token = detailed_Onboarding.detailed_onboarding.createCard(user_token, card_product_token): detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-10-13 11:16:18 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/3.har

2020-10-13 11:16:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:16:18 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b",
  "card_product_token": "f0b74009-59f3-4bd9-bc89-57ac21efcf38"
}

2020-10-13 11:16:18 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b",
  "card_product_token": "f0b74009-59f3-4bd9-bc89-57ac21efcf38"
}

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-10-13T16:16:18Z",
  "last_modified_time" : "2020-10-13T16:16:18Z",
  "token" : "f7e13f9f-1b47-40e2-bb55-3fe4f0e2ad6f",
  "user_token" : "ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b",
  "card_product_token" : "f0b74009-59f3-4bd9-bc89-57ac21efcf38",
  "last_four" : "4945",
  "pan" : "111111______4945",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "28228769507324282772",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:16:18 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-10-13T16:16:18Z",
  "last_modified_time" : "2020-10-13T16:16:18Z",
  "token" : "f7e13f9f-1b47-40e2-bb55-3fe4f0e2ad6f",
  "user_token" : "ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b",
  "card_product_token" : "f0b74009-59f3-4bd9-bc89-57ac21efcf38",
  "last_four" : "4945",
  "pan" : "111111______4945",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "28228769507324282772",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - card_token = token: null

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = f7e13f9f-1b47-40e2-bb55-3fe4f0e2ad6f

2020-10-13 11:16:18 - [MESSAGE][INFO] - -----> card_token = f7e13f9f-1b47-40e2-bb55-3fe4f0e2ad6f

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = f7e13f9f-1b47-40e2-bb55-3fe4f0e2ad6f

2020-10-13 11:16:18 - [MESSAGE][INFO] - ----> GlobalVariable card_token = f7e13f9f-1b47-40e2-bb55-3fe4f0e2ad6f

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:18 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:18 - [MESSAGE][INFO] - -----> card_token = f7e13f9f-1b47-40e2-bb55-3fe4f0e2ad6f

2020-10-13 11:16:18 - [MESSAGE][INFO] - ----> GlobalVariable card_token = f7e13f9f-1b47-40e2-bb55-3fe4f0e2ad6f

2020-10-13 11:16:18 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-10-13 11:16:18 - [TEST_STEP][PASSED] - gpa_token = detailed_Onboarding.detailed_onboarding.createGpaOrder(user_token, gpaamount, currency_code, funding_source_token): detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-10-13 11:16:18 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/4.har

2020-10-13 11:16:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-10-13 11:16:19 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "5a7d59c0-fdc2-4dbc-8412-b1afb74406bb"
}

2020-10-13 11:16:19 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "5a7d59c0-fdc2-4dbc-8412-b1afb74406bb"
}

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "6f3acb6e-3314-4381-8511-404010560389",
  "amount" : 10000,
  "created_time" : "2020-10-13T16:16:18Z",
  "last_modified_time" : "2020-10-13T16:16:18Z",
  "transaction_token" : "ad9f98cc-4b27-4296-ad0a-b64e24901259",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********06bb",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-10-13T16:16:16Z",
      "last_modified_time" : "2020-10-13T16:16:16Z"
    }
  },
  "funding_source_token" : "**********06bb",
  "user_token" : "ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b",
  "currency_code" : "USD"
}

2020-10-13 11:16:19 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "6f3acb6e-3314-4381-8511-404010560389",
  "amount" : 10000,
  "created_time" : "2020-10-13T16:16:18Z",
  "last_modified_time" : "2020-10-13T16:16:18Z",
  "transaction_token" : "ad9f98cc-4b27-4296-ad0a-b64e24901259",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********06bb",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-10-13T16:16:16Z",
      "last_modified_time" : "2020-10-13T16:16:16Z"
    }
  },
  "funding_source_token" : "**********06bb",
  "user_token" : "ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b",
  "currency_code" : "USD"
}

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - gpa_token = token: null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - log.logInfo("-----> gpa_token = " + gpa_token): -----> gpa_token = 6f3acb6e-3314-4381-8511-404010560389

2020-10-13 11:16:19 - [MESSAGE][INFO] - -----> gpa_token = 6f3acb6e-3314-4381-8511-404010560389

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - user_token = gpa_token: null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable gpa_token = " + gpa_token): ----> GlobalVariable gpa_token = 

2020-10-13 11:16:19 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:19 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:19 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:19 - [MESSAGE][INFO] - -----> gpa_token = 6f3acb6e-3314-4381-8511-404010560389

2020-10-13 11:16:19 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 6f3acb6e-3314-4381-8511-404010560389

2020-10-13 11:16:19 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - detailed_Onboarding.detailed_onboarding.createCardTransition(card_token, "SUSPENDED", channel, "01"): detailed_Onboarding.detailed_onboarding.createCardTransition is PASSED

2020-10-13 11:16:19 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/5.har

2020-10-13 11:16:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardtransitions

2020-10-13 11:16:19 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardtransitions

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "f7e13f9f-1b47-40e2-bb55-3fe4f0e2ad6f",
  "state": "SUSPENDED",
  "channel": "API",
  "reason_code": "01"
}

2020-10-13 11:16:19 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "f7e13f9f-1b47-40e2-bb55-3fe4f0e2ad6f",
  "state": "SUSPENDED",
  "channel": "API",
  "reason_code": "01"
}

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "29a5caeb-f64d-479c-a24a-ff61d65305a3",
  "card_token" : "f7e13f9f-1b47-40e2-bb55-3fe4f0e2ad6f",
  "user_token" : "ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b",
  "state" : "SUSPENDED",
  "reason" : "Suspended card",
  "reason_code" : "01",
  "channel" : "API",
  "fulfillment_status" : "ISSUED",
  "validations" : {
    "user" : {
      "birth_date" : false,
      "phone" : false,
      "ssn" : false,
      "random_name_line1_postfix" : false
    }
  },
  "type" : "state.suspended",
  "created_time" : "2020-10-13T16:16:19Z",
  "card_product_token" : "f0b74009-59f3-4bd9-bc89-57ac21efcf38",
  "last_four" : "4945",
  "pan" : "111111______4945",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59.000Z",
  "barcode" : "28228769507324282772",
  "pin_is_set" : false,
  "user" : {
    "metadata" : { }
  },
  "card" : {
    "metadata" : { }
  }
}

2020-10-13 11:16:19 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "29a5caeb-f64d-479c-a24a-ff61d65305a3",
  "card_token" : "f7e13f9f-1b47-40e2-bb55-3fe4f0e2ad6f",
  "user_token" : "ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b",
  "state" : "SUSPENDED",
  "reason" : "Suspended card",
  "reason_code" : "01",
  "channel" : "API",
  "fulfillment_status" : "ISSUED",
  "validations" : {
    "user" : {
      "birth_date" : false,
      "phone" : false,
      "ssn" : false,
      "random_name_line1_postfix" : false
    }
  },
  "type" : "state.suspended",
  "created_time" : "2020-10-13T16:16:19Z",
  "card_product_token" : "f0b74009-59f3-4bd9-bc89-57ac21efcf38",
  "last_four" : "4945",
  "pan" : "111111______4945",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59.000Z",
  "barcode" : "28228769507324282772",
  "pin_is_set" : false,
  "user" : {
    "metadata" : { }
  },
  "card" : {
    "metadata" : { }
  }
}

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:19 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:19 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:19 - [MESSAGE][INFO] - -----> transition_reason = Suspended card

2020-10-13 11:16:19 - [MESSAGE][INFO] - -----> transitionState = SUSPENDED

2020-10-13 11:16:19 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardTransition is PASSED

2020-10-13 11:16:19 - [TEST_STEP][PASSED] - original_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuthDeclined(card_token, trans_amount1, mid, beeceptor_declined_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuthDeclined is PASSED

2020-10-13 11:16:20 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/6.har

2020-10-13 11:16:20 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-10-13 11:16:20 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "f7e13f9f-1b47-40e2-bb55-3fe4f0e2ad6f",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/declined-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:20 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "f7e13f9f-1b47-40e2-bb55-3fe4f0e2ad6f",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/declined-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "DECLINED",
    "identifier" : "188",
    "token" : "b53688a4-9984-492f-9e22-655d865cd02b",
    "user_token" : "ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b",
    "acting_user_token" : "ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b",
    "card_token" : "f7e13f9f-1b47-40e2-bb55-3fe4f0e2ad6f",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 10000.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 10000.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00
        }
      }
    },
    "duration" : 22,
    "created_time" : "2020-10-13T16:16:19Z",
    "user_transaction_time" : "2020-10-13T16:16:19Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "response" : {
      "code" : "1003",
      "memo" : "Card suspended"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "297571"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "4945",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:19.921Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "942933115864",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111112800664945",
    "3" : "000000",
    "4" : 10.00,
    "7" : "1013161619",
    "11" : "000006297571",
    "12" : "20201013161619",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "942933115864",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1079",
    "39" : "0014",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Card suspended",
      "2" : "Card suspended",
      "3" : "59",
      "4" : "Card suspended"
    },
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:20 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "DECLINED",
    "identifier" : "188",
    "token" : "b53688a4-9984-492f-9e22-655d865cd02b",
    "user_token" : "ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b",
    "acting_user_token" : "ca0aa9ca-88e1-40fc-8a13-d81c5c3b619b",
    "card_token" : "f7e13f9f-1b47-40e2-bb55-3fe4f0e2ad6f",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 10000.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 10000.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00
        }
      }
    },
    "duration" : 22,
    "created_time" : "2020-10-13T16:16:19Z",
    "user_transaction_time" : "2020-10-13T16:16:19Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "response" : {
      "code" : "1003",
      "memo" : "Card suspended"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "297571"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "4945",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:19.921Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "942933115864",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111112800664945",
    "3" : "000000",
    "4" : 10.00,
    "7" : "1013161619",
    "11" : "000006297571",
    "12" : "20201013161619",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "942933115864",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1079",
    "39" : "0014",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Card suspended",
      "2" : "Card suspended",
      "3" : "59",
      "4" : "Card suspended"
    },
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - declinedState = state: null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - log.logInfo("-----> transaction.state = " + declinedState): -----> transaction.state = DECLINED

2020-10-13 11:16:20 - [MESSAGE][INFO] - -----> transaction.state = DECLINED

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - verifyElementPropertyValue(response, "transaction.state", "DECLINED"): Verify element property value successfully

2020-10-13 11:16:20 - [MESSAGE][PASSED] - Verify element property value successfully

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - declined_response_reason = memo: null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - log.logInfo("-----> declined_response_reason = " + declined_response_reason): -----> declined_response_reason = Card suspended

2020-10-13 11:16:20 - [MESSAGE][INFO] - -----> declined_response_reason = Card suspended

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = b53688a4-9984-492f-9e22-655d865cd02b

2020-10-13 11:16:20 - [MESSAGE][INFO] - -----> original_transaction_token = b53688a4-9984-492f-9e22-655d865cd02b

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = b53688a4-9984-492f-9e22-655d865cd02b

2020-10-13 11:16:20 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = b53688a4-9984-492f-9e22-655d865cd02b

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:20 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:20 - [MESSAGE][INFO] - -----> original_transaction_token = b53688a4-9984-492f-9e22-655d865cd02b

2020-10-13 11:16:20 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = b53688a4-9984-492f-9e22-655d865cd02b

2020-10-13 11:16:20 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuthDeclined is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction" time="5.619" classname="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction" status="PASSED">
         <system-out><![CDATA[2020-10-13 11:16:20 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - card_product_token = detailed_Onboarding.detailed_onboarding.createCardProduct(start_date, card_product_name, payment_instrument, ecommerce, activate_upon_issue): detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-10-13 11:16:20 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/7.har

2020-10-13 11:16:20 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:16:20 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:16:20 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "b30e79e6-2cd5-46b2-9d1c-7004ba3cbb7b",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:16:20Z",
  "last_modified_time" : "2020-10-13T16:16:20Z"
}

2020-10-13 11:16:20 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "b30e79e6-2cd5-46b2-9d1c-7004ba3cbb7b",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:16:20Z",
  "last_modified_time" : "2020-10-13T16:16:20Z"
}

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = b30e79e6-2cd5-46b2-9d1c-7004ba3cbb7b

2020-10-13 11:16:20 - [MESSAGE][INFO] - -----> card_product_token = b30e79e6-2cd5-46b2-9d1c-7004ba3cbb7b

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = b30e79e6-2cd5-46b2-9d1c-7004ba3cbb7b

2020-10-13 11:16:20 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = b30e79e6-2cd5-46b2-9d1c-7004ba3cbb7b

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:20 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:20 - [MESSAGE][INFO] - -----> card_product_token = b30e79e6-2cd5-46b2-9d1c-7004ba3cbb7b

2020-10-13 11:16:20 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = b30e79e6-2cd5-46b2-9d1c-7004ba3cbb7b

2020-10-13 11:16:20 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-10-13 11:16:20 - [TEST_STEP][PASSED] - funding_source_token = detailed_Onboarding.detailed_onboarding.createCardFundingSource(program_name): detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-10-13 11:16:21 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/8.har

2020-10-13 11:16:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:16:21 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:16:21 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "5fe6519f-cc6c-4154-95ee-eaa0bc9531d3",
  "created_time" : "2020-10-13T16:16:21Z",
  "last_modified_time" : "2020-10-13T16:16:21Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:16:21 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "5fe6519f-cc6c-4154-95ee-eaa0bc9531d3",
  "created_time" : "2020-10-13T16:16:21Z",
  "last_modified_time" : "2020-10-13T16:16:21Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - funding_token = token: null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = 5fe6519f-cc6c-4154-95ee-eaa0bc9531d3

2020-10-13 11:16:21 - [MESSAGE][INFO] - -----> funding_token = 5fe6519f-cc6c-4154-95ee-eaa0bc9531d3

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = 5fe6519f-cc6c-4154-95ee-eaa0bc9531d3

2020-10-13 11:16:21 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = 5fe6519f-cc6c-4154-95ee-eaa0bc9531d3

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:21 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:21 - [MESSAGE][INFO] - -----> funding_source_token = 5fe6519f-cc6c-4154-95ee-eaa0bc9531d3

2020-10-13 11:16:21 - [MESSAGE][INFO] - ----> GlobalVariable funding_source_token = 5fe6519f-cc6c-4154-95ee-eaa0bc9531d3

2020-10-13 11:16:21 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - user_token = detailed_Onboarding.detailed_onboarding.createDetailedUser(user_first_name, user_middle_name, user_last_name, active, user_password, phone, gender, user_email, ssn_expiration_date, user_id_type, user_address1, city, user_state, country, birth_date, corporate_card_holder, user_ssn, id_card_number, id_card_expiration_date, nationality, company, uses_parent_account, user_postal_code): detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-10-13 11:16:21 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/9.har

2020-10-13 11:16:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:16:21 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:16:21 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:16:21Z",
  "last_modified_time" : "2020-10-13T16:16:21Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "2bf00d82-cc54-4170-b1ff-6fe4c6a018ae",
    "account_number" : "40013372497871362",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:16:21 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:16:21Z",
  "last_modified_time" : "2020-10-13T16:16:21Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "2bf00d82-cc54-4170-b1ff-6fe4c6a018ae",
    "account_number" : "40013372497871362",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - user_token = token: null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = 014cc803-a897-4e6f-831a-11f9ff578d99

2020-10-13 11:16:21 - [MESSAGE][INFO] - -----> user_token = 014cc803-a897-4e6f-831a-11f9ff578d99

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = 014cc803-a897-4e6f-831a-11f9ff578d99

2020-10-13 11:16:21 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 014cc803-a897-4e6f-831a-11f9ff578d99

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:21 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:21 - [MESSAGE][INFO] - -----> user_token = 014cc803-a897-4e6f-831a-11f9ff578d99

2020-10-13 11:16:21 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 014cc803-a897-4e6f-831a-11f9ff578d99

2020-10-13 11:16:21 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-10-13 11:16:21 - [TEST_STEP][PASSED] - card_token = detailed_Onboarding.detailed_onboarding.createCard(user_token, card_product_token): detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-10-13 11:16:22 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/10.har

2020-10-13 11:16:22 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:16:23 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "014cc803-a897-4e6f-831a-11f9ff578d99",
  "card_product_token": "b30e79e6-2cd5-46b2-9d1c-7004ba3cbb7b"
}

2020-10-13 11:16:23 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "014cc803-a897-4e6f-831a-11f9ff578d99",
  "card_product_token": "b30e79e6-2cd5-46b2-9d1c-7004ba3cbb7b"
}

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-10-13T16:16:22Z",
  "last_modified_time" : "2020-10-13T16:16:22Z",
  "token" : "ed20af36-0916-4ecf-9517-03a077a75e77",
  "user_token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
  "card_product_token" : "b30e79e6-2cd5-46b2-9d1c-7004ba3cbb7b",
  "last_four" : "4945",
  "pan" : "111111______4945",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "23213437103601688614",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:16:23 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-10-13T16:16:22Z",
  "last_modified_time" : "2020-10-13T16:16:22Z",
  "token" : "ed20af36-0916-4ecf-9517-03a077a75e77",
  "user_token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
  "card_product_token" : "b30e79e6-2cd5-46b2-9d1c-7004ba3cbb7b",
  "last_four" : "4945",
  "pan" : "111111______4945",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "23213437103601688614",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - card_token = token: null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = ed20af36-0916-4ecf-9517-03a077a75e77

2020-10-13 11:16:23 - [MESSAGE][INFO] - -----> card_token = ed20af36-0916-4ecf-9517-03a077a75e77

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = ed20af36-0916-4ecf-9517-03a077a75e77

2020-10-13 11:16:23 - [MESSAGE][INFO] - ----> GlobalVariable card_token = ed20af36-0916-4ecf-9517-03a077a75e77

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:23 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:23 - [MESSAGE][INFO] - -----> card_token = ed20af36-0916-4ecf-9517-03a077a75e77

2020-10-13 11:16:23 - [MESSAGE][INFO] - ----> GlobalVariable card_token = ed20af36-0916-4ecf-9517-03a077a75e77

2020-10-13 11:16:23 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - gpa_token = detailed_Onboarding.detailed_onboarding.createGpaOrder(user_token, gpaamount, currency_code, funding_source_token): detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-10-13 11:16:23 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/11.har

2020-10-13 11:16:23 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-10-13 11:16:23 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "014cc803-a897-4e6f-831a-11f9ff578d99",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "5fe6519f-cc6c-4154-95ee-eaa0bc9531d3"
}

2020-10-13 11:16:23 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "014cc803-a897-4e6f-831a-11f9ff578d99",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "5fe6519f-cc6c-4154-95ee-eaa0bc9531d3"
}

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "8e995185-0850-4f96-b424-8705947cc11b",
  "amount" : 10000,
  "created_time" : "2020-10-13T16:16:23Z",
  "last_modified_time" : "2020-10-13T16:16:23Z",
  "transaction_token" : "6fd945d8-8de9-4e63-8274-910c67bcf414",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********31d3",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-10-13T16:16:21Z",
      "last_modified_time" : "2020-10-13T16:16:21Z"
    }
  },
  "funding_source_token" : "**********31d3",
  "user_token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
  "currency_code" : "USD"
}

2020-10-13 11:16:23 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "8e995185-0850-4f96-b424-8705947cc11b",
  "amount" : 10000,
  "created_time" : "2020-10-13T16:16:23Z",
  "last_modified_time" : "2020-10-13T16:16:23Z",
  "transaction_token" : "6fd945d8-8de9-4e63-8274-910c67bcf414",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********31d3",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-10-13T16:16:21Z",
      "last_modified_time" : "2020-10-13T16:16:21Z"
    }
  },
  "funding_source_token" : "**********31d3",
  "user_token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
  "currency_code" : "USD"
}

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - gpa_token = token: null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - log.logInfo("-----> gpa_token = " + gpa_token): -----> gpa_token = 8e995185-0850-4f96-b424-8705947cc11b

2020-10-13 11:16:23 - [MESSAGE][INFO] - -----> gpa_token = 8e995185-0850-4f96-b424-8705947cc11b

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - user_token = gpa_token: null

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable gpa_token = " + gpa_token): ----> GlobalVariable gpa_token = 6f3acb6e-3314-4381-8511-404010560389

2020-10-13 11:16:23 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 6f3acb6e-3314-4381-8511-404010560389

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:23 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:23 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:23 - [MESSAGE][INFO] - -----> gpa_token = 8e995185-0850-4f96-b424-8705947cc11b

2020-10-13 11:16:23 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 8e995185-0850-4f96-b424-8705947cc11b

2020-10-13 11:16:23 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-10-13 11:16:23 - [TEST_STEP][PASSED] - original_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuth(card_token, trans_amount1, mid, beeceptor_create_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-10-13 11:16:24 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/12.har

2020-10-13 11:16:24 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-10-13 11:16:24 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "ed20af36-0916-4ecf-9517-03a077a75e77",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:24 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "ed20af36-0916-4ecf-9517-03a077a75e77",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "190",
    "token" : "1ec997e4-cee6-44c9-b0de-438bb067de8e",
    "user_token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
    "acting_user_token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
    "card_token" : "ed20af36-0916-4ecf-9517-03a077a75e77",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 78,
    "created_time" : "2020-10-13T16:16:24Z",
    "user_transaction_time" : "2020-10-13T16:16:24Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "912860",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "275229"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "4945",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:24.014Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "936781661173",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111111417224945",
    "3" : "000000",
    "4" : 10.00,
    "7" : "1013161624",
    "11" : "000009275229",
    "12" : "20201013161624",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "936781661173",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1115",
    "38" : "912860",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:24 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "190",
    "token" : "1ec997e4-cee6-44c9-b0de-438bb067de8e",
    "user_token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
    "acting_user_token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
    "card_token" : "ed20af36-0916-4ecf-9517-03a077a75e77",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 78,
    "created_time" : "2020-10-13T16:16:24Z",
    "user_transaction_time" : "2020-10-13T16:16:24Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "912860",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "275229"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "4945",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:24.014Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "936781661173",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111111417224945",
    "3" : "000000",
    "4" : 10.00,
    "7" : "1013161624",
    "11" : "000009275229",
    "12" : "20201013161624",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "936781661173",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1115",
    "38" : "912860",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = 1ec997e4-cee6-44c9-b0de-438bb067de8e

2020-10-13 11:16:24 - [MESSAGE][INFO] - -----> original_transaction_token = 1ec997e4-cee6-44c9-b0de-438bb067de8e

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = 1ec997e4-cee6-44c9-b0de-438bb067de8e

2020-10-13 11:16:24 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 1ec997e4-cee6-44c9-b0de-438bb067de8e

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:24 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:24 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:24 - [MESSAGE][INFO] - -----> original_transaction_token = 1ec997e4-cee6-44c9-b0de-438bb067de8e

2020-10-13 11:16:24 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 1ec997e4-cee6-44c9-b0de-438bb067de8e

2020-10-13 11:16:24 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-10-13 11:16:24 - [TEST_STEP][PASSED] - advice_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuthAdvice(original_transaction_token, advice_amount, mid, beeceptor_create_auth_advice, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-10-13 11:16:24 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/13.har

2020-10-13 11:16:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-10-13 11:16:25 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "1ec997e4-cee6-44c9-b0de-438bb067de8e",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:25 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "1ec997e4-cee6-44c9-b0de-438bb067de8e",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "191",
    "token" : "84e0dd10-6086-4327-b10b-581c3e9916a2",
    "user_token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
    "acting_user_token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
    "card_token" : "ed20af36-0916-4ecf-9517-03a077a75e77",
    "preceding_related_transaction_token" : "1ec997e4-cee6-44c9-b0de-438bb067de8e",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 105,
    "created_time" : "2020-10-13T16:16:24Z",
    "user_transaction_time" : "2020-10-13T16:16:24Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "912860",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000061"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "4945",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:24.709Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "936781661173",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111111417224945",
    "3" : "900000",
    "4" : 1.00,
    "7" : "1013161624",
    "11" : "000000000061",
    "12" : "20201013161624",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "936781661173",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1116",
    "38" : "912860",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "1ec997e4-cee6-44c9-b0de-438bb067de8e"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:25 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "191",
    "token" : "84e0dd10-6086-4327-b10b-581c3e9916a2",
    "user_token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
    "acting_user_token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
    "card_token" : "ed20af36-0916-4ecf-9517-03a077a75e77",
    "preceding_related_transaction_token" : "1ec997e4-cee6-44c9-b0de-438bb067de8e",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 105,
    "created_time" : "2020-10-13T16:16:24Z",
    "user_transaction_time" : "2020-10-13T16:16:24Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "912860",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000061"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "4945",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:24.709Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "936781661173",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111111417224945",
    "3" : "900000",
    "4" : 1.00,
    "7" : "1013161624",
    "11" : "000000000061",
    "12" : "20201013161624",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "936781661173",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1116",
    "38" : "912860",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "1ec997e4-cee6-44c9-b0de-438bb067de8e"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - advice_transaction_token = token: null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - log.logInfo("-----> advice_transaction_token = " + advice_transaction_token): -----> advice_transaction_token = 84e0dd10-6086-4327-b10b-581c3e9916a2

2020-10-13 11:16:25 - [MESSAGE][INFO] - -----> advice_transaction_token = 84e0dd10-6086-4327-b10b-581c3e9916a2

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - advice_transaction_token = advice_transaction_token: null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable advice_transaction_token = " + advice_transaction_token): ----> GlobalVariable advice_transaction_token = 84e0dd10-6086-4327-b10b-581c3e9916a2

2020-10-13 11:16:25 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = 84e0dd10-6086-4327-b10b-581c3e9916a2

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:25 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:25 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:25 - [MESSAGE][INFO] - -----> advice_transaction_token = 84e0dd10-6086-4327-b10b-581c3e9916a2

2020-10-13 11:16:25 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = 84e0dd10-6086-4327-b10b-581c3e9916a2

2020-10-13 11:16:25 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - cleared_transaction_token = detailed_Onboarding.detailed_onboarding.createTransClearing(original_transaction_token, trans_amount1, mid, force_post, beeceptor_settle_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-10-13 11:16:25 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/14.har

2020-10-13 11:16:25 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:16:25 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "1ec997e4-cee6-44c9-b0de-438bb067de8e",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:25 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "1ec997e4-cee6-44c9-b0de-438bb067de8e",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "192",
    "token" : "2f951c5b-bbe9-4971-b619-25083cdb6d68",
    "user_token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
    "acting_user_token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
    "card_token" : "ed20af36-0916-4ecf-9517-03a077a75e77",
    "preceding_related_transaction_token" : "1ec997e4-cee6-44c9-b0de-438bb067de8e",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 78,
    "created_time" : "2020-10-13T16:16:25Z",
    "user_transaction_time" : "2020-10-13T16:16:25Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "912860",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000062"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "4945",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:25.475Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "936781661173",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111111417224945",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161625",
    "11" : "000000000062",
    "12" : "20201013161625",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "936781661173",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1117",
    "38" : "912860",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "1ec997e4-cee6-44c9-b0de-438bb067de8e"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:25 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "192",
    "token" : "2f951c5b-bbe9-4971-b619-25083cdb6d68",
    "user_token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
    "acting_user_token" : "014cc803-a897-4e6f-831a-11f9ff578d99",
    "card_token" : "ed20af36-0916-4ecf-9517-03a077a75e77",
    "preceding_related_transaction_token" : "1ec997e4-cee6-44c9-b0de-438bb067de8e",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 78,
    "created_time" : "2020-10-13T16:16:25Z",
    "user_transaction_time" : "2020-10-13T16:16:25Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "912860",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000062"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "4945",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:25.475Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "936781661173",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111111417224945",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161625",
    "11" : "000000000062",
    "12" : "20201013161625",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "936781661173",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1117",
    "38" : "912860",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "1ec997e4-cee6-44c9-b0de-438bb067de8e"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - cleared_transaction_token = token: null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - log.logInfo("-----> cleared_transaction_token = " + cleared_transaction_token): -----> cleared_transaction_token = 2f951c5b-bbe9-4971-b619-25083cdb6d68

2020-10-13 11:16:25 - [MESSAGE][INFO] - -----> cleared_transaction_token = 2f951c5b-bbe9-4971-b619-25083cdb6d68

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - cleared_transaction_token = cleared_transaction_token: null

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable cleared_transaction_token = " + cleared_transaction_token): ----> GlobalVariable cleared_transaction_token = 2f951c5b-bbe9-4971-b619-25083cdb6d68

2020-10-13 11:16:25 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = 2f951c5b-bbe9-4971-b619-25083cdb6d68

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:25 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:25 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:25 - [MESSAGE][INFO] - -----> cleared_transaction_token = 2f951c5b-bbe9-4971-b619-25083cdb6d68

2020-10-13 11:16:25 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = 2f951c5b-bbe9-4971-b619-25083cdb6d68

2020-10-13 11:16:25 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction With Refund/Detailed_onboarding_with_card_transaction_and_refund" time="6.005" classname="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction With Refund/Detailed_onboarding_with_card_transaction_and_refund" status="PASSED">
         <system-out><![CDATA[2020-10-13 11:16:25 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction With Refund/Detailed_onboarding_with_card_transaction_and_refund: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction With Refund/Detailed_onboarding_with_card_transaction_and_refund

2020-10-13 11:16:25 - [TEST_STEP][PASSED] - card_product_token = detailed_Onboarding.detailed_onboarding.createCardProduct(start_date, card_product_name, payment_instrument, ecommerce, activate_upon_issue): detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-10-13 11:16:26 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/15.har

2020-10-13 11:16:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:16:26 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:16:26 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "2b5223be-21c2-48c2-b00d-ce51c7013b2b",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:16:26Z",
  "last_modified_time" : "2020-10-13T16:16:26Z"
}

2020-10-13 11:16:26 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "2b5223be-21c2-48c2-b00d-ce51c7013b2b",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:16:26Z",
  "last_modified_time" : "2020-10-13T16:16:26Z"
}

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = 2b5223be-21c2-48c2-b00d-ce51c7013b2b

2020-10-13 11:16:26 - [MESSAGE][INFO] - -----> card_product_token = 2b5223be-21c2-48c2-b00d-ce51c7013b2b

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = 2b5223be-21c2-48c2-b00d-ce51c7013b2b

2020-10-13 11:16:26 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 2b5223be-21c2-48c2-b00d-ce51c7013b2b

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:26 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:26 - [MESSAGE][INFO] - -----> card_product_token = 2b5223be-21c2-48c2-b00d-ce51c7013b2b

2020-10-13 11:16:26 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 2b5223be-21c2-48c2-b00d-ce51c7013b2b

2020-10-13 11:16:26 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - funding_source_token = detailed_Onboarding.detailed_onboarding.createCardFundingSource(program_name): detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-10-13 11:16:26 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/16.har

2020-10-13 11:16:26 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:16:26 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:16:26 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "24119783-9513-456b-837d-ec9e1f721e71",
  "created_time" : "2020-10-13T16:16:26Z",
  "last_modified_time" : "2020-10-13T16:16:26Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:16:26 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "24119783-9513-456b-837d-ec9e1f721e71",
  "created_time" : "2020-10-13T16:16:26Z",
  "last_modified_time" : "2020-10-13T16:16:26Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - funding_token = token: null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = 24119783-9513-456b-837d-ec9e1f721e71

2020-10-13 11:16:26 - [MESSAGE][INFO] - -----> funding_token = 24119783-9513-456b-837d-ec9e1f721e71

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = 24119783-9513-456b-837d-ec9e1f721e71

2020-10-13 11:16:26 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = 24119783-9513-456b-837d-ec9e1f721e71

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:26 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:26 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:26 - [MESSAGE][INFO] - -----> funding_source_token = 24119783-9513-456b-837d-ec9e1f721e71

2020-10-13 11:16:26 - [MESSAGE][INFO] - ----> GlobalVariable funding_source_token = 24119783-9513-456b-837d-ec9e1f721e71

2020-10-13 11:16:26 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-10-13 11:16:26 - [TEST_STEP][PASSED] - user_token = detailed_Onboarding.detailed_onboarding.createDetailedUser(user_first_name, user_middle_name, user_last_name, active, user_password, phone, gender, user_email, ssn_expiration_date, user_id_type, user_address1, city, user_state, country, birth_date, corporate_card_holder, user_ssn, id_card_number, id_card_expiration_date, nationality, company, uses_parent_account, user_postal_code): detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-10-13 11:16:27 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/17.har

2020-10-13 11:16:27 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:16:27 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:16:27 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:16:27Z",
  "last_modified_time" : "2020-10-13T16:16:27Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "44e8c154-43da-40f7-87ee-0f9dc67ce1fb",
    "account_number" : "40013372522006257",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:16:27 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:16:27Z",
  "last_modified_time" : "2020-10-13T16:16:27Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "44e8c154-43da-40f7-87ee-0f9dc67ce1fb",
    "account_number" : "40013372522006257",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - user_token = token: null

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = 4c9a0d2e-113a-4a48-833d-d14bfab8f5a2

2020-10-13 11:16:27 - [MESSAGE][INFO] - -----> user_token = 4c9a0d2e-113a-4a48-833d-d14bfab8f5a2

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = 4c9a0d2e-113a-4a48-833d-d14bfab8f5a2

2020-10-13 11:16:27 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 4c9a0d2e-113a-4a48-833d-d14bfab8f5a2

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:27 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:27 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:27 - [MESSAGE][INFO] - -----> user_token = 4c9a0d2e-113a-4a48-833d-d14bfab8f5a2

2020-10-13 11:16:27 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 4c9a0d2e-113a-4a48-833d-d14bfab8f5a2

2020-10-13 11:16:27 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-10-13 11:16:27 - [TEST_STEP][PASSED] - card_token = detailed_Onboarding.detailed_onboarding.createCard(user_token, card_product_token): detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-10-13 11:16:28 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/18.har

2020-10-13 11:16:28 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:16:28 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
  "card_product_token": "2b5223be-21c2-48c2-b00d-ce51c7013b2b"
}

2020-10-13 11:16:28 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
  "card_product_token": "2b5223be-21c2-48c2-b00d-ce51c7013b2b"
}

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-10-13T16:16:28Z",
  "last_modified_time" : "2020-10-13T16:16:28Z",
  "token" : "d5289031-90f4-4749-b198-ae02237a1a5a",
  "user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
  "card_product_token" : "2b5223be-21c2-48c2-b00d-ce51c7013b2b",
  "last_four" : "2687",
  "pan" : "111111______2687",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "13997181097870556791",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:16:28 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-10-13T16:16:28Z",
  "last_modified_time" : "2020-10-13T16:16:28Z",
  "token" : "d5289031-90f4-4749-b198-ae02237a1a5a",
  "user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
  "card_product_token" : "2b5223be-21c2-48c2-b00d-ce51c7013b2b",
  "last_four" : "2687",
  "pan" : "111111______2687",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "13997181097870556791",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - card_token = token: null

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = d5289031-90f4-4749-b198-ae02237a1a5a

2020-10-13 11:16:28 - [MESSAGE][INFO] - -----> card_token = d5289031-90f4-4749-b198-ae02237a1a5a

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = d5289031-90f4-4749-b198-ae02237a1a5a

2020-10-13 11:16:28 - [MESSAGE][INFO] - ----> GlobalVariable card_token = d5289031-90f4-4749-b198-ae02237a1a5a

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:28 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:28 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:28 - [MESSAGE][INFO] - -----> card_token = d5289031-90f4-4749-b198-ae02237a1a5a

2020-10-13 11:16:28 - [MESSAGE][INFO] - ----> GlobalVariable card_token = d5289031-90f4-4749-b198-ae02237a1a5a

2020-10-13 11:16:28 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-10-13 11:16:28 - [TEST_STEP][PASSED] - gpa_token = detailed_Onboarding.detailed_onboarding.createGpaOrder(user_token, gpaamount, currency_code, funding_source_token): detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-10-13 11:16:29 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/19.har

2020-10-13 11:16:29 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-10-13 11:16:29 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "24119783-9513-456b-837d-ec9e1f721e71"
}

2020-10-13 11:16:29 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "24119783-9513-456b-837d-ec9e1f721e71"
}

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "9ae39de9-c775-4274-ae09-21846064e403",
  "amount" : 10000,
  "created_time" : "2020-10-13T16:16:28Z",
  "last_modified_time" : "2020-10-13T16:16:28Z",
  "transaction_token" : "d95b7874-c43c-48a0-8a99-5ca9379ea0fd",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********1e71",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-10-13T16:16:26Z",
      "last_modified_time" : "2020-10-13T16:16:26Z"
    }
  },
  "funding_source_token" : "**********1e71",
  "user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
  "currency_code" : "USD"
}

2020-10-13 11:16:29 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "9ae39de9-c775-4274-ae09-21846064e403",
  "amount" : 10000,
  "created_time" : "2020-10-13T16:16:28Z",
  "last_modified_time" : "2020-10-13T16:16:28Z",
  "transaction_token" : "d95b7874-c43c-48a0-8a99-5ca9379ea0fd",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********1e71",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-10-13T16:16:26Z",
      "last_modified_time" : "2020-10-13T16:16:26Z"
    }
  },
  "funding_source_token" : "**********1e71",
  "user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
  "currency_code" : "USD"
}

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - gpa_token = token: null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - log.logInfo("-----> gpa_token = " + gpa_token): -----> gpa_token = 9ae39de9-c775-4274-ae09-21846064e403

2020-10-13 11:16:29 - [MESSAGE][INFO] - -----> gpa_token = 9ae39de9-c775-4274-ae09-21846064e403

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - user_token = gpa_token: null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable gpa_token = " + gpa_token): ----> GlobalVariable gpa_token = 8e995185-0850-4f96-b424-8705947cc11b

2020-10-13 11:16:29 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 8e995185-0850-4f96-b424-8705947cc11b

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:29 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:29 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:29 - [MESSAGE][INFO] - -----> gpa_token = 9ae39de9-c775-4274-ae09-21846064e403

2020-10-13 11:16:29 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 9ae39de9-c775-4274-ae09-21846064e403

2020-10-13 11:16:29 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - original_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuth(card_token, trans_amount1, mid, beeceptor_create_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-10-13 11:16:29 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/20.har

2020-10-13 11:16:29 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-10-13 11:16:29 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "d5289031-90f4-4749-b198-ae02237a1a5a",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:29 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "d5289031-90f4-4749-b198-ae02237a1a5a",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "194",
    "token" : "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4",
    "user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
    "acting_user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
    "card_token" : "d5289031-90f4-4749-b198-ae02237a1a5a",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 78,
    "created_time" : "2020-10-13T16:16:29Z",
    "user_transaction_time" : "2020-10-13T16:16:29Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "008982",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "157540"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2687",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:29.496Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "264518924871",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111111347722687",
    "3" : "000000",
    "4" : 10.00,
    "7" : "1013161629",
    "11" : "000005157540",
    "12" : "20201013161629",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "264518924871",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1080",
    "38" : "008982",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:29 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "194",
    "token" : "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4",
    "user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
    "acting_user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
    "card_token" : "d5289031-90f4-4749-b198-ae02237a1a5a",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 78,
    "created_time" : "2020-10-13T16:16:29Z",
    "user_transaction_time" : "2020-10-13T16:16:29Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "008982",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "157540"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2687",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:29.496Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "264518924871",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111111347722687",
    "3" : "000000",
    "4" : 10.00,
    "7" : "1013161629",
    "11" : "000005157540",
    "12" : "20201013161629",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "264518924871",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1080",
    "38" : "008982",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = e1a4402b-c9ec-4c8f-a6a0-697fd93574f4

2020-10-13 11:16:29 - [MESSAGE][INFO] - -----> original_transaction_token = e1a4402b-c9ec-4c8f-a6a0-697fd93574f4

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = e1a4402b-c9ec-4c8f-a6a0-697fd93574f4

2020-10-13 11:16:29 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = e1a4402b-c9ec-4c8f-a6a0-697fd93574f4

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:29 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:29 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:29 - [MESSAGE][INFO] - -----> original_transaction_token = e1a4402b-c9ec-4c8f-a6a0-697fd93574f4

2020-10-13 11:16:29 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = e1a4402b-c9ec-4c8f-a6a0-697fd93574f4

2020-10-13 11:16:29 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-10-13 11:16:29 - [TEST_STEP][PASSED] - advice_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuthAdvice(original_transaction_token, advice_amount, mid, beeceptor_create_auth_advice, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-10-13 11:16:30 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/21.har

2020-10-13 11:16:30 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-10-13 11:16:30 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:30 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "195",
    "token" : "3ba83193-a022-4671-b2b2-630cc8ab84ca",
    "user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
    "acting_user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
    "card_token" : "d5289031-90f4-4749-b198-ae02237a1a5a",
    "preceding_related_transaction_token" : "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 105,
    "created_time" : "2020-10-13T16:16:30Z",
    "user_transaction_time" : "2020-10-13T16:16:29Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "008982",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000063"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2687",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:30.174Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "264518924871",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111111347722687",
    "3" : "900000",
    "4" : 1.00,
    "7" : "1013161630",
    "11" : "000000000063",
    "12" : "20201013161630",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "264518924871",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1118",
    "38" : "008982",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:30 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "195",
    "token" : "3ba83193-a022-4671-b2b2-630cc8ab84ca",
    "user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
    "acting_user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
    "card_token" : "d5289031-90f4-4749-b198-ae02237a1a5a",
    "preceding_related_transaction_token" : "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 105,
    "created_time" : "2020-10-13T16:16:30Z",
    "user_transaction_time" : "2020-10-13T16:16:29Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "008982",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000063"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2687",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:30.174Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "264518924871",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111111347722687",
    "3" : "900000",
    "4" : 1.00,
    "7" : "1013161630",
    "11" : "000000000063",
    "12" : "20201013161630",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "264518924871",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1118",
    "38" : "008982",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - advice_transaction_token = token: null

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - log.logInfo("-----> advice_transaction_token = " + advice_transaction_token): -----> advice_transaction_token = 3ba83193-a022-4671-b2b2-630cc8ab84ca

2020-10-13 11:16:30 - [MESSAGE][INFO] - -----> advice_transaction_token = 3ba83193-a022-4671-b2b2-630cc8ab84ca

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - advice_transaction_token = advice_transaction_token: null

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable advice_transaction_token = " + advice_transaction_token): ----> GlobalVariable advice_transaction_token = 3ba83193-a022-4671-b2b2-630cc8ab84ca

2020-10-13 11:16:30 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = 3ba83193-a022-4671-b2b2-630cc8ab84ca

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:30 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:30 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:30 - [MESSAGE][INFO] - -----> advice_transaction_token = 3ba83193-a022-4671-b2b2-630cc8ab84ca

2020-10-13 11:16:30 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = 3ba83193-a022-4671-b2b2-630cc8ab84ca

2020-10-13 11:16:30 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-10-13 11:16:30 - [TEST_STEP][PASSED] - cleared_transaction_token = detailed_Onboarding.detailed_onboarding.createTransClearing(original_transaction_token, trans_amount1, mid, force_post, beeceptor_settle_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-10-13 11:16:31 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/22.har

2020-10-13 11:16:31 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:16:31 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:31 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "196",
    "token" : "8a903dcd-eb31-47b7-8279-4c2af1177cfd",
    "user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
    "acting_user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
    "card_token" : "d5289031-90f4-4749-b198-ae02237a1a5a",
    "preceding_related_transaction_token" : "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 72,
    "created_time" : "2020-10-13T16:16:30Z",
    "user_transaction_time" : "2020-10-13T16:16:30Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "008982",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000052"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2687",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:30.850Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "264518924871",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111111347722687",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161630",
    "11" : "000000000052",
    "12" : "20201013161630",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "264518924871",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1081",
    "38" : "008982",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:31 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "196",
    "token" : "8a903dcd-eb31-47b7-8279-4c2af1177cfd",
    "user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
    "acting_user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
    "card_token" : "d5289031-90f4-4749-b198-ae02237a1a5a",
    "preceding_related_transaction_token" : "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 72,
    "created_time" : "2020-10-13T16:16:30Z",
    "user_transaction_time" : "2020-10-13T16:16:30Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "008982",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000052"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2687",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:30.850Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "264518924871",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111111347722687",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161630",
    "11" : "000000000052",
    "12" : "20201013161630",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "264518924871",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1081",
    "38" : "008982",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - cleared_transaction_token = token: null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - log.logInfo("-----> cleared_transaction_token = " + cleared_transaction_token): -----> cleared_transaction_token = 8a903dcd-eb31-47b7-8279-4c2af1177cfd

2020-10-13 11:16:31 - [MESSAGE][INFO] - -----> cleared_transaction_token = 8a903dcd-eb31-47b7-8279-4c2af1177cfd

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - cleared_transaction_token = cleared_transaction_token: null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable cleared_transaction_token = " + cleared_transaction_token): ----> GlobalVariable cleared_transaction_token = 8a903dcd-eb31-47b7-8279-4c2af1177cfd

2020-10-13 11:16:31 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = 8a903dcd-eb31-47b7-8279-4c2af1177cfd

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:31 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:31 - [MESSAGE][INFO] - -----> cleared_transaction_token = 8a903dcd-eb31-47b7-8279-4c2af1177cfd

2020-10-13 11:16:31 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = 8a903dcd-eb31-47b7-8279-4c2af1177cfd

2020-10-13 11:16:31 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearingRefund(original_transaction_token, trans_amount1, mid, is_refund, beeceptor_create_refund, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearingRefund is PASSED

2020-10-13 11:16:31 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/23.har

2020-10-13 11:16:31 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:16:31 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4",
  "amount": "10",
  "mid": "USD",
  "is_refund": "true",
    "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-refund",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:31 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4",
  "amount": "10",
  "mid": "USD",
  "is_refund": "true",
    "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-refund",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "refund",
    "state" : "COMPLETION",
    "identifier" : "197",
    "token" : "d19dd784-e43e-43ab-b2f5-0eaf9f4aa8a5",
    "user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
    "acting_user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
    "card_token" : "d5289031-90f4-4749-b198-ae02237a1a5a",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : 10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : 10.00
        }
      }
    },
    "duration" : 89,
    "created_time" : "2020-10-13T16:16:31Z",
    "user_transaction_time" : "2020-10-13T16:16:31Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "685908",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000053"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2687",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:31.539Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "264518924871",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111111347722687",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161631",
    "11" : "000000000053",
    "12" : "20201013161631",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "264518924871",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1082",
    "38" : "685908",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:31 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "refund",
    "state" : "COMPLETION",
    "identifier" : "197",
    "token" : "d19dd784-e43e-43ab-b2f5-0eaf9f4aa8a5",
    "user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
    "acting_user_token" : "4c9a0d2e-113a-4a48-833d-d14bfab8f5a2",
    "card_token" : "d5289031-90f4-4749-b198-ae02237a1a5a",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : 10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : 10.00
        }
      }
    },
    "duration" : 89,
    "created_time" : "2020-10-13T16:16:31Z",
    "user_transaction_time" : "2020-10-13T16:16:31Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "685908",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000053"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2687",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:31.539Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "264518924871",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111111347722687",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161631",
    "11" : "000000000053",
    "12" : "20201013161631",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "264518924871",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1082",
    "38" : "685908",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "e1a4402b-c9ec-4c8f-a6a0-697fd93574f4"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - refund_transaction_token = token: null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - log.logInfo("-----> refund_transaction_token = " + refund_transaction_token): -----> refund_transaction_token = d19dd784-e43e-43ab-b2f5-0eaf9f4aa8a5

2020-10-13 11:16:31 - [MESSAGE][INFO] - -----> refund_transaction_token = d19dd784-e43e-43ab-b2f5-0eaf9f4aa8a5

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - refund_transaction_token = refund_transaction_token: null

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable refund_transaction_token = " + refund_transaction_token): ----> GlobalVariable refund_transaction_token = d19dd784-e43e-43ab-b2f5-0eaf9f4aa8a5

2020-10-13 11:16:31 - [MESSAGE][INFO] - ----> GlobalVariable refund_transaction_token = d19dd784-e43e-43ab-b2f5-0eaf9f4aa8a5

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:31 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:31 - [MESSAGE][INFO] - -----> refund_transaction_token = d19dd784-e43e-43ab-b2f5-0eaf9f4aa8a5

2020-10-13 11:16:31 - [MESSAGE][INFO] - ----> GlobalVariable refund_transaction_token = d19dd784-e43e-43ab-b2f5-0eaf9f4aa8a5

2020-10-13 11:16:31 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearingRefund is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Financial Settled Transaction/Detailed_onboarding_with_financial_transactions" time="6.304" classname="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Financial Settled Transaction/Detailed_onboarding_with_financial_transactions" status="PASSED">
         <system-out><![CDATA[2020-10-13 11:16:31 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Financial Settled Transaction/Detailed_onboarding_with_financial_transactions: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Financial Settled Transaction/Detailed_onboarding_with_financial_transactions

2020-10-13 11:16:31 - [TEST_STEP][PASSED] - card_product_token = detailed_Onboarding.detailed_onboarding.createCardProduct(start_date, card_product_name, payment_instrument, ecommerce, activate_upon_issue): detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-10-13 11:16:32 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/24.har

2020-10-13 11:16:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:16:32 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:16:32 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "10ac7a77-9805-4db2-a088-42ae1e15493a",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:16:32Z",
  "last_modified_time" : "2020-10-13T16:16:32Z"
}

2020-10-13 11:16:32 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "10ac7a77-9805-4db2-a088-42ae1e15493a",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:16:32Z",
  "last_modified_time" : "2020-10-13T16:16:32Z"
}

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = 10ac7a77-9805-4db2-a088-42ae1e15493a

2020-10-13 11:16:32 - [MESSAGE][INFO] - -----> card_product_token = 10ac7a77-9805-4db2-a088-42ae1e15493a

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = 10ac7a77-9805-4db2-a088-42ae1e15493a

2020-10-13 11:16:32 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 10ac7a77-9805-4db2-a088-42ae1e15493a

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:32 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:32 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:32 - [MESSAGE][INFO] - -----> card_product_token = 10ac7a77-9805-4db2-a088-42ae1e15493a

2020-10-13 11:16:32 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 10ac7a77-9805-4db2-a088-42ae1e15493a

2020-10-13 11:16:32 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - funding_source_token = detailed_Onboarding.detailed_onboarding.createCardFundingSource(program_name): detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-10-13 11:16:32 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/25.har

2020-10-13 11:16:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:16:32 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:16:32 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "e90fb9ab-0627-4cfe-a9e6-231838521210",
  "created_time" : "2020-10-13T16:16:32Z",
  "last_modified_time" : "2020-10-13T16:16:32Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:16:32 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "e90fb9ab-0627-4cfe-a9e6-231838521210",
  "created_time" : "2020-10-13T16:16:32Z",
  "last_modified_time" : "2020-10-13T16:16:32Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - funding_token = token: null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = e90fb9ab-0627-4cfe-a9e6-231838521210

2020-10-13 11:16:32 - [MESSAGE][INFO] - -----> funding_token = e90fb9ab-0627-4cfe-a9e6-231838521210

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = e90fb9ab-0627-4cfe-a9e6-231838521210

2020-10-13 11:16:32 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = e90fb9ab-0627-4cfe-a9e6-231838521210

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:32 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:32 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:32 - [MESSAGE][INFO] - -----> funding_source_token = e90fb9ab-0627-4cfe-a9e6-231838521210

2020-10-13 11:16:32 - [MESSAGE][INFO] - ----> GlobalVariable funding_source_token = e90fb9ab-0627-4cfe-a9e6-231838521210

2020-10-13 11:16:32 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-10-13 11:16:32 - [TEST_STEP][PASSED] - user_token = detailed_Onboarding.detailed_onboarding.createDetailedUser(user_first_name, user_middle_name, user_last_name, active, user_password, phone, gender, user_email, ssn_expiration_date, user_id_type, user_address1, city, user_state, country, birth_date, corporate_card_holder, user_ssn, id_card_number, id_card_expiration_date, nationality, company, uses_parent_account, user_postal_code): detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-10-13 11:16:33 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/26.har

2020-10-13 11:16:33 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:16:33 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:16:33 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:16:33Z",
  "last_modified_time" : "2020-10-13T16:16:33Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "9e4195a2-e5af-4cdc-b1e2-1fae0bd63146",
    "account_number" : "40013372547008163",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:16:33 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:16:33Z",
  "last_modified_time" : "2020-10-13T16:16:33Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "9e4195a2-e5af-4cdc-b1e2-1fae0bd63146",
    "account_number" : "40013372547008163",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - user_token = token: null

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef

2020-10-13 11:16:33 - [MESSAGE][INFO] - -----> user_token = f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef

2020-10-13 11:16:33 - [MESSAGE][INFO] - ----> GlobalVariable user_token = f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:33 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:33 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:33 - [MESSAGE][INFO] - -----> user_token = f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef

2020-10-13 11:16:33 - [MESSAGE][INFO] - ----> GlobalVariable user_token = f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef

2020-10-13 11:16:33 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-10-13 11:16:33 - [TEST_STEP][PASSED] - card_token = detailed_Onboarding.detailed_onboarding.createCard(user_token, card_product_token): detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-10-13 11:16:34 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/27.har

2020-10-13 11:16:34 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:16:34 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
  "card_product_token": "10ac7a77-9805-4db2-a088-42ae1e15493a"
}

2020-10-13 11:16:34 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
  "card_product_token": "10ac7a77-9805-4db2-a088-42ae1e15493a"
}

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-10-13T16:16:34Z",
  "last_modified_time" : "2020-10-13T16:16:34Z",
  "token" : "2790bc97-29f6-4507-88b0-42c4df1648b2",
  "user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
  "card_product_token" : "10ac7a77-9805-4db2-a088-42ae1e15493a",
  "last_four" : "2441",
  "pan" : "111111______2441",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "24795445421575061856",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:16:34 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-10-13T16:16:34Z",
  "last_modified_time" : "2020-10-13T16:16:34Z",
  "token" : "2790bc97-29f6-4507-88b0-42c4df1648b2",
  "user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
  "card_product_token" : "10ac7a77-9805-4db2-a088-42ae1e15493a",
  "last_four" : "2441",
  "pan" : "111111______2441",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "24795445421575061856",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - card_token = token: null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = 2790bc97-29f6-4507-88b0-42c4df1648b2

2020-10-13 11:16:34 - [MESSAGE][INFO] - -----> card_token = 2790bc97-29f6-4507-88b0-42c4df1648b2

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = 2790bc97-29f6-4507-88b0-42c4df1648b2

2020-10-13 11:16:34 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 2790bc97-29f6-4507-88b0-42c4df1648b2

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:34 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:34 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:34 - [MESSAGE][INFO] - -----> card_token = 2790bc97-29f6-4507-88b0-42c4df1648b2

2020-10-13 11:16:34 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 2790bc97-29f6-4507-88b0-42c4df1648b2

2020-10-13 11:16:34 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - gpa_token = detailed_Onboarding.detailed_onboarding.createGpaOrder(user_token, gpaamount, currency_code, funding_source_token): detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-10-13 11:16:34 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/28.har

2020-10-13 11:16:34 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-10-13 11:16:34 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "e90fb9ab-0627-4cfe-a9e6-231838521210"
}

2020-10-13 11:16:34 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "e90fb9ab-0627-4cfe-a9e6-231838521210"
}

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "6c9dc8c1-1b74-45ce-bdb3-ad6ccfa794c6",
  "amount" : 10000,
  "created_time" : "2020-10-13T16:16:34Z",
  "last_modified_time" : "2020-10-13T16:16:34Z",
  "transaction_token" : "534ef3e9-0024-4aab-a6e7-565d0607fa47",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********1210",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-10-13T16:16:32Z",
      "last_modified_time" : "2020-10-13T16:16:32Z"
    }
  },
  "funding_source_token" : "**********1210",
  "user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
  "currency_code" : "USD"
}

2020-10-13 11:16:34 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "6c9dc8c1-1b74-45ce-bdb3-ad6ccfa794c6",
  "amount" : 10000,
  "created_time" : "2020-10-13T16:16:34Z",
  "last_modified_time" : "2020-10-13T16:16:34Z",
  "transaction_token" : "534ef3e9-0024-4aab-a6e7-565d0607fa47",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********1210",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-10-13T16:16:32Z",
      "last_modified_time" : "2020-10-13T16:16:32Z"
    }
  },
  "funding_source_token" : "**********1210",
  "user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
  "currency_code" : "USD"
}

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - gpa_token = token: null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - log.logInfo("-----> gpa_token = " + gpa_token): -----> gpa_token = 6c9dc8c1-1b74-45ce-bdb3-ad6ccfa794c6

2020-10-13 11:16:34 - [MESSAGE][INFO] - -----> gpa_token = 6c9dc8c1-1b74-45ce-bdb3-ad6ccfa794c6

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - user_token = gpa_token: null

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable gpa_token = " + gpa_token): ----> GlobalVariable gpa_token = 9ae39de9-c775-4274-ae09-21846064e403

2020-10-13 11:16:34 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 9ae39de9-c775-4274-ae09-21846064e403

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:34 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:34 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:34 - [MESSAGE][INFO] - -----> gpa_token = 6c9dc8c1-1b74-45ce-bdb3-ad6ccfa794c6

2020-10-13 11:16:34 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 6c9dc8c1-1b74-45ce-bdb3-ad6ccfa794c6

2020-10-13 11:16:34 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-10-13 11:16:34 - [TEST_STEP][PASSED] - detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal(card_token, trans_amount1, mid, beeceptor_create_financial_withdrawal, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal is PASSED

2020-10-13 11:16:35 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/29.har

2020-10-13 11:16:35 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/financial/withdrawal

2020-10-13 11:16:35 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/financial/withdrawal

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "2790bc97-29f6-4507-88b0-42c4df1648b2",
  "amount": "10",
  "mid": "USD",
  "account_type": "",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-financial-withdrawal",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:35 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "2790bc97-29f6-4507-88b0-42c4df1648b2",
  "amount": "10",
  "mid": "USD",
  "account_type": "",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-financial-withdrawal",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.atm.withdrawal",
    "state" : "COMPLETION",
    "identifier" : "199",
    "token" : "a525d82c-f982-457d-bfb7-cc71504d7e39",
    "user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
    "acting_user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
    "card_token" : "2790bc97-29f6-4507-88b0-42c4df1648b2",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 80,
    "created_time" : "2020-10-13T16:16:35Z",
    "user_transaction_time" : "2020-10-13T16:16:35Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "currency_code" : "USD",
    "approval_code" : "133272",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "90873953323",
      "retrieval_reference_number" : "581751792053",
      "system_trace_audit_number" : "654256"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2441",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:35.304Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "tid" : "TR100000",
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112592952441",
    "3" : "000000",
    "4" : 10.00,
    "5" : 10.00,
    "7" : "1013161635",
    "11" : "654256",
    "12" : "041635",
    "13" : "1013",
    "14" : "2410",
    "15" : "1013",
    "17" : "1013",
    "18" : "6411",
    "22" : "10000000020000000100000001000000",
    "26" : "6411",
    "32" : "90873953323",
    "33" : "81631998658",
    "37" : "581751792053",
    "38" : "133272",
    "39" : "0000",
    "41" : "TR100000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "48" : "Bank of Marqeta",
    "50" : "840",
    "54" : "00028402C00000099900000018402C000000999000",
    "58" : "00000000022",
    "59" : "0000000",
    "63" : "DISCOVER",
    "112" : {
      "101" : "9990.00",
      "102" : "9990.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "35" : "API"
    },
    "123" : "123 Main St.           ",
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:35 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.atm.withdrawal",
    "state" : "COMPLETION",
    "identifier" : "199",
    "token" : "a525d82c-f982-457d-bfb7-cc71504d7e39",
    "user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
    "acting_user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
    "card_token" : "2790bc97-29f6-4507-88b0-42c4df1648b2",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 80,
    "created_time" : "2020-10-13T16:16:35Z",
    "user_transaction_time" : "2020-10-13T16:16:35Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "currency_code" : "USD",
    "approval_code" : "133272",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "90873953323",
      "retrieval_reference_number" : "581751792053",
      "system_trace_audit_number" : "654256"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2441",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:35.304Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "tid" : "TR100000",
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112592952441",
    "3" : "000000",
    "4" : 10.00,
    "5" : 10.00,
    "7" : "1013161635",
    "11" : "654256",
    "12" : "041635",
    "13" : "1013",
    "14" : "2410",
    "15" : "1013",
    "17" : "1013",
    "18" : "6411",
    "22" : "10000000020000000100000001000000",
    "26" : "6411",
    "32" : "90873953323",
    "33" : "81631998658",
    "37" : "581751792053",
    "38" : "133272",
    "39" : "0000",
    "41" : "TR100000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "48" : "Bank of Marqeta",
    "50" : "840",
    "54" : "00028402C00000099900000018402C000000999000",
    "58" : "00000000022",
    "59" : "0000000",
    "63" : "DISCOVER",
    "112" : {
      "101" : "9990.00",
      "102" : "9990.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "35" : "API"
    },
    "123" : "123 Main St.           ",
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = a525d82c-f982-457d-bfb7-cc71504d7e39

2020-10-13 11:16:35 - [MESSAGE][INFO] - -----> original_transaction_token = a525d82c-f982-457d-bfb7-cc71504d7e39

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = a525d82c-f982-457d-bfb7-cc71504d7e39

2020-10-13 11:16:35 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = a525d82c-f982-457d-bfb7-cc71504d7e39

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:35 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:35 - [MESSAGE][INFO] - -----> original_transaction_token = a525d82c-f982-457d-bfb7-cc71504d7e39

2020-10-13 11:16:35 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = a525d82c-f982-457d-bfb7-cc71504d7e39

2020-10-13 11:16:35 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal is PASSED

2020-10-13 11:16:35 - [TEST_STEP][PASSED] - detailed_Onboarding.detailed_onboarding.updateCardProduct(card_product_token): detailed_Onboarding.detailed_onboarding.updateCardProduct is PASSED

2020-10-13 11:16:36 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/30.har

2020-10-13 11:16:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts/10ac7a77-9805-4db2-a088-42ae1e15493a

2020-10-13 11:16:36 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts/10ac7a77-9805-4db2-a088-42ae1e15493a

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "config": {
    "poi": {
      "atm": true
    }
  }
}

2020-10-13 11:16:36 - [MESSAGE][INFO] - -------> Request Body= {
  "config": {
    "poi": {
      "atm": true
    }
  }
}

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "10ac7a77-9805-4db2-a088-42ae1e15493a",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:16:32Z",
  "last_modified_time" : "2020-10-13T16:16:35Z"
}

2020-10-13 11:16:36 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "10ac7a77-9805-4db2-a088-42ae1e15493a",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:16:32Z",
  "last_modified_time" : "2020-10-13T16:16:35Z"
}

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 200: null

2020-10-13 11:16:36 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:36 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.updateCardProduct is PASSED

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - original_transaction_token = detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal(card_token, trans_amount1, mid, beeceptor_create_financial_withdrawal, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal is PASSED

2020-10-13 11:16:36 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/31.har

2020-10-13 11:16:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/financial/withdrawal

2020-10-13 11:16:36 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/financial/withdrawal

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "2790bc97-29f6-4507-88b0-42c4df1648b2",
  "amount": "10",
  "mid": "USD",
  "account_type": "",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-financial-withdrawal",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:36 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "2790bc97-29f6-4507-88b0-42c4df1648b2",
  "amount": "10",
  "mid": "USD",
  "account_type": "",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-financial-withdrawal",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.atm.withdrawal",
    "state" : "COMPLETION",
    "identifier" : "200",
    "token" : "641f8827-521e-408a-854b-36bf8d7c2072",
    "user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
    "acting_user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
    "card_token" : "2790bc97-29f6-4507-88b0-42c4df1648b2",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9980.00,
      "available_balance" : 9980.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9980.00,
          "available_balance" : 9980.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 137,
    "created_time" : "2020-10-13T16:16:36Z",
    "user_transaction_time" : "2020-10-13T16:16:36Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "currency_code" : "USD",
    "approval_code" : "199594",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "15575493838",
      "retrieval_reference_number" : "200089353148",
      "system_trace_audit_number" : "535272"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2441",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:36.519Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "tid" : "TR100000",
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112592952441",
    "3" : "000000",
    "4" : 10.00,
    "5" : 10.00,
    "7" : "1013161636",
    "11" : "535272",
    "12" : "041636",
    "13" : "1013",
    "14" : "2410",
    "15" : "1013",
    "17" : "1013",
    "18" : "6411",
    "22" : "10000000020000000100000001000000",
    "26" : "6411",
    "32" : "15575493838",
    "33" : "25024148013",
    "37" : "200089353148",
    "38" : "199594",
    "39" : "0000",
    "41" : "TR100000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "48" : "Bank of Marqeta",
    "50" : "840",
    "54" : "00028402C00000099800000018402C000000998000",
    "58" : "00000000022",
    "59" : "0000000",
    "63" : "DISCOVER",
    "112" : {
      "101" : "9980.00",
      "102" : "9980.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "35" : "API"
    },
    "123" : "123 Main St.           ",
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:36 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.atm.withdrawal",
    "state" : "COMPLETION",
    "identifier" : "200",
    "token" : "641f8827-521e-408a-854b-36bf8d7c2072",
    "user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
    "acting_user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
    "card_token" : "2790bc97-29f6-4507-88b0-42c4df1648b2",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9980.00,
      "available_balance" : 9980.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9980.00,
          "available_balance" : 9980.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 137,
    "created_time" : "2020-10-13T16:16:36Z",
    "user_transaction_time" : "2020-10-13T16:16:36Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "currency_code" : "USD",
    "approval_code" : "199594",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "15575493838",
      "retrieval_reference_number" : "200089353148",
      "system_trace_audit_number" : "535272"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2441",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:36.519Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "tid" : "TR100000",
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112592952441",
    "3" : "000000",
    "4" : 10.00,
    "5" : 10.00,
    "7" : "1013161636",
    "11" : "535272",
    "12" : "041636",
    "13" : "1013",
    "14" : "2410",
    "15" : "1013",
    "17" : "1013",
    "18" : "6411",
    "22" : "10000000020000000100000001000000",
    "26" : "6411",
    "32" : "15575493838",
    "33" : "25024148013",
    "37" : "200089353148",
    "38" : "199594",
    "39" : "0000",
    "41" : "TR100000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "48" : "Bank of Marqeta",
    "50" : "840",
    "54" : "00028402C00000099800000018402C000000998000",
    "58" : "00000000022",
    "59" : "0000000",
    "63" : "DISCOVER",
    "112" : {
      "101" : "9980.00",
      "102" : "9980.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "35" : "API"
    },
    "123" : "123 Main St.           ",
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = 641f8827-521e-408a-854b-36bf8d7c2072

2020-10-13 11:16:36 - [MESSAGE][INFO] - -----> original_transaction_token = 641f8827-521e-408a-854b-36bf8d7c2072

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = 641f8827-521e-408a-854b-36bf8d7c2072

2020-10-13 11:16:36 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 641f8827-521e-408a-854b-36bf8d7c2072

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:36 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:36 - [MESSAGE][INFO] - -----> original_transaction_token = 641f8827-521e-408a-854b-36bf8d7c2072

2020-10-13 11:16:36 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 641f8827-521e-408a-854b-36bf8d7c2072

2020-10-13 11:16:36 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal is PASSED

2020-10-13 11:16:36 - [TEST_STEP][PASSED] - cleared_transaction_token = detailed_Onboarding.detailed_onboarding.createTransClearing(original_transaction_token, trans_amount1, mid, force_post, beeceptor_settle_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-10-13 11:16:37 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/32.har

2020-10-13 11:16:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:16:37 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "641f8827-521e-408a-854b-36bf8d7c2072",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:37 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "641f8827-521e-408a-854b-36bf8d7c2072",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "201",
    "token" : "298c57cf-434a-4ea4-a7c2-be302405b3d2",
    "user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
    "acting_user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
    "card_token" : "2790bc97-29f6-4507-88b0-42c4df1648b2",
    "preceding_related_transaction_token" : "641f8827-521e-408a-854b-36bf8d7c2072",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9970.00,
      "available_balance" : 9970.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9970.00,
          "available_balance" : 9970.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 67,
    "created_time" : "2020-10-13T16:16:37Z",
    "user_transaction_time" : "2020-10-13T16:16:37Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "199594",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000064"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2441",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:37.205Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112592952441",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161637",
    "11" : "000000000064",
    "12" : "20201013161637",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1119",
    "38" : "199594",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "641f8827-521e-408a-854b-36bf8d7c2072"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:37 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "201",
    "token" : "298c57cf-434a-4ea4-a7c2-be302405b3d2",
    "user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
    "acting_user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
    "card_token" : "2790bc97-29f6-4507-88b0-42c4df1648b2",
    "preceding_related_transaction_token" : "641f8827-521e-408a-854b-36bf8d7c2072",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9970.00,
      "available_balance" : 9970.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9970.00,
          "available_balance" : 9970.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 67,
    "created_time" : "2020-10-13T16:16:37Z",
    "user_transaction_time" : "2020-10-13T16:16:37Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "199594",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000064"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2441",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:37.205Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112592952441",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161637",
    "11" : "000000000064",
    "12" : "20201013161637",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1119",
    "38" : "199594",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "641f8827-521e-408a-854b-36bf8d7c2072"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - cleared_transaction_token = token: null

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - log.logInfo("-----> cleared_transaction_token = " + cleared_transaction_token): -----> cleared_transaction_token = 298c57cf-434a-4ea4-a7c2-be302405b3d2

2020-10-13 11:16:37 - [MESSAGE][INFO] - -----> cleared_transaction_token = 298c57cf-434a-4ea4-a7c2-be302405b3d2

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - cleared_transaction_token = cleared_transaction_token: null

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable cleared_transaction_token = " + cleared_transaction_token): ----> GlobalVariable cleared_transaction_token = 298c57cf-434a-4ea4-a7c2-be302405b3d2

2020-10-13 11:16:37 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = 298c57cf-434a-4ea4-a7c2-be302405b3d2

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:37 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:37 - [MESSAGE][INFO] - -----> cleared_transaction_token = 298c57cf-434a-4ea4-a7c2-be302405b3d2

2020-10-13 11:16:37 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = 298c57cf-434a-4ea4-a7c2-be302405b3d2

2020-10-13 11:16:37 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-10-13 11:16:37 - [TEST_STEP][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearingRefund(original_transaction_token, trans_amount1, mid, is_refund, beeceptor_create_refund, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearingRefund is PASSED

2020-10-13 11:16:38 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111607/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111608/requests/main/33.har

2020-10-13 11:16:38 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:16:38 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "641f8827-521e-408a-854b-36bf8d7c2072",
  "amount": "10",
  "mid": "USD",
  "is_refund": "true",
    "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-refund",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:38 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "641f8827-521e-408a-854b-36bf8d7c2072",
  "amount": "10",
  "mid": "USD",
  "is_refund": "true",
    "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-refund",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "refund",
    "state" : "COMPLETION",
    "identifier" : "202",
    "token" : "d40666fe-13f1-422a-94e4-affea978d6a5",
    "user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
    "acting_user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
    "card_token" : "2790bc97-29f6-4507-88b0-42c4df1648b2",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9980.00,
      "available_balance" : 9980.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : 10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9980.00,
          "available_balance" : 9980.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : 10.00
        }
      }
    },
    "duration" : 74,
    "created_time" : "2020-10-13T16:16:37Z",
    "user_transaction_time" : "2020-10-13T16:16:37Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "191064",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000054"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2441",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:37.861Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112592952441",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161637",
    "11" : "000000000054",
    "12" : "20201013161637",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1085",
    "38" : "191064",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099800000018402C000000998000",
    "56" : {
      "7" : "641f8827-521e-408a-854b-36bf8d7c2072"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9980.00",
      "102" : "9980.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:38 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "refund",
    "state" : "COMPLETION",
    "identifier" : "202",
    "token" : "d40666fe-13f1-422a-94e4-affea978d6a5",
    "user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
    "acting_user_token" : "f1bdd3b2-8a72-4003-922a-5cc8b0ef9bef",
    "card_token" : "2790bc97-29f6-4507-88b0-42c4df1648b2",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9980.00,
      "available_balance" : 9980.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : 10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9980.00,
          "available_balance" : 9980.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : 10.00
        }
      }
    },
    "duration" : 74,
    "created_time" : "2020-10-13T16:16:37Z",
    "user_transaction_time" : "2020-10-13T16:16:37Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "191064",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000054"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2441",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:16:37.861Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111112592952441",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161637",
    "11" : "000000000054",
    "12" : "20201013161637",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1085",
    "38" : "191064",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099800000018402C000000998000",
    "56" : {
      "7" : "641f8827-521e-408a-854b-36bf8d7c2072"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9980.00",
      "102" : "9980.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - refund_transaction_token = token: null

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - log.logInfo("-----> refund_transaction_token = " + refund_transaction_token): -----> refund_transaction_token = d40666fe-13f1-422a-94e4-affea978d6a5

2020-10-13 11:16:38 - [MESSAGE][INFO] - -----> refund_transaction_token = d40666fe-13f1-422a-94e4-affea978d6a5

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - refund_transaction_token = refund_transaction_token: null

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable refund_transaction_token = " + refund_transaction_token): ----> GlobalVariable refund_transaction_token = d40666fe-13f1-422a-94e4-affea978d6a5

2020-10-13 11:16:38 - [MESSAGE][INFO] - ----> GlobalVariable refund_transaction_token = d40666fe-13f1-422a-94e4-affea978d6a5

2020-10-13 11:16:38 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:16:38 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:16:38 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:16:38 - [MESSAGE][INFO] - -----> refund_transaction_token = d40666fe-13f1-422a-94e4-affea978d6a5

2020-10-13 11:16:38 - [MESSAGE][INFO] - ----> GlobalVariable refund_transaction_token = d40666fe-13f1-422a-94e4-affea978d6a5

2020-10-13 11:16:38 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearingRefund is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2020-10-13 11:16:12 - [TEST_SUITE][PASSED] - Detailed_Onboarding_With_Transactions: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Financial Settled Transaction/Detailed_onboarding_with_financial_transactions]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
