<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Detailed_Onboarding_With_Transactions" time="25.109" tests="4" failures="0" errors="0">
   <testsuite name="Detailed_Onboarding_With_Transactions" tests="4" failures="0" errors="0" time="25.109" timestamp="2020-09-15 21:00:28" hostname="csmall - csmall-mbp" id="Test Suites/Detailed Test Suite/Detailed_Onboarding_With_Transactions">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="/Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024"/>
         <property name="logFiles" value="/Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="csmall - csmall-mbp"/>
         <property name="hostAddress" value="192.168.1.45"/>
         <property name="os" value="Mac OS X 64bit"/>
         <property name="katalonVersion" value="null.null"/>
      </properties>
      <testcase name="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Declined Transaction after CardTransition/Detailed_onboarding_and_cardtransition_result_declined_transaction" time="6.464" classname="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Declined Transaction after CardTransition/Detailed_onboarding_and_cardtransition_result_declined_transaction" status="PASSED">
         <system-out><![CDATA[2020-09-15 21:00:28 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Declined Transaction after CardTransition/Detailed_onboarding_and_cardtransition_result_declined_transaction: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Declined Transaction after CardTransition/Detailed_onboarding_and_cardtransition_result_declined_transaction

2020-09-15 21:00:28 - [TEST_STEP][PASSED] - card_product_token = detailed_Onboarding.detailed_onboarding.createCardProduct(start_date, card_product_name, payment_instrument, ecommerce, activate_upon_issue): detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-09-15 21:00:30 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/0.har

2020-09-15 21:00:30 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-09-15 21:00:30 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-09-15 21:00:30 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "363bf2f2-e600-4211-af8b-bc0cced847db",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-16T02:00:30Z",
  "last_modified_time" : "2020-09-16T02:00:30Z"
}

2020-09-15 21:00:30 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "363bf2f2-e600-4211-af8b-bc0cced847db",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-16T02:00:30Z",
  "last_modified_time" : "2020-09-16T02:00:30Z"
}

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = 363bf2f2-e600-4211-af8b-bc0cced847db

2020-09-15 21:00:30 - [MESSAGE][INFO] - -----> card_product_token = 363bf2f2-e600-4211-af8b-bc0cced847db

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = 363bf2f2-e600-4211-af8b-bc0cced847db

2020-09-15 21:00:30 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 363bf2f2-e600-4211-af8b-bc0cced847db

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:30 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:30 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:30 - [MESSAGE][INFO] - -----> card_product_token = 363bf2f2-e600-4211-af8b-bc0cced847db

2020-09-15 21:00:30 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 363bf2f2-e600-4211-af8b-bc0cced847db

2020-09-15 21:00:30 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-09-15 21:00:30 - [TEST_STEP][PASSED] - funding_source_token = detailed_Onboarding.detailed_onboarding.createCardFundingSource(program_name): detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-09-15 21:00:31 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/1.har

2020-09-15 21:00:31 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-09-15 21:00:31 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-09-15 21:00:31 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "ff941f0a-d663-4269-89ca-e6a3161e3fb0",
  "created_time" : "2020-09-16T02:00:31Z",
  "last_modified_time" : "2020-09-16T02:00:31Z",
  "account" : "12.003.001.000000"
}

2020-09-15 21:00:31 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "ff941f0a-d663-4269-89ca-e6a3161e3fb0",
  "created_time" : "2020-09-16T02:00:31Z",
  "last_modified_time" : "2020-09-16T02:00:31Z",
  "account" : "12.003.001.000000"
}

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - funding_token = token: null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = ff941f0a-d663-4269-89ca-e6a3161e3fb0

2020-09-15 21:00:31 - [MESSAGE][INFO] - -----> funding_token = ff941f0a-d663-4269-89ca-e6a3161e3fb0

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = ff941f0a-d663-4269-89ca-e6a3161e3fb0

2020-09-15 21:00:31 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = ff941f0a-d663-4269-89ca-e6a3161e3fb0

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:31 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:31 - [MESSAGE][INFO] - -----> funding_source_token = ff941f0a-d663-4269-89ca-e6a3161e3fb0

2020-09-15 21:00:31 - [MESSAGE][INFO] - ----> GlobalVariable funding_source_token = ff941f0a-d663-4269-89ca-e6a3161e3fb0

2020-09-15 21:00:31 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - user_token = detailed_Onboarding.detailed_onboarding.createDetailedUser(user_first_name, user_middle_name, user_last_name, active, user_password, phone, gender, user_email, ssn_expiration_date, user_id_type, user_address1, city, user_state, country, birth_date, corporate_card_holder, user_ssn, id_card_number, id_card_expiration_date, nationality, company, uses_parent_account, user_postal_code): detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-09-15 21:00:31 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/2.har

2020-09-15 21:00:31 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-09-15 21:00:31 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-09-15 21:00:31 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "fa25185c-8b1c-486f-99d7-0ae53a646a23",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-09-16T02:00:31Z",
  "last_modified_time" : "2020-09-16T02:00:31Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "6054e14e-64b9-458e-8e37-5ff2da644b19",
    "account_number" : "40013372138458413",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-09-15 21:00:31 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "fa25185c-8b1c-486f-99d7-0ae53a646a23",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-09-16T02:00:31Z",
  "last_modified_time" : "2020-09-16T02:00:31Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "6054e14e-64b9-458e-8e37-5ff2da644b19",
    "account_number" : "40013372138458413",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - user_token = token: null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = fa25185c-8b1c-486f-99d7-0ae53a646a23

2020-09-15 21:00:31 - [MESSAGE][INFO] - -----> user_token = fa25185c-8b1c-486f-99d7-0ae53a646a23

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = fa25185c-8b1c-486f-99d7-0ae53a646a23

2020-09-15 21:00:31 - [MESSAGE][INFO] - ----> GlobalVariable user_token = fa25185c-8b1c-486f-99d7-0ae53a646a23

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:31 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:31 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:31 - [MESSAGE][INFO] - -----> user_token = fa25185c-8b1c-486f-99d7-0ae53a646a23

2020-09-15 21:00:31 - [MESSAGE][INFO] - ----> GlobalVariable user_token = fa25185c-8b1c-486f-99d7-0ae53a646a23

2020-09-15 21:00:31 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-09-15 21:00:31 - [TEST_STEP][PASSED] - card_token = detailed_Onboarding.detailed_onboarding.createCard(user_token, card_product_token): detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-09-15 21:00:32 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/3.har

2020-09-15 21:00:32 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-09-15 21:00:32 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "fa25185c-8b1c-486f-99d7-0ae53a646a23",
  "card_product_token": "363bf2f2-e600-4211-af8b-bc0cced847db"
}

2020-09-15 21:00:32 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "fa25185c-8b1c-486f-99d7-0ae53a646a23",
  "card_product_token": "363bf2f2-e600-4211-af8b-bc0cced847db"
}

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-09-16T02:00:32Z",
  "last_modified_time" : "2020-09-16T02:00:32Z",
  "token" : "f864ddcc-0c79-4359-814e-96f5b79dd534",
  "user_token" : "fa25185c-8b1c-486f-99d7-0ae53a646a23",
  "card_product_token" : "363bf2f2-e600-4211-af8b-bc0cced847db",
  "last_four" : "9128",
  "pan" : "111111______9128",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59Z",
  "barcode" : "31574482965120999095",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-09-15 21:00:32 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-09-16T02:00:32Z",
  "last_modified_time" : "2020-09-16T02:00:32Z",
  "token" : "f864ddcc-0c79-4359-814e-96f5b79dd534",
  "user_token" : "fa25185c-8b1c-486f-99d7-0ae53a646a23",
  "card_product_token" : "363bf2f2-e600-4211-af8b-bc0cced847db",
  "last_four" : "9128",
  "pan" : "111111______9128",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59Z",
  "barcode" : "31574482965120999095",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - card_token = token: null

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = f864ddcc-0c79-4359-814e-96f5b79dd534

2020-09-15 21:00:32 - [MESSAGE][INFO] - -----> card_token = f864ddcc-0c79-4359-814e-96f5b79dd534

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = f864ddcc-0c79-4359-814e-96f5b79dd534

2020-09-15 21:00:32 - [MESSAGE][INFO] - ----> GlobalVariable card_token = f864ddcc-0c79-4359-814e-96f5b79dd534

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:32 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:32 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:32 - [MESSAGE][INFO] - -----> card_token = f864ddcc-0c79-4359-814e-96f5b79dd534

2020-09-15 21:00:32 - [MESSAGE][INFO] - ----> GlobalVariable card_token = f864ddcc-0c79-4359-814e-96f5b79dd534

2020-09-15 21:00:32 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-09-15 21:00:32 - [TEST_STEP][PASSED] - gpa_token = detailed_Onboarding.detailed_onboarding.createGpaOrder(user_token, gpaamount, currency_code, funding_source_token): detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-09-15 21:00:33 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/4.har

2020-09-15 21:00:33 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-09-15 21:00:33 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "fa25185c-8b1c-486f-99d7-0ae53a646a23",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "ff941f0a-d663-4269-89ca-e6a3161e3fb0"
}

2020-09-15 21:00:33 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "fa25185c-8b1c-486f-99d7-0ae53a646a23",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "ff941f0a-d663-4269-89ca-e6a3161e3fb0"
}

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "6f5152cb-2eff-42da-83e6-f1e34aac5f76",
  "amount" : 10000,
  "created_time" : "2020-09-16T02:00:33Z",
  "last_modified_time" : "2020-09-16T02:00:33Z",
  "transaction_token" : "1b452035-c3e8-4221-bf19-b7b8ed5e5549",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********3fb0",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-09-16T02:00:31Z",
      "last_modified_time" : "2020-09-16T02:00:31Z"
    }
  },
  "funding_source_token" : "**********3fb0",
  "user_token" : "fa25185c-8b1c-486f-99d7-0ae53a646a23",
  "currency_code" : "USD"
}

2020-09-15 21:00:33 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "6f5152cb-2eff-42da-83e6-f1e34aac5f76",
  "amount" : 10000,
  "created_time" : "2020-09-16T02:00:33Z",
  "last_modified_time" : "2020-09-16T02:00:33Z",
  "transaction_token" : "1b452035-c3e8-4221-bf19-b7b8ed5e5549",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********3fb0",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-09-16T02:00:31Z",
      "last_modified_time" : "2020-09-16T02:00:31Z"
    }
  },
  "funding_source_token" : "**********3fb0",
  "user_token" : "fa25185c-8b1c-486f-99d7-0ae53a646a23",
  "currency_code" : "USD"
}

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - gpa_token = token: null

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - log.logInfo("-----> gpa_token = " + gpa_token): -----> gpa_token = 6f5152cb-2eff-42da-83e6-f1e34aac5f76

2020-09-15 21:00:33 - [MESSAGE][INFO] - -----> gpa_token = 6f5152cb-2eff-42da-83e6-f1e34aac5f76

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - user_token = gpa_token: null

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable gpa_token = " + gpa_token): ----> GlobalVariable gpa_token = 

2020-09-15 21:00:33 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:33 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:33 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:33 - [MESSAGE][INFO] - -----> gpa_token = 6f5152cb-2eff-42da-83e6-f1e34aac5f76

2020-09-15 21:00:33 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 6f5152cb-2eff-42da-83e6-f1e34aac5f76

2020-09-15 21:00:33 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-09-15 21:00:33 - [TEST_STEP][PASSED] - detailed_Onboarding.detailed_onboarding.createCardTransition(card_token, "SUSPENDED", channel, "01"): detailed_Onboarding.detailed_onboarding.createCardTransition is PASSED

2020-09-15 21:00:33 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/5.har

2020-09-15 21:00:34 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardtransitions

2020-09-15 21:00:34 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardtransitions

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "f864ddcc-0c79-4359-814e-96f5b79dd534",
  "state": "SUSPENDED",
  "channel": "API",
  "reason_code": "01"
}

2020-09-15 21:00:34 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "f864ddcc-0c79-4359-814e-96f5b79dd534",
  "state": "SUSPENDED",
  "channel": "API",
  "reason_code": "01"
}

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "b1574830-e927-4ea5-b034-06ef19e35ef7",
  "card_token" : "f864ddcc-0c79-4359-814e-96f5b79dd534",
  "user_token" : "fa25185c-8b1c-486f-99d7-0ae53a646a23",
  "state" : "SUSPENDED",
  "reason" : "Suspended card",
  "reason_code" : "01",
  "channel" : "API",
  "fulfillment_status" : "ISSUED",
  "validations" : {
    "user" : {
      "birth_date" : false,
      "phone" : false,
      "ssn" : false,
      "random_name_line1_postfix" : false
    }
  },
  "type" : "state.suspended",
  "created_time" : "2020-09-16T02:00:33Z",
  "card_product_token" : "363bf2f2-e600-4211-af8b-bc0cced847db",
  "last_four" : "9128",
  "pan" : "111111______9128",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59.000Z",
  "barcode" : "31574482965120999095",
  "pin_is_set" : false,
  "user" : {
    "metadata" : { }
  },
  "card" : {
    "metadata" : { }
  }
}

2020-09-15 21:00:34 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "b1574830-e927-4ea5-b034-06ef19e35ef7",
  "card_token" : "f864ddcc-0c79-4359-814e-96f5b79dd534",
  "user_token" : "fa25185c-8b1c-486f-99d7-0ae53a646a23",
  "state" : "SUSPENDED",
  "reason" : "Suspended card",
  "reason_code" : "01",
  "channel" : "API",
  "fulfillment_status" : "ISSUED",
  "validations" : {
    "user" : {
      "birth_date" : false,
      "phone" : false,
      "ssn" : false,
      "random_name_line1_postfix" : false
    }
  },
  "type" : "state.suspended",
  "created_time" : "2020-09-16T02:00:33Z",
  "card_product_token" : "363bf2f2-e600-4211-af8b-bc0cced847db",
  "last_four" : "9128",
  "pan" : "111111______9128",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59.000Z",
  "barcode" : "31574482965120999095",
  "pin_is_set" : false,
  "user" : {
    "metadata" : { }
  },
  "card" : {
    "metadata" : { }
  }
}

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:34 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:34 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:34 - [MESSAGE][INFO] - -----> transition_reason = Suspended card

2020-09-15 21:00:34 - [MESSAGE][INFO] - -----> transitionState = SUSPENDED

2020-09-15 21:00:34 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardTransition is PASSED

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - original_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuthDeclined(card_token, trans_amount1, mid, beeceptor_declined_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuthDeclined is PASSED

2020-09-15 21:00:34 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/6.har

2020-09-15 21:00:34 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-09-15 21:00:34 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "f864ddcc-0c79-4359-814e-96f5b79dd534",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/declined-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:34 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "f864ddcc-0c79-4359-814e-96f5b79dd534",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/declined-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "DECLINED",
    "identifier" : "124",
    "token" : "60cc9316-7ec9-4018-b5ea-6c1809992eeb",
    "user_token" : "fa25185c-8b1c-486f-99d7-0ae53a646a23",
    "acting_user_token" : "fa25185c-8b1c-486f-99d7-0ae53a646a23",
    "card_token" : "f864ddcc-0c79-4359-814e-96f5b79dd534",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 10000.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 10000.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00
        }
      }
    },
    "duration" : 31,
    "created_time" : "2020-09-16T02:00:34Z",
    "user_transaction_time" : "2020-09-16T02:00:34Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "response" : {
      "code" : "1003",
      "memo" : "Card suspended"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "097700"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9128",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:34.457Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "231404805168",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111114058029128",
    "3" : "000000",
    "4" : 10.00,
    "7" : "0916020034",
    "11" : "000008097700",
    "12" : "20200916020034",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "21" : "231404805168",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1863",
    "39" : "0014",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Card suspended",
      "2" : "Card suspended",
      "3" : "59",
      "4" : "Card suspended"
    },
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:34 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "DECLINED",
    "identifier" : "124",
    "token" : "60cc9316-7ec9-4018-b5ea-6c1809992eeb",
    "user_token" : "fa25185c-8b1c-486f-99d7-0ae53a646a23",
    "acting_user_token" : "fa25185c-8b1c-486f-99d7-0ae53a646a23",
    "card_token" : "f864ddcc-0c79-4359-814e-96f5b79dd534",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 10000.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 10000.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00
        }
      }
    },
    "duration" : 31,
    "created_time" : "2020-09-16T02:00:34Z",
    "user_transaction_time" : "2020-09-16T02:00:34Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "response" : {
      "code" : "1003",
      "memo" : "Card suspended"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "097700"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9128",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:34.457Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "231404805168",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111114058029128",
    "3" : "000000",
    "4" : 10.00,
    "7" : "0916020034",
    "11" : "000008097700",
    "12" : "20200916020034",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "21" : "231404805168",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1863",
    "39" : "0014",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Card suspended",
      "2" : "Card suspended",
      "3" : "59",
      "4" : "Card suspended"
    },
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - declinedState = state: null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - log.logInfo("-----> transaction.state = " + declinedState): -----> transaction.state = DECLINED

2020-09-15 21:00:34 - [MESSAGE][INFO] - -----> transaction.state = DECLINED

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - verifyElementPropertyValue(response, "transaction.state", "DECLINED"): Verify element property value successfully

2020-09-15 21:00:34 - [MESSAGE][PASSED] - Verify element property value successfully

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - declined_response_reason = memo: null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - log.logInfo("-----> declined_response_reason = " + declined_response_reason): -----> declined_response_reason = Card suspended

2020-09-15 21:00:34 - [MESSAGE][INFO] - -----> declined_response_reason = Card suspended

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = 60cc9316-7ec9-4018-b5ea-6c1809992eeb

2020-09-15 21:00:34 - [MESSAGE][INFO] - -----> original_transaction_token = 60cc9316-7ec9-4018-b5ea-6c1809992eeb

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = 60cc9316-7ec9-4018-b5ea-6c1809992eeb

2020-09-15 21:00:34 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 60cc9316-7ec9-4018-b5ea-6c1809992eeb

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:34 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:34 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:34 - [MESSAGE][INFO] - -----> original_transaction_token = 60cc9316-7ec9-4018-b5ea-6c1809992eeb

2020-09-15 21:00:34 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 60cc9316-7ec9-4018-b5ea-6c1809992eeb

2020-09-15 21:00:34 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuthDeclined is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction" time="5.604" classname="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction" status="PASSED">
         <system-out><![CDATA[2020-09-15 21:00:34 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction

2020-09-15 21:00:34 - [TEST_STEP][PASSED] - card_product_token = detailed_Onboarding.detailed_onboarding.createCardProduct(start_date, card_product_name, payment_instrument, ecommerce, activate_upon_issue): detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-09-15 21:00:35 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/7.har

2020-09-15 21:00:35 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-09-15 21:00:35 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-09-15 21:00:35 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "665ba205-a1d5-4194-80c6-b05bc005a759",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-16T02:00:35Z",
  "last_modified_time" : "2020-09-16T02:00:35Z"
}

2020-09-15 21:00:35 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "665ba205-a1d5-4194-80c6-b05bc005a759",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-16T02:00:35Z",
  "last_modified_time" : "2020-09-16T02:00:35Z"
}

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = 665ba205-a1d5-4194-80c6-b05bc005a759

2020-09-15 21:00:35 - [MESSAGE][INFO] - -----> card_product_token = 665ba205-a1d5-4194-80c6-b05bc005a759

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = 665ba205-a1d5-4194-80c6-b05bc005a759

2020-09-15 21:00:35 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 665ba205-a1d5-4194-80c6-b05bc005a759

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:35 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:35 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:35 - [MESSAGE][INFO] - -----> card_product_token = 665ba205-a1d5-4194-80c6-b05bc005a759

2020-09-15 21:00:35 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 665ba205-a1d5-4194-80c6-b05bc005a759

2020-09-15 21:00:35 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-09-15 21:00:35 - [TEST_STEP][PASSED] - funding_source_token = detailed_Onboarding.detailed_onboarding.createCardFundingSource(program_name): detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-09-15 21:00:35 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/8.har

2020-09-15 21:00:35 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-09-15 21:00:36 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-09-15 21:00:36 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "d38e2072-8fb2-40c2-a365-b8b957d60690",
  "created_time" : "2020-09-16T02:00:35Z",
  "last_modified_time" : "2020-09-16T02:00:35Z",
  "account" : "12.003.001.000000"
}

2020-09-15 21:00:36 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "d38e2072-8fb2-40c2-a365-b8b957d60690",
  "created_time" : "2020-09-16T02:00:35Z",
  "last_modified_time" : "2020-09-16T02:00:35Z",
  "account" : "12.003.001.000000"
}

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - funding_token = token: null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = d38e2072-8fb2-40c2-a365-b8b957d60690

2020-09-15 21:00:36 - [MESSAGE][INFO] - -----> funding_token = d38e2072-8fb2-40c2-a365-b8b957d60690

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = d38e2072-8fb2-40c2-a365-b8b957d60690

2020-09-15 21:00:36 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = d38e2072-8fb2-40c2-a365-b8b957d60690

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:36 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:36 - [MESSAGE][INFO] - -----> funding_source_token = d38e2072-8fb2-40c2-a365-b8b957d60690

2020-09-15 21:00:36 - [MESSAGE][INFO] - ----> GlobalVariable funding_source_token = d38e2072-8fb2-40c2-a365-b8b957d60690

2020-09-15 21:00:36 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - user_token = detailed_Onboarding.detailed_onboarding.createDetailedUser(user_first_name, user_middle_name, user_last_name, active, user_password, phone, gender, user_email, ssn_expiration_date, user_id_type, user_address1, city, user_state, country, birth_date, corporate_card_holder, user_ssn, id_card_number, id_card_expiration_date, nationality, company, uses_parent_account, user_postal_code): detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-09-15 21:00:36 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/9.har

2020-09-15 21:00:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-09-15 21:00:36 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-09-15 21:00:36 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-09-16T02:00:36Z",
  "last_modified_time" : "2020-09-16T02:00:36Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "f56323f9-1e6d-488d-973b-6f96e1074702",
    "account_number" : "40013372147763365",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-09-15 21:00:36 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-09-16T02:00:36Z",
  "last_modified_time" : "2020-09-16T02:00:36Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "f56323f9-1e6d-488d-973b-6f96e1074702",
    "account_number" : "40013372147763365",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - user_token = token: null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = 6a7cfbf3-35ae-403e-becf-2d4d68662267

2020-09-15 21:00:36 - [MESSAGE][INFO] - -----> user_token = 6a7cfbf3-35ae-403e-becf-2d4d68662267

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = 6a7cfbf3-35ae-403e-becf-2d4d68662267

2020-09-15 21:00:36 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 6a7cfbf3-35ae-403e-becf-2d4d68662267

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:36 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:36 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:36 - [MESSAGE][INFO] - -----> user_token = 6a7cfbf3-35ae-403e-becf-2d4d68662267

2020-09-15 21:00:36 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 6a7cfbf3-35ae-403e-becf-2d4d68662267

2020-09-15 21:00:36 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-09-15 21:00:36 - [TEST_STEP][PASSED] - card_token = detailed_Onboarding.detailed_onboarding.createCard(user_token, card_product_token): detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-09-15 21:00:37 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/10.har

2020-09-15 21:00:37 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-09-15 21:00:37 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "6a7cfbf3-35ae-403e-becf-2d4d68662267",
  "card_product_token": "665ba205-a1d5-4194-80c6-b05bc005a759"
}

2020-09-15 21:00:37 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "6a7cfbf3-35ae-403e-becf-2d4d68662267",
  "card_product_token": "665ba205-a1d5-4194-80c6-b05bc005a759"
}

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-09-16T02:00:37Z",
  "last_modified_time" : "2020-09-16T02:00:37Z",
  "token" : "d6662607-f162-4218-97cf-a4222b4c2e85",
  "user_token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
  "card_product_token" : "665ba205-a1d5-4194-80c6-b05bc005a759",
  "last_four" : "4031",
  "pan" : "111111______4031",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59Z",
  "barcode" : "45013748189036920647",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-09-15 21:00:37 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-09-16T02:00:37Z",
  "last_modified_time" : "2020-09-16T02:00:37Z",
  "token" : "d6662607-f162-4218-97cf-a4222b4c2e85",
  "user_token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
  "card_product_token" : "665ba205-a1d5-4194-80c6-b05bc005a759",
  "last_four" : "4031",
  "pan" : "111111______4031",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59Z",
  "barcode" : "45013748189036920647",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - card_token = token: null

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = d6662607-f162-4218-97cf-a4222b4c2e85

2020-09-15 21:00:37 - [MESSAGE][INFO] - -----> card_token = d6662607-f162-4218-97cf-a4222b4c2e85

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = d6662607-f162-4218-97cf-a4222b4c2e85

2020-09-15 21:00:37 - [MESSAGE][INFO] - ----> GlobalVariable card_token = d6662607-f162-4218-97cf-a4222b4c2e85

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:37 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:37 - [MESSAGE][INFO] - -----> card_token = d6662607-f162-4218-97cf-a4222b4c2e85

2020-09-15 21:00:37 - [MESSAGE][INFO] - ----> GlobalVariable card_token = d6662607-f162-4218-97cf-a4222b4c2e85

2020-09-15 21:00:37 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-09-15 21:00:37 - [TEST_STEP][PASSED] - gpa_token = detailed_Onboarding.detailed_onboarding.createGpaOrder(user_token, gpaamount, currency_code, funding_source_token): detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-09-15 21:00:38 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/11.har

2020-09-15 21:00:38 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-09-15 21:00:38 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "6a7cfbf3-35ae-403e-becf-2d4d68662267",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "d38e2072-8fb2-40c2-a365-b8b957d60690"
}

2020-09-15 21:00:38 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "6a7cfbf3-35ae-403e-becf-2d4d68662267",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "d38e2072-8fb2-40c2-a365-b8b957d60690"
}

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "ba63521c-ef54-4268-a3ce-4d1c34032941",
  "amount" : 10000,
  "created_time" : "2020-09-16T02:00:38Z",
  "last_modified_time" : "2020-09-16T02:00:38Z",
  "transaction_token" : "cc1ea967-4b57-48a0-abbc-68088591a124",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********0690",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-09-16T02:00:35Z",
      "last_modified_time" : "2020-09-16T02:00:35Z"
    }
  },
  "funding_source_token" : "**********0690",
  "user_token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
  "currency_code" : "USD"
}

2020-09-15 21:00:38 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "ba63521c-ef54-4268-a3ce-4d1c34032941",
  "amount" : 10000,
  "created_time" : "2020-09-16T02:00:38Z",
  "last_modified_time" : "2020-09-16T02:00:38Z",
  "transaction_token" : "cc1ea967-4b57-48a0-abbc-68088591a124",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********0690",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-09-16T02:00:35Z",
      "last_modified_time" : "2020-09-16T02:00:35Z"
    }
  },
  "funding_source_token" : "**********0690",
  "user_token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
  "currency_code" : "USD"
}

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - gpa_token = token: null

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - log.logInfo("-----> gpa_token = " + gpa_token): -----> gpa_token = ba63521c-ef54-4268-a3ce-4d1c34032941

2020-09-15 21:00:38 - [MESSAGE][INFO] - -----> gpa_token = ba63521c-ef54-4268-a3ce-4d1c34032941

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - user_token = gpa_token: null

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable gpa_token = " + gpa_token): ----> GlobalVariable gpa_token = 6f5152cb-2eff-42da-83e6-f1e34aac5f76

2020-09-15 21:00:38 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 6f5152cb-2eff-42da-83e6-f1e34aac5f76

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:38 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:38 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:38 - [MESSAGE][INFO] - -----> gpa_token = ba63521c-ef54-4268-a3ce-4d1c34032941

2020-09-15 21:00:38 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = ba63521c-ef54-4268-a3ce-4d1c34032941

2020-09-15 21:00:38 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-09-15 21:00:38 - [TEST_STEP][PASSED] - original_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuth(card_token, trans_amount1, mid, beeceptor_create_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-09-15 21:00:38 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/12.har

2020-09-15 21:00:38 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-09-15 21:00:39 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "d6662607-f162-4218-97cf-a4222b4c2e85",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:39 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "d6662607-f162-4218-97cf-a4222b4c2e85",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "126",
    "token" : "82e1e58b-c1f0-4808-b05f-7b7702827745",
    "user_token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
    "acting_user_token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
    "card_token" : "d6662607-f162-4218-97cf-a4222b4c2e85",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 101,
    "created_time" : "2020-09-16T02:00:38Z",
    "user_transaction_time" : "2020-09-16T02:00:38Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "158840",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "452340"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "4031",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:38.632Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "593342158442",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111113968424031",
    "3" : "000000",
    "4" : 10.00,
    "7" : "0916020038",
    "11" : "000005452340",
    "12" : "20200916020038",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "21" : "593342158442",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1878",
    "38" : "158840",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:39 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "126",
    "token" : "82e1e58b-c1f0-4808-b05f-7b7702827745",
    "user_token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
    "acting_user_token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
    "card_token" : "d6662607-f162-4218-97cf-a4222b4c2e85",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 101,
    "created_time" : "2020-09-16T02:00:38Z",
    "user_transaction_time" : "2020-09-16T02:00:38Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "158840",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "452340"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "4031",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:38.632Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "593342158442",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111113968424031",
    "3" : "000000",
    "4" : 10.00,
    "7" : "0916020038",
    "11" : "000005452340",
    "12" : "20200916020038",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "21" : "593342158442",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1878",
    "38" : "158840",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = 82e1e58b-c1f0-4808-b05f-7b7702827745

2020-09-15 21:00:39 - [MESSAGE][INFO] - -----> original_transaction_token = 82e1e58b-c1f0-4808-b05f-7b7702827745

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = 82e1e58b-c1f0-4808-b05f-7b7702827745

2020-09-15 21:00:39 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 82e1e58b-c1f0-4808-b05f-7b7702827745

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:39 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:39 - [MESSAGE][INFO] - -----> original_transaction_token = 82e1e58b-c1f0-4808-b05f-7b7702827745

2020-09-15 21:00:39 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 82e1e58b-c1f0-4808-b05f-7b7702827745

2020-09-15 21:00:39 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - advice_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuthAdvice(original_transaction_token, advice_amount, mid, beeceptor_create_auth_advice, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-09-15 21:00:39 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/13.har

2020-09-15 21:00:39 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-09-15 21:00:39 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "82e1e58b-c1f0-4808-b05f-7b7702827745",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:39 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "82e1e58b-c1f0-4808-b05f-7b7702827745",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "127",
    "token" : "ecfa3994-93e6-4601-9ddf-a3de627970b3",
    "user_token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
    "acting_user_token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
    "card_token" : "d6662607-f162-4218-97cf-a4222b4c2e85",
    "preceding_related_transaction_token" : "82e1e58b-c1f0-4808-b05f-7b7702827745",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 109,
    "created_time" : "2020-09-16T02:00:39Z",
    "user_transaction_time" : "2020-09-16T02:00:38Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "158840",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000051"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "4031",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:39.389Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "593342158442",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111113968424031",
    "3" : "900000",
    "4" : 1.00,
    "7" : "0916020039",
    "11" : "000000000051",
    "12" : "20200916020039",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "21" : "593342158442",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1864",
    "38" : "158840",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "82e1e58b-c1f0-4808-b05f-7b7702827745"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:39 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "127",
    "token" : "ecfa3994-93e6-4601-9ddf-a3de627970b3",
    "user_token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
    "acting_user_token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
    "card_token" : "d6662607-f162-4218-97cf-a4222b4c2e85",
    "preceding_related_transaction_token" : "82e1e58b-c1f0-4808-b05f-7b7702827745",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 109,
    "created_time" : "2020-09-16T02:00:39Z",
    "user_transaction_time" : "2020-09-16T02:00:38Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "158840",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000051"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "4031",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:39.389Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "593342158442",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111113968424031",
    "3" : "900000",
    "4" : 1.00,
    "7" : "0916020039",
    "11" : "000000000051",
    "12" : "20200916020039",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "21" : "593342158442",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1864",
    "38" : "158840",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "82e1e58b-c1f0-4808-b05f-7b7702827745"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - advice_transaction_token = token: null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - log.logInfo("-----> advice_transaction_token = " + advice_transaction_token): -----> advice_transaction_token = ecfa3994-93e6-4601-9ddf-a3de627970b3

2020-09-15 21:00:39 - [MESSAGE][INFO] - -----> advice_transaction_token = ecfa3994-93e6-4601-9ddf-a3de627970b3

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - advice_transaction_token = advice_transaction_token: null

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable advice_transaction_token = " + advice_transaction_token): ----> GlobalVariable advice_transaction_token = ecfa3994-93e6-4601-9ddf-a3de627970b3

2020-09-15 21:00:39 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = ecfa3994-93e6-4601-9ddf-a3de627970b3

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:39 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:39 - [MESSAGE][INFO] - -----> advice_transaction_token = ecfa3994-93e6-4601-9ddf-a3de627970b3

2020-09-15 21:00:39 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = ecfa3994-93e6-4601-9ddf-a3de627970b3

2020-09-15 21:00:39 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-09-15 21:00:39 - [TEST_STEP][PASSED] - cleared_transaction_token = detailed_Onboarding.detailed_onboarding.createTransClearing(original_transaction_token, trans_amount1, mid, force_post, beeceptor_settle_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-09-15 21:00:40 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/14.har

2020-09-15 21:00:40 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 21:00:40 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "82e1e58b-c1f0-4808-b05f-7b7702827745",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:40 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "82e1e58b-c1f0-4808-b05f-7b7702827745",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "128",
    "token" : "a965866d-94e9-4db4-83d6-fb659e6552e9",
    "user_token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
    "acting_user_token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
    "card_token" : "d6662607-f162-4218-97cf-a4222b4c2e85",
    "preceding_related_transaction_token" : "82e1e58b-c1f0-4808-b05f-7b7702827745",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 70,
    "created_time" : "2020-09-16T02:00:40Z",
    "user_transaction_time" : "2020-09-16T02:00:40Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "158840",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000053"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "4031",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:40.150Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "593342158442",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111113968424031",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0916020040",
    "11" : "000000000053",
    "12" : "20200916020040",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "21" : "593342158442",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1879",
    "38" : "158840",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "82e1e58b-c1f0-4808-b05f-7b7702827745"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:40 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "128",
    "token" : "a965866d-94e9-4db4-83d6-fb659e6552e9",
    "user_token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
    "acting_user_token" : "6a7cfbf3-35ae-403e-becf-2d4d68662267",
    "card_token" : "d6662607-f162-4218-97cf-a4222b4c2e85",
    "preceding_related_transaction_token" : "82e1e58b-c1f0-4808-b05f-7b7702827745",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 70,
    "created_time" : "2020-09-16T02:00:40Z",
    "user_transaction_time" : "2020-09-16T02:00:40Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "158840",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000053"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "4031",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:40.150Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "593342158442",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111113968424031",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0916020040",
    "11" : "000000000053",
    "12" : "20200916020040",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "21" : "593342158442",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1879",
    "38" : "158840",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "82e1e58b-c1f0-4808-b05f-7b7702827745"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - cleared_transaction_token = token: null

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - log.logInfo("-----> cleared_transaction_token = " + cleared_transaction_token): -----> cleared_transaction_token = a965866d-94e9-4db4-83d6-fb659e6552e9

2020-09-15 21:00:40 - [MESSAGE][INFO] - -----> cleared_transaction_token = a965866d-94e9-4db4-83d6-fb659e6552e9

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - cleared_transaction_token = cleared_transaction_token: null

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable cleared_transaction_token = " + cleared_transaction_token): ----> GlobalVariable cleared_transaction_token = a965866d-94e9-4db4-83d6-fb659e6552e9

2020-09-15 21:00:40 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = a965866d-94e9-4db4-83d6-fb659e6552e9

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:40 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:40 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:40 - [MESSAGE][INFO] - -----> cleared_transaction_token = a965866d-94e9-4db4-83d6-fb659e6552e9

2020-09-15 21:00:40 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = a965866d-94e9-4db4-83d6-fb659e6552e9

2020-09-15 21:00:40 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction With Refund/Detailed_onboarding_with_card_transaction_and_refund" time="5.969" classname="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction With Refund/Detailed_onboarding_with_card_transaction_and_refund" status="PASSED">
         <system-out><![CDATA[2020-09-15 21:00:40 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction With Refund/Detailed_onboarding_with_card_transaction_and_refund: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction With Refund/Detailed_onboarding_with_card_transaction_and_refund

2020-09-15 21:00:40 - [TEST_STEP][PASSED] - card_product_token = detailed_Onboarding.detailed_onboarding.createCardProduct(start_date, card_product_name, payment_instrument, ecommerce, activate_upon_issue): detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-09-15 21:00:41 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/15.har

2020-09-15 21:00:41 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-09-15 21:00:41 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-09-15 21:00:41 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "753c5f83-72e4-4468-93a0-5a163e557742",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-16T02:00:40Z",
  "last_modified_time" : "2020-09-16T02:00:40Z"
}

2020-09-15 21:00:41 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "753c5f83-72e4-4468-93a0-5a163e557742",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-16T02:00:40Z",
  "last_modified_time" : "2020-09-16T02:00:40Z"
}

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = 753c5f83-72e4-4468-93a0-5a163e557742

2020-09-15 21:00:41 - [MESSAGE][INFO] - -----> card_product_token = 753c5f83-72e4-4468-93a0-5a163e557742

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = 753c5f83-72e4-4468-93a0-5a163e557742

2020-09-15 21:00:41 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 753c5f83-72e4-4468-93a0-5a163e557742

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:41 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:41 - [MESSAGE][INFO] - -----> card_product_token = 753c5f83-72e4-4468-93a0-5a163e557742

2020-09-15 21:00:41 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 753c5f83-72e4-4468-93a0-5a163e557742

2020-09-15 21:00:41 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - funding_source_token = detailed_Onboarding.detailed_onboarding.createCardFundingSource(program_name): detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-09-15 21:00:41 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/16.har

2020-09-15 21:00:41 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-09-15 21:00:41 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-09-15 21:00:41 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "334949f6-17ab-4ed9-a507-c0c460ab5dc0",
  "created_time" : "2020-09-16T02:00:41Z",
  "last_modified_time" : "2020-09-16T02:00:41Z",
  "account" : "12.003.001.000000"
}

2020-09-15 21:00:41 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "334949f6-17ab-4ed9-a507-c0c460ab5dc0",
  "created_time" : "2020-09-16T02:00:41Z",
  "last_modified_time" : "2020-09-16T02:00:41Z",
  "account" : "12.003.001.000000"
}

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - funding_token = token: null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = 334949f6-17ab-4ed9-a507-c0c460ab5dc0

2020-09-15 21:00:41 - [MESSAGE][INFO] - -----> funding_token = 334949f6-17ab-4ed9-a507-c0c460ab5dc0

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = 334949f6-17ab-4ed9-a507-c0c460ab5dc0

2020-09-15 21:00:41 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = 334949f6-17ab-4ed9-a507-c0c460ab5dc0

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:41 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:41 - [MESSAGE][INFO] - -----> funding_source_token = 334949f6-17ab-4ed9-a507-c0c460ab5dc0

2020-09-15 21:00:41 - [MESSAGE][INFO] - ----> GlobalVariable funding_source_token = 334949f6-17ab-4ed9-a507-c0c460ab5dc0

2020-09-15 21:00:41 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-09-15 21:00:41 - [TEST_STEP][PASSED] - user_token = detailed_Onboarding.detailed_onboarding.createDetailedUser(user_first_name, user_middle_name, user_last_name, active, user_password, phone, gender, user_email, ssn_expiration_date, user_id_type, user_address1, city, user_state, country, birth_date, corporate_card_holder, user_ssn, id_card_number, id_card_expiration_date, nationality, company, uses_parent_account, user_postal_code): detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-09-15 21:00:42 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/17.har

2020-09-15 21:00:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-09-15 21:00:42 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-09-15 21:00:42 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-09-16T02:00:41Z",
  "last_modified_time" : "2020-09-16T02:00:41Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "31720219-e3f2-4e74-bc13-49045c07b9e1",
    "account_number" : "40013372157529615",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-09-15 21:00:42 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-09-16T02:00:41Z",
  "last_modified_time" : "2020-09-16T02:00:41Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "31720219-e3f2-4e74-bc13-49045c07b9e1",
    "account_number" : "40013372157529615",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - user_token = token: null

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = 2e56b717-ab1c-4e17-805f-10bb0b1eef65

2020-09-15 21:00:42 - [MESSAGE][INFO] - -----> user_token = 2e56b717-ab1c-4e17-805f-10bb0b1eef65

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = 2e56b717-ab1c-4e17-805f-10bb0b1eef65

2020-09-15 21:00:42 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 2e56b717-ab1c-4e17-805f-10bb0b1eef65

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:42 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:42 - [MESSAGE][INFO] - -----> user_token = 2e56b717-ab1c-4e17-805f-10bb0b1eef65

2020-09-15 21:00:42 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 2e56b717-ab1c-4e17-805f-10bb0b1eef65

2020-09-15 21:00:42 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-09-15 21:00:42 - [TEST_STEP][PASSED] - card_token = detailed_Onboarding.detailed_onboarding.createCard(user_token, card_product_token): detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-09-15 21:00:42 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/18.har

2020-09-15 21:00:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-09-15 21:00:43 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
  "card_product_token": "753c5f83-72e4-4468-93a0-5a163e557742"
}

2020-09-15 21:00:43 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
  "card_product_token": "753c5f83-72e4-4468-93a0-5a163e557742"
}

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-09-16T02:00:42Z",
  "last_modified_time" : "2020-09-16T02:00:42Z",
  "token" : "57cd070a-756f-4aa5-ac63-7ed92c7b999c",
  "user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
  "card_product_token" : "753c5f83-72e4-4468-93a0-5a163e557742",
  "last_four" : "3243",
  "pan" : "111111______3243",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59Z",
  "barcode" : "17857214412361367950",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-09-15 21:00:43 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-09-16T02:00:42Z",
  "last_modified_time" : "2020-09-16T02:00:42Z",
  "token" : "57cd070a-756f-4aa5-ac63-7ed92c7b999c",
  "user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
  "card_product_token" : "753c5f83-72e4-4468-93a0-5a163e557742",
  "last_four" : "3243",
  "pan" : "111111______3243",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59Z",
  "barcode" : "17857214412361367950",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - card_token = token: null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = 57cd070a-756f-4aa5-ac63-7ed92c7b999c

2020-09-15 21:00:43 - [MESSAGE][INFO] - -----> card_token = 57cd070a-756f-4aa5-ac63-7ed92c7b999c

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = 57cd070a-756f-4aa5-ac63-7ed92c7b999c

2020-09-15 21:00:43 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 57cd070a-756f-4aa5-ac63-7ed92c7b999c

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:43 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:43 - [MESSAGE][INFO] - -----> card_token = 57cd070a-756f-4aa5-ac63-7ed92c7b999c

2020-09-15 21:00:43 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 57cd070a-756f-4aa5-ac63-7ed92c7b999c

2020-09-15 21:00:43 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - gpa_token = detailed_Onboarding.detailed_onboarding.createGpaOrder(user_token, gpaamount, currency_code, funding_source_token): detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-09-15 21:00:43 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/19.har

2020-09-15 21:00:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-09-15 21:00:43 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "334949f6-17ab-4ed9-a507-c0c460ab5dc0"
}

2020-09-15 21:00:43 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "334949f6-17ab-4ed9-a507-c0c460ab5dc0"
}

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "75d0473d-4a43-4b1c-9c60-6977cf97497c",
  "amount" : 10000,
  "created_time" : "2020-09-16T02:00:43Z",
  "last_modified_time" : "2020-09-16T02:00:43Z",
  "transaction_token" : "0664beec-ad9e-47de-97a3-c9baf3cfe5d1",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********5dc0",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-09-16T02:00:41Z",
      "last_modified_time" : "2020-09-16T02:00:41Z"
    }
  },
  "funding_source_token" : "**********5dc0",
  "user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
  "currency_code" : "USD"
}

2020-09-15 21:00:43 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "75d0473d-4a43-4b1c-9c60-6977cf97497c",
  "amount" : 10000,
  "created_time" : "2020-09-16T02:00:43Z",
  "last_modified_time" : "2020-09-16T02:00:43Z",
  "transaction_token" : "0664beec-ad9e-47de-97a3-c9baf3cfe5d1",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********5dc0",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-09-16T02:00:41Z",
      "last_modified_time" : "2020-09-16T02:00:41Z"
    }
  },
  "funding_source_token" : "**********5dc0",
  "user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
  "currency_code" : "USD"
}

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - gpa_token = token: null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - log.logInfo("-----> gpa_token = " + gpa_token): -----> gpa_token = 75d0473d-4a43-4b1c-9c60-6977cf97497c

2020-09-15 21:00:43 - [MESSAGE][INFO] - -----> gpa_token = 75d0473d-4a43-4b1c-9c60-6977cf97497c

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - user_token = gpa_token: null

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable gpa_token = " + gpa_token): ----> GlobalVariable gpa_token = ba63521c-ef54-4268-a3ce-4d1c34032941

2020-09-15 21:00:43 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = ba63521c-ef54-4268-a3ce-4d1c34032941

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:43 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:43 - [MESSAGE][INFO] - -----> gpa_token = 75d0473d-4a43-4b1c-9c60-6977cf97497c

2020-09-15 21:00:43 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 75d0473d-4a43-4b1c-9c60-6977cf97497c

2020-09-15 21:00:43 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-09-15 21:00:43 - [TEST_STEP][PASSED] - original_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuth(card_token, trans_amount1, mid, beeceptor_create_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-09-15 21:00:44 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/20.har

2020-09-15 21:00:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-09-15 21:00:44 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "57cd070a-756f-4aa5-ac63-7ed92c7b999c",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:44 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "57cd070a-756f-4aa5-ac63-7ed92c7b999c",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "130",
    "token" : "55598200-4c01-4dac-a182-c2a0bafaf06b",
    "user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
    "acting_user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
    "card_token" : "57cd070a-756f-4aa5-ac63-7ed92c7b999c",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 88,
    "created_time" : "2020-09-16T02:00:43Z",
    "user_transaction_time" : "2020-09-16T02:00:43Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "967143",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "353076"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "3243",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:43.977Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "443187956610",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111115175343243",
    "3" : "000000",
    "4" : 10.00,
    "7" : "0916020043",
    "11" : "000006353076",
    "12" : "20200916020043",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "21" : "443187956610",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1865",
    "38" : "967143",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:44 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "130",
    "token" : "55598200-4c01-4dac-a182-c2a0bafaf06b",
    "user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
    "acting_user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
    "card_token" : "57cd070a-756f-4aa5-ac63-7ed92c7b999c",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 88,
    "created_time" : "2020-09-16T02:00:43Z",
    "user_transaction_time" : "2020-09-16T02:00:43Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "967143",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "353076"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "3243",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:43.977Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "443187956610",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111115175343243",
    "3" : "000000",
    "4" : 10.00,
    "7" : "0916020043",
    "11" : "000006353076",
    "12" : "20200916020043",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "21" : "443187956610",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1865",
    "38" : "967143",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = 55598200-4c01-4dac-a182-c2a0bafaf06b

2020-09-15 21:00:44 - [MESSAGE][INFO] - -----> original_transaction_token = 55598200-4c01-4dac-a182-c2a0bafaf06b

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = 55598200-4c01-4dac-a182-c2a0bafaf06b

2020-09-15 21:00:44 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 55598200-4c01-4dac-a182-c2a0bafaf06b

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:44 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:44 - [MESSAGE][INFO] - -----> original_transaction_token = 55598200-4c01-4dac-a182-c2a0bafaf06b

2020-09-15 21:00:44 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 55598200-4c01-4dac-a182-c2a0bafaf06b

2020-09-15 21:00:44 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-09-15 21:00:44 - [TEST_STEP][PASSED] - advice_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuthAdvice(original_transaction_token, advice_amount, mid, beeceptor_create_auth_advice, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-09-15 21:00:44 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/21.har

2020-09-15 21:00:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-09-15 21:00:45 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "55598200-4c01-4dac-a182-c2a0bafaf06b",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:45 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "55598200-4c01-4dac-a182-c2a0bafaf06b",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "131",
    "token" : "5bd78955-6891-41d4-8e14-2949699290b1",
    "user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
    "acting_user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
    "card_token" : "57cd070a-756f-4aa5-ac63-7ed92c7b999c",
    "preceding_related_transaction_token" : "55598200-4c01-4dac-a182-c2a0bafaf06b",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 97,
    "created_time" : "2020-09-16T02:00:44Z",
    "user_transaction_time" : "2020-09-16T02:00:43Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "967143",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000054"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "3243",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:44.668Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "443187956610",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111115175343243",
    "3" : "900000",
    "4" : 1.00,
    "7" : "0916020044",
    "11" : "000000000054",
    "12" : "20200916020044",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "21" : "443187956610",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1880",
    "38" : "967143",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "55598200-4c01-4dac-a182-c2a0bafaf06b"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:45 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "131",
    "token" : "5bd78955-6891-41d4-8e14-2949699290b1",
    "user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
    "acting_user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
    "card_token" : "57cd070a-756f-4aa5-ac63-7ed92c7b999c",
    "preceding_related_transaction_token" : "55598200-4c01-4dac-a182-c2a0bafaf06b",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 97,
    "created_time" : "2020-09-16T02:00:44Z",
    "user_transaction_time" : "2020-09-16T02:00:43Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "967143",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000054"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "3243",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:44.668Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "443187956610",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111115175343243",
    "3" : "900000",
    "4" : 1.00,
    "7" : "0916020044",
    "11" : "000000000054",
    "12" : "20200916020044",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "21" : "443187956610",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1880",
    "38" : "967143",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "55598200-4c01-4dac-a182-c2a0bafaf06b"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - advice_transaction_token = token: null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - log.logInfo("-----> advice_transaction_token = " + advice_transaction_token): -----> advice_transaction_token = 5bd78955-6891-41d4-8e14-2949699290b1

2020-09-15 21:00:45 - [MESSAGE][INFO] - -----> advice_transaction_token = 5bd78955-6891-41d4-8e14-2949699290b1

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - advice_transaction_token = advice_transaction_token: null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable advice_transaction_token = " + advice_transaction_token): ----> GlobalVariable advice_transaction_token = 5bd78955-6891-41d4-8e14-2949699290b1

2020-09-15 21:00:45 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = 5bd78955-6891-41d4-8e14-2949699290b1

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:45 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:45 - [MESSAGE][INFO] - -----> advice_transaction_token = 5bd78955-6891-41d4-8e14-2949699290b1

2020-09-15 21:00:45 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = 5bd78955-6891-41d4-8e14-2949699290b1

2020-09-15 21:00:45 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - cleared_transaction_token = detailed_Onboarding.detailed_onboarding.createTransClearing(original_transaction_token, trans_amount1, mid, force_post, beeceptor_settle_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-09-15 21:00:45 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/22.har

2020-09-15 21:00:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 21:00:45 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "55598200-4c01-4dac-a182-c2a0bafaf06b",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:45 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "55598200-4c01-4dac-a182-c2a0bafaf06b",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "132",
    "token" : "ad466705-de17-4937-83c6-afddbb58c418",
    "user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
    "acting_user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
    "card_token" : "57cd070a-756f-4aa5-ac63-7ed92c7b999c",
    "preceding_related_transaction_token" : "55598200-4c01-4dac-a182-c2a0bafaf06b",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 69,
    "created_time" : "2020-09-16T02:00:45Z",
    "user_transaction_time" : "2020-09-16T02:00:45Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "967143",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000055"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "3243",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:45.376Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "443187956610",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111115175343243",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0916020045",
    "11" : "000000000055",
    "12" : "20200916020045",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "21" : "443187956610",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1881",
    "38" : "967143",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "55598200-4c01-4dac-a182-c2a0bafaf06b"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:45 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "132",
    "token" : "ad466705-de17-4937-83c6-afddbb58c418",
    "user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
    "acting_user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
    "card_token" : "57cd070a-756f-4aa5-ac63-7ed92c7b999c",
    "preceding_related_transaction_token" : "55598200-4c01-4dac-a182-c2a0bafaf06b",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 69,
    "created_time" : "2020-09-16T02:00:45Z",
    "user_transaction_time" : "2020-09-16T02:00:45Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "967143",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000055"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "3243",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:45.376Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "443187956610",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111115175343243",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0916020045",
    "11" : "000000000055",
    "12" : "20200916020045",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "21" : "443187956610",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1881",
    "38" : "967143",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "55598200-4c01-4dac-a182-c2a0bafaf06b"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - cleared_transaction_token = token: null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - log.logInfo("-----> cleared_transaction_token = " + cleared_transaction_token): -----> cleared_transaction_token = ad466705-de17-4937-83c6-afddbb58c418

2020-09-15 21:00:45 - [MESSAGE][INFO] - -----> cleared_transaction_token = ad466705-de17-4937-83c6-afddbb58c418

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - cleared_transaction_token = cleared_transaction_token: null

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable cleared_transaction_token = " + cleared_transaction_token): ----> GlobalVariable cleared_transaction_token = ad466705-de17-4937-83c6-afddbb58c418

2020-09-15 21:00:45 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = ad466705-de17-4937-83c6-afddbb58c418

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:45 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:45 - [MESSAGE][INFO] - -----> cleared_transaction_token = ad466705-de17-4937-83c6-afddbb58c418

2020-09-15 21:00:45 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = ad466705-de17-4937-83c6-afddbb58c418

2020-09-15 21:00:45 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-09-15 21:00:45 - [TEST_STEP][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearingRefund(original_transaction_token, trans_amount1, mid, is_refund, beeceptor_create_refund, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearingRefund is PASSED

2020-09-15 21:00:46 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/23.har

2020-09-15 21:00:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 21:00:46 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "55598200-4c01-4dac-a182-c2a0bafaf06b",
  "amount": "10",
  "mid": "USD",
  "is_refund": "true",
    "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-refund",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:46 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "55598200-4c01-4dac-a182-c2a0bafaf06b",
  "amount": "10",
  "mid": "USD",
  "is_refund": "true",
    "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-refund",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "refund",
    "state" : "COMPLETION",
    "identifier" : "133",
    "token" : "14a11495-0c93-4332-a555-830028ce38df",
    "user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
    "acting_user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
    "card_token" : "57cd070a-756f-4aa5-ac63-7ed92c7b999c",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : 10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : 10.00
        }
      }
    },
    "duration" : 90,
    "created_time" : "2020-09-16T02:00:46Z",
    "user_transaction_time" : "2020-09-16T02:00:46Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "969547",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000056"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "3243",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:46.157Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "443187956610",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111115175343243",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0916020046",
    "11" : "000000000056",
    "12" : "20200916020046",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "21" : "443187956610",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1882",
    "38" : "969547",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "55598200-4c01-4dac-a182-c2a0bafaf06b"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:46 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "refund",
    "state" : "COMPLETION",
    "identifier" : "133",
    "token" : "14a11495-0c93-4332-a555-830028ce38df",
    "user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
    "acting_user_token" : "2e56b717-ab1c-4e17-805f-10bb0b1eef65",
    "card_token" : "57cd070a-756f-4aa5-ac63-7ed92c7b999c",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : 10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : 10.00
        }
      }
    },
    "duration" : 90,
    "created_time" : "2020-09-16T02:00:46Z",
    "user_transaction_time" : "2020-09-16T02:00:46Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "969547",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000056"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "3243",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:46.157Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "443187956610",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111115175343243",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0916020046",
    "11" : "000000000056",
    "12" : "20200916020046",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "21" : "443187956610",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1882",
    "38" : "969547",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "55598200-4c01-4dac-a182-c2a0bafaf06b"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - refund_transaction_token = token: null

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - log.logInfo("-----> refund_transaction_token = " + refund_transaction_token): -----> refund_transaction_token = 14a11495-0c93-4332-a555-830028ce38df

2020-09-15 21:00:46 - [MESSAGE][INFO] - -----> refund_transaction_token = 14a11495-0c93-4332-a555-830028ce38df

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - refund_transaction_token = refund_transaction_token: null

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable refund_transaction_token = " + refund_transaction_token): ----> GlobalVariable refund_transaction_token = 14a11495-0c93-4332-a555-830028ce38df

2020-09-15 21:00:46 - [MESSAGE][INFO] - ----> GlobalVariable refund_transaction_token = 14a11495-0c93-4332-a555-830028ce38df

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:46 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:46 - [MESSAGE][INFO] - -----> refund_transaction_token = 14a11495-0c93-4332-a555-830028ce38df

2020-09-15 21:00:46 - [MESSAGE][INFO] - ----> GlobalVariable refund_transaction_token = 14a11495-0c93-4332-a555-830028ce38df

2020-09-15 21:00:46 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearingRefund is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Financial Settled Transaction/Detailed_onboarding_with_financial_transactions" time="6.882" classname="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Financial Settled Transaction/Detailed_onboarding_with_financial_transactions" status="PASSED">
         <system-out><![CDATA[2020-09-15 21:00:46 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Financial Settled Transaction/Detailed_onboarding_with_financial_transactions: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Financial Settled Transaction/Detailed_onboarding_with_financial_transactions

2020-09-15 21:00:46 - [TEST_STEP][PASSED] - card_product_token = detailed_Onboarding.detailed_onboarding.createCardProduct(start_date, card_product_name, payment_instrument, ecommerce, activate_upon_issue): detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-09-15 21:00:47 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/24.har

2020-09-15 21:00:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-09-15 21:00:47 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-09-15 21:00:47 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "889510c7-8420-4c50-b77a-a799db6184b2",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-16T02:00:46Z",
  "last_modified_time" : "2020-09-16T02:00:46Z"
}

2020-09-15 21:00:47 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "889510c7-8420-4c50-b77a-a799db6184b2",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-16T02:00:46Z",
  "last_modified_time" : "2020-09-16T02:00:46Z"
}

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = 889510c7-8420-4c50-b77a-a799db6184b2

2020-09-15 21:00:47 - [MESSAGE][INFO] - -----> card_product_token = 889510c7-8420-4c50-b77a-a799db6184b2

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = 889510c7-8420-4c50-b77a-a799db6184b2

2020-09-15 21:00:47 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 889510c7-8420-4c50-b77a-a799db6184b2

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:47 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:47 - [MESSAGE][INFO] - -----> card_product_token = 889510c7-8420-4c50-b77a-a799db6184b2

2020-09-15 21:00:47 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 889510c7-8420-4c50-b77a-a799db6184b2

2020-09-15 21:00:47 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - funding_source_token = detailed_Onboarding.detailed_onboarding.createCardFundingSource(program_name): detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-09-15 21:00:47 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/25.har

2020-09-15 21:00:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-09-15 21:00:47 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-09-15 21:00:47 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "99bde65e-29d3-403e-8a09-b42bd2a2ae5d",
  "created_time" : "2020-09-16T02:00:47Z",
  "last_modified_time" : "2020-09-16T02:00:47Z",
  "account" : "12.003.001.000000"
}

2020-09-15 21:00:47 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "99bde65e-29d3-403e-8a09-b42bd2a2ae5d",
  "created_time" : "2020-09-16T02:00:47Z",
  "last_modified_time" : "2020-09-16T02:00:47Z",
  "account" : "12.003.001.000000"
}

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - funding_token = token: null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = 99bde65e-29d3-403e-8a09-b42bd2a2ae5d

2020-09-15 21:00:47 - [MESSAGE][INFO] - -----> funding_token = 99bde65e-29d3-403e-8a09-b42bd2a2ae5d

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = 99bde65e-29d3-403e-8a09-b42bd2a2ae5d

2020-09-15 21:00:47 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = 99bde65e-29d3-403e-8a09-b42bd2a2ae5d

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:47 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:47 - [MESSAGE][INFO] - -----> funding_source_token = 99bde65e-29d3-403e-8a09-b42bd2a2ae5d

2020-09-15 21:00:47 - [MESSAGE][INFO] - ----> GlobalVariable funding_source_token = 99bde65e-29d3-403e-8a09-b42bd2a2ae5d

2020-09-15 21:00:47 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-09-15 21:00:47 - [TEST_STEP][PASSED] - user_token = detailed_Onboarding.detailed_onboarding.createDetailedUser(user_first_name, user_middle_name, user_last_name, active, user_password, phone, gender, user_email, ssn_expiration_date, user_id_type, user_address1, city, user_state, country, birth_date, corporate_card_holder, user_ssn, id_card_number, id_card_expiration_date, nationality, company, uses_parent_account, user_postal_code): detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-09-15 21:00:48 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/26.har

2020-09-15 21:00:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-09-15 21:00:48 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-09-15 21:00:48 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-09-16T02:00:48Z",
  "last_modified_time" : "2020-09-16T02:00:48Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "a3a0cd46-460c-4a53-bb44-bb10ddc81045",
    "account_number" : "40013372167772163",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-09-15 21:00:48 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-09-16T02:00:48Z",
  "last_modified_time" : "2020-09-16T02:00:48Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "a3a0cd46-460c-4a53-bb44-bb10ddc81045",
    "account_number" : "40013372167772163",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - user_token = token: null

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = c41d56da-1caa-4c54-932d-3c1c4cfc7ceb

2020-09-15 21:00:48 - [MESSAGE][INFO] - -----> user_token = c41d56da-1caa-4c54-932d-3c1c4cfc7ceb

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = c41d56da-1caa-4c54-932d-3c1c4cfc7ceb

2020-09-15 21:00:48 - [MESSAGE][INFO] - ----> GlobalVariable user_token = c41d56da-1caa-4c54-932d-3c1c4cfc7ceb

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:48 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:48 - [MESSAGE][INFO] - -----> user_token = c41d56da-1caa-4c54-932d-3c1c4cfc7ceb

2020-09-15 21:00:48 - [MESSAGE][INFO] - ----> GlobalVariable user_token = c41d56da-1caa-4c54-932d-3c1c4cfc7ceb

2020-09-15 21:00:48 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-09-15 21:00:48 - [TEST_STEP][PASSED] - card_token = detailed_Onboarding.detailed_onboarding.createCard(user_token, card_product_token): detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-09-15 21:00:49 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/27.har

2020-09-15 21:00:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-09-15 21:00:49 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
  "card_product_token": "889510c7-8420-4c50-b77a-a799db6184b2"
}

2020-09-15 21:00:49 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
  "card_product_token": "889510c7-8420-4c50-b77a-a799db6184b2"
}

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-09-16T02:00:48Z",
  "last_modified_time" : "2020-09-16T02:00:48Z",
  "token" : "6234fe21-bdae-4d0a-8209-108d6e44bf9f",
  "user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
  "card_product_token" : "889510c7-8420-4c50-b77a-a799db6184b2",
  "last_four" : "5759",
  "pan" : "111111______5759",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59Z",
  "barcode" : "20766269476702834592",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-09-15 21:00:49 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-09-16T02:00:48Z",
  "last_modified_time" : "2020-09-16T02:00:48Z",
  "token" : "6234fe21-bdae-4d0a-8209-108d6e44bf9f",
  "user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
  "card_product_token" : "889510c7-8420-4c50-b77a-a799db6184b2",
  "last_four" : "5759",
  "pan" : "111111______5759",
  "expiration" : "0924",
  "expiration_time" : "2024-09-30T23:59:59Z",
  "barcode" : "20766269476702834592",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - card_token = token: null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = 6234fe21-bdae-4d0a-8209-108d6e44bf9f

2020-09-15 21:00:49 - [MESSAGE][INFO] - -----> card_token = 6234fe21-bdae-4d0a-8209-108d6e44bf9f

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = 6234fe21-bdae-4d0a-8209-108d6e44bf9f

2020-09-15 21:00:49 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 6234fe21-bdae-4d0a-8209-108d6e44bf9f

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:49 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:49 - [MESSAGE][INFO] - -----> card_token = 6234fe21-bdae-4d0a-8209-108d6e44bf9f

2020-09-15 21:00:49 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 6234fe21-bdae-4d0a-8209-108d6e44bf9f

2020-09-15 21:00:49 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - gpa_token = detailed_Onboarding.detailed_onboarding.createGpaOrder(user_token, gpaamount, currency_code, funding_source_token): detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-09-15 21:00:49 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/28.har

2020-09-15 21:00:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-09-15 21:00:49 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "99bde65e-29d3-403e-8a09-b42bd2a2ae5d"
}

2020-09-15 21:00:49 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "99bde65e-29d3-403e-8a09-b42bd2a2ae5d"
}

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "c3b6bdda-0148-4103-bbea-f0705299315d",
  "amount" : 10000,
  "created_time" : "2020-09-16T02:00:49Z",
  "last_modified_time" : "2020-09-16T02:00:49Z",
  "transaction_token" : "2303a249-319c-4466-92f3-46d697ee2622",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********ae5d",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-09-16T02:00:47Z",
      "last_modified_time" : "2020-09-16T02:00:47Z"
    }
  },
  "funding_source_token" : "**********ae5d",
  "user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
  "currency_code" : "USD"
}

2020-09-15 21:00:49 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "c3b6bdda-0148-4103-bbea-f0705299315d",
  "amount" : 10000,
  "created_time" : "2020-09-16T02:00:49Z",
  "last_modified_time" : "2020-09-16T02:00:49Z",
  "transaction_token" : "2303a249-319c-4466-92f3-46d697ee2622",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********ae5d",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-09-16T02:00:47Z",
      "last_modified_time" : "2020-09-16T02:00:47Z"
    }
  },
  "funding_source_token" : "**********ae5d",
  "user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
  "currency_code" : "USD"
}

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - gpa_token = token: null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - log.logInfo("-----> gpa_token = " + gpa_token): -----> gpa_token = c3b6bdda-0148-4103-bbea-f0705299315d

2020-09-15 21:00:49 - [MESSAGE][INFO] - -----> gpa_token = c3b6bdda-0148-4103-bbea-f0705299315d

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - user_token = gpa_token: null

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable gpa_token = " + gpa_token): ----> GlobalVariable gpa_token = 75d0473d-4a43-4b1c-9c60-6977cf97497c

2020-09-15 21:00:49 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 75d0473d-4a43-4b1c-9c60-6977cf97497c

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:49 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:49 - [MESSAGE][INFO] - -----> gpa_token = c3b6bdda-0148-4103-bbea-f0705299315d

2020-09-15 21:00:49 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = c3b6bdda-0148-4103-bbea-f0705299315d

2020-09-15 21:00:49 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-09-15 21:00:49 - [TEST_STEP][PASSED] - detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal(card_token, trans_amount1, mid, beeceptor_create_financial_withdrawal, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal is PASSED

2020-09-15 21:00:50 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/29.har

2020-09-15 21:00:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/financial/withdrawal

2020-09-15 21:00:50 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/financial/withdrawal

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "6234fe21-bdae-4d0a-8209-108d6e44bf9f",
  "amount": "10",
  "mid": "USD",
  "account_type": "",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-financial-withdrawal",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:50 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "6234fe21-bdae-4d0a-8209-108d6e44bf9f",
  "amount": "10",
  "mid": "USD",
  "account_type": "",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-financial-withdrawal",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.atm.withdrawal",
    "state" : "COMPLETION",
    "identifier" : "135",
    "token" : "2d83947a-a4b1-410a-858d-5ded9ba22627",
    "user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
    "acting_user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
    "card_token" : "6234fe21-bdae-4d0a-8209-108d6e44bf9f",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 80,
    "created_time" : "2020-09-16T02:00:50Z",
    "user_transaction_time" : "2020-09-16T02:00:50Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "currency_code" : "USD",
    "approval_code" : "021221",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "77956298069",
      "retrieval_reference_number" : "084316982476",
      "system_trace_audit_number" : "767018"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "5759",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:50.249Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "tid" : "TR100000",
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111117679575759",
    "3" : "000000",
    "4" : 10.00,
    "5" : 10.00,
    "7" : "0916020050",
    "11" : "767018",
    "12" : "020050",
    "13" : "0916",
    "14" : "2409",
    "15" : "0916",
    "17" : "0916",
    "18" : "6411",
    "22" : "10000000020000000100000001000000",
    "26" : "6411",
    "32" : "77956298069",
    "33" : "94337804206",
    "37" : "084316982476",
    "38" : "021221",
    "39" : "0000",
    "41" : "TR100000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "48" : "Bank of Marqeta",
    "50" : "840",
    "54" : "00028402C00000099900000018402C000000999000",
    "58" : "00000000022",
    "59" : "0000000",
    "63" : "DISCOVER",
    "112" : {
      "101" : "9990.00",
      "102" : "9990.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "35" : "API"
    },
    "123" : "123 Main St.           ",
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:50 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.atm.withdrawal",
    "state" : "COMPLETION",
    "identifier" : "135",
    "token" : "2d83947a-a4b1-410a-858d-5ded9ba22627",
    "user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
    "acting_user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
    "card_token" : "6234fe21-bdae-4d0a-8209-108d6e44bf9f",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 80,
    "created_time" : "2020-09-16T02:00:50Z",
    "user_transaction_time" : "2020-09-16T02:00:50Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "currency_code" : "USD",
    "approval_code" : "021221",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "77956298069",
      "retrieval_reference_number" : "084316982476",
      "system_trace_audit_number" : "767018"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "5759",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:50.249Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "tid" : "TR100000",
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111117679575759",
    "3" : "000000",
    "4" : 10.00,
    "5" : 10.00,
    "7" : "0916020050",
    "11" : "767018",
    "12" : "020050",
    "13" : "0916",
    "14" : "2409",
    "15" : "0916",
    "17" : "0916",
    "18" : "6411",
    "22" : "10000000020000000100000001000000",
    "26" : "6411",
    "32" : "77956298069",
    "33" : "94337804206",
    "37" : "084316982476",
    "38" : "021221",
    "39" : "0000",
    "41" : "TR100000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "48" : "Bank of Marqeta",
    "50" : "840",
    "54" : "00028402C00000099900000018402C000000999000",
    "58" : "00000000022",
    "59" : "0000000",
    "63" : "DISCOVER",
    "112" : {
      "101" : "9990.00",
      "102" : "9990.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "35" : "API"
    },
    "123" : "123 Main St.           ",
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = 2d83947a-a4b1-410a-858d-5ded9ba22627

2020-09-15 21:00:50 - [MESSAGE][INFO] - -----> original_transaction_token = 2d83947a-a4b1-410a-858d-5ded9ba22627

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = 2d83947a-a4b1-410a-858d-5ded9ba22627

2020-09-15 21:00:50 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 2d83947a-a4b1-410a-858d-5ded9ba22627

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:50 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:50 - [MESSAGE][INFO] - -----> original_transaction_token = 2d83947a-a4b1-410a-858d-5ded9ba22627

2020-09-15 21:00:50 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 2d83947a-a4b1-410a-858d-5ded9ba22627

2020-09-15 21:00:50 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal is PASSED

2020-09-15 21:00:50 - [TEST_STEP][PASSED] - detailed_Onboarding.detailed_onboarding.updateCardProduct(card_product_token): detailed_Onboarding.detailed_onboarding.updateCardProduct is PASSED

2020-09-15 21:00:51 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/30.har

2020-09-15 21:00:51 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts/889510c7-8420-4c50-b77a-a799db6184b2

2020-09-15 21:00:51 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts/889510c7-8420-4c50-b77a-a799db6184b2

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "config": {
    "poi": {
      "atm": true
    }
  }
}

2020-09-15 21:00:51 - [MESSAGE][INFO] - -------> Request Body= {
  "config": {
    "poi": {
      "atm": true
    }
  }
}

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "889510c7-8420-4c50-b77a-a799db6184b2",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-16T02:00:46Z",
  "last_modified_time" : "2020-09-16T02:00:50Z"
}

2020-09-15 21:00:51 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "889510c7-8420-4c50-b77a-a799db6184b2",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      }
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-09-16T02:00:46Z",
  "last_modified_time" : "2020-09-16T02:00:50Z"
}

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 200: null

2020-09-15 21:00:51 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:51 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.updateCardProduct is PASSED

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - original_transaction_token = detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal(card_token, trans_amount1, mid, beeceptor_create_financial_withdrawal, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal is PASSED

2020-09-15 21:00:51 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/31.har

2020-09-15 21:00:51 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/financial/withdrawal

2020-09-15 21:00:51 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/financial/withdrawal

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "6234fe21-bdae-4d0a-8209-108d6e44bf9f",
  "amount": "10",
  "mid": "USD",
  "account_type": "",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-financial-withdrawal",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:51 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "6234fe21-bdae-4d0a-8209-108d6e44bf9f",
  "amount": "10",
  "mid": "USD",
  "account_type": "",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-financial-withdrawal",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.atm.withdrawal",
    "state" : "COMPLETION",
    "identifier" : "136",
    "token" : "fc06f482-8ecd-4220-99ab-498661a1970a",
    "user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
    "acting_user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
    "card_token" : "6234fe21-bdae-4d0a-8209-108d6e44bf9f",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9980.00,
      "available_balance" : 9980.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9980.00,
          "available_balance" : 9980.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 81,
    "created_time" : "2020-09-16T02:00:51Z",
    "user_transaction_time" : "2020-09-16T02:00:51Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "currency_code" : "USD",
    "approval_code" : "892449",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "38864147503",
      "retrieval_reference_number" : "857734857387",
      "system_trace_audit_number" : "527454"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "5759",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:51.504Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "tid" : "TR100000",
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111117679575759",
    "3" : "000000",
    "4" : 10.00,
    "5" : 10.00,
    "7" : "0916020051",
    "11" : "527454",
    "12" : "020051",
    "13" : "0916",
    "14" : "2409",
    "15" : "0916",
    "17" : "0916",
    "18" : "6411",
    "22" : "10000000020000000100000001000000",
    "26" : "6411",
    "32" : "38864147503",
    "33" : "39475634841",
    "37" : "857734857387",
    "38" : "892449",
    "39" : "0000",
    "41" : "TR100000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "48" : "Bank of Marqeta",
    "50" : "840",
    "54" : "00028402C00000099800000018402C000000998000",
    "58" : "00000000022",
    "59" : "0000000",
    "63" : "DISCOVER",
    "112" : {
      "101" : "9980.00",
      "102" : "9980.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "35" : "API"
    },
    "123" : "123 Main St.           ",
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:51 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.atm.withdrawal",
    "state" : "COMPLETION",
    "identifier" : "136",
    "token" : "fc06f482-8ecd-4220-99ab-498661a1970a",
    "user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
    "acting_user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
    "card_token" : "6234fe21-bdae-4d0a-8209-108d6e44bf9f",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9980.00,
      "available_balance" : 9980.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9980.00,
          "available_balance" : 9980.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 81,
    "created_time" : "2020-09-16T02:00:51Z",
    "user_transaction_time" : "2020-09-16T02:00:51Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "currency_code" : "USD",
    "approval_code" : "892449",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "38864147503",
      "retrieval_reference_number" : "857734857387",
      "system_trace_audit_number" : "527454"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "5759",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:51.504Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "tid" : "TR100000",
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111117679575759",
    "3" : "000000",
    "4" : 10.00,
    "5" : 10.00,
    "7" : "0916020051",
    "11" : "527454",
    "12" : "020051",
    "13" : "0916",
    "14" : "2409",
    "15" : "0916",
    "17" : "0916",
    "18" : "6411",
    "22" : "10000000020000000100000001000000",
    "26" : "6411",
    "32" : "38864147503",
    "33" : "39475634841",
    "37" : "857734857387",
    "38" : "892449",
    "39" : "0000",
    "41" : "TR100000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "48" : "Bank of Marqeta",
    "50" : "840",
    "54" : "00028402C00000099800000018402C000000998000",
    "58" : "00000000022",
    "59" : "0000000",
    "63" : "DISCOVER",
    "112" : {
      "101" : "9980.00",
      "102" : "9980.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "35" : "API"
    },
    "123" : "123 Main St.           ",
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = fc06f482-8ecd-4220-99ab-498661a1970a

2020-09-15 21:00:51 - [MESSAGE][INFO] - -----> original_transaction_token = fc06f482-8ecd-4220-99ab-498661a1970a

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = fc06f482-8ecd-4220-99ab-498661a1970a

2020-09-15 21:00:51 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = fc06f482-8ecd-4220-99ab-498661a1970a

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:51 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:51 - [MESSAGE][INFO] - -----> original_transaction_token = fc06f482-8ecd-4220-99ab-498661a1970a

2020-09-15 21:00:51 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = fc06f482-8ecd-4220-99ab-498661a1970a

2020-09-15 21:00:51 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal is PASSED

2020-09-15 21:00:51 - [TEST_STEP][PASSED] - cleared_transaction_token = detailed_Onboarding.detailed_onboarding.createTransClearing(original_transaction_token, trans_amount1, mid, force_post, beeceptor_settle_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-09-15 21:00:52 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/32.har

2020-09-15 21:00:52 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 21:00:52 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "fc06f482-8ecd-4220-99ab-498661a1970a",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:52 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "fc06f482-8ecd-4220-99ab-498661a1970a",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "137",
    "token" : "919db19a-24ba-4d80-aa1f-0b27634871d7",
    "user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
    "acting_user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
    "card_token" : "6234fe21-bdae-4d0a-8209-108d6e44bf9f",
    "preceding_related_transaction_token" : "fc06f482-8ecd-4220-99ab-498661a1970a",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9970.00,
      "available_balance" : 9970.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9970.00,
          "available_balance" : 9970.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 66,
    "created_time" : "2020-09-16T02:00:52Z",
    "user_transaction_time" : "2020-09-16T02:00:52Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "892449",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000057"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "5759",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:52.300Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111117679575759",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0916020052",
    "11" : "000000000057",
    "12" : "20200916020052",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1884",
    "38" : "892449",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "fc06f482-8ecd-4220-99ab-498661a1970a"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:52 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "137",
    "token" : "919db19a-24ba-4d80-aa1f-0b27634871d7",
    "user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
    "acting_user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
    "card_token" : "6234fe21-bdae-4d0a-8209-108d6e44bf9f",
    "preceding_related_transaction_token" : "fc06f482-8ecd-4220-99ab-498661a1970a",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9970.00,
      "available_balance" : 9970.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9970.00,
          "available_balance" : 9970.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 66,
    "created_time" : "2020-09-16T02:00:52Z",
    "user_transaction_time" : "2020-09-16T02:00:52Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "892449",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000057"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "5759",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:52.300Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111117679575759",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0916020052",
    "11" : "000000000057",
    "12" : "20200916020052",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1884",
    "38" : "892449",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "fc06f482-8ecd-4220-99ab-498661a1970a"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - cleared_transaction_token = token: null

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - log.logInfo("-----> cleared_transaction_token = " + cleared_transaction_token): -----> cleared_transaction_token = 919db19a-24ba-4d80-aa1f-0b27634871d7

2020-09-15 21:00:52 - [MESSAGE][INFO] - -----> cleared_transaction_token = 919db19a-24ba-4d80-aa1f-0b27634871d7

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - cleared_transaction_token = cleared_transaction_token: null

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable cleared_transaction_token = " + cleared_transaction_token): ----> GlobalVariable cleared_transaction_token = 919db19a-24ba-4d80-aa1f-0b27634871d7

2020-09-15 21:00:52 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = 919db19a-24ba-4d80-aa1f-0b27634871d7

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:52 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:52 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:52 - [MESSAGE][INFO] - -----> cleared_transaction_token = 919db19a-24ba-4d80-aa1f-0b27634871d7

2020-09-15 21:00:52 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = 919db19a-24ba-4d80-aa1f-0b27634871d7

2020-09-15 21:00:52 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-09-15 21:00:52 - [TEST_STEP][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearingRefund(original_transaction_token, trans_amount1, mid, is_refund, beeceptor_create_refund, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearingRefund is PASSED

2020-09-15 21:00:53 - [MESSAGE][INFO] - HAR: /Users/csmall/mq-chase/Reports/20200915_210024/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20200915_210024/requests/main/33.har

2020-09-15 21:00:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 21:00:53 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "fc06f482-8ecd-4220-99ab-498661a1970a",
  "amount": "10",
  "mid": "USD",
  "is_refund": "true",
    "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-refund",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:53 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "fc06f482-8ecd-4220-99ab-498661a1970a",
  "amount": "10",
  "mid": "USD",
  "is_refund": "true",
    "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-refund",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "refund",
    "state" : "COMPLETION",
    "identifier" : "138",
    "token" : "1e53a658-f7c7-4776-8a3b-904ec40f7065",
    "user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
    "acting_user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
    "card_token" : "6234fe21-bdae-4d0a-8209-108d6e44bf9f",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9980.00,
      "available_balance" : 9980.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : 10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9980.00,
          "available_balance" : 9980.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : 10.00
        }
      }
    },
    "duration" : 74,
    "created_time" : "2020-09-16T02:00:53Z",
    "user_transaction_time" : "2020-09-16T02:00:53Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "661428",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000058"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "5759",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:53.050Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111117679575759",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0916020053",
    "11" : "000000000058",
    "12" : "20200916020053",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1885",
    "38" : "661428",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099800000018402C000000998000",
    "56" : {
      "7" : "fc06f482-8ecd-4220-99ab-498661a1970a"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9980.00",
      "102" : "9980.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:53 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "refund",
    "state" : "COMPLETION",
    "identifier" : "138",
    "token" : "1e53a658-f7c7-4776-8a3b-904ec40f7065",
    "user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
    "acting_user_token" : "c41d56da-1caa-4c54-932d-3c1c4cfc7ceb",
    "card_token" : "6234fe21-bdae-4d0a-8209-108d6e44bf9f",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9980.00,
      "available_balance" : 9980.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : 10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9980.00,
          "available_balance" : 9980.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : 10.00
        }
      }
    },
    "duration" : 74,
    "created_time" : "2020-09-16T02:00:53Z",
    "user_transaction_time" : "2020-09-16T02:00:53Z",
    "settlement_date" : "2020-09-16T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "661428",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000058"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "5759",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-09-16T02:00:53.050Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111117679575759",
    "3" : "900000",
    "4" : 10.00,
    "7" : "0916020053",
    "11" : "000000000058",
    "12" : "20200916020053",
    "13" : "200916",
    "14" : "2409",
    "15" : "20200916",
    "17" : "0916",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1885",
    "38" : "661428",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099800000018402C000000998000",
    "56" : {
      "7" : "fc06f482-8ecd-4220-99ab-498661a1970a"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9980.00",
      "102" : "9980.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - assert token != null: null

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - println(token): null

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - refund_transaction_token = token: null

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - log.logInfo("-----> refund_transaction_token = " + refund_transaction_token): -----> refund_transaction_token = 1e53a658-f7c7-4776-8a3b-904ec40f7065

2020-09-15 21:00:53 - [MESSAGE][INFO] - -----> refund_transaction_token = 1e53a658-f7c7-4776-8a3b-904ec40f7065

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - refund_transaction_token = refund_transaction_token: null

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable refund_transaction_token = " + refund_transaction_token): ----> GlobalVariable refund_transaction_token = 1e53a658-f7c7-4776-8a3b-904ec40f7065

2020-09-15 21:00:53 - [MESSAGE][INFO] - ----> GlobalVariable refund_transaction_token = 1e53a658-f7c7-4776-8a3b-904ec40f7065

2020-09-15 21:00:53 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-09-15 21:00:53 - [MESSAGE][PASSED] - Verify response successfully

2020-09-15 21:00:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-09-15 21:00:53 - [MESSAGE][INFO] - -----> refund_transaction_token = 1e53a658-f7c7-4776-8a3b-904ec40f7065

2020-09-15 21:00:53 - [MESSAGE][INFO] - ----> GlobalVariable refund_transaction_token = 1e53a658-f7c7-4776-8a3b-904ec40f7065

2020-09-15 21:00:53 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearingRefund is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2020-09-15 21:00:28 - [TEST_SUITE][PASSED] - Detailed_Onboarding_With_Transactions: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Financial Settled Transaction/Detailed_onboarding_with_financial_transactions]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
