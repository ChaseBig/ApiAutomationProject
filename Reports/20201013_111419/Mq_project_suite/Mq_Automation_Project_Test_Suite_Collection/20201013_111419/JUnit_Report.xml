<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mq_Automation_Project_Test_Suite_Collection" time="57.159" tests="6" failures="0" errors="0">
   <testsuite name="Detailed_Onboarding_With_Transactions" tests="4" failures="0" errors="0" time="30.628" timestamp="2020-10-13 11:14:31" hostname="csmall - csmall-mbp" id="Test Suites/Detailed Test Suite/Detailed_Onboarding_With_Transactions">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="/Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420"/>
         <property name="logFiles" value="/Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="csmall - csmall-mbp"/>
         <property name="hostAddress" value="192.168.1.45"/>
         <property name="os" value="Mac OS X 64bit"/>
         <property name="katalonVersion" value="null.null"/>
      </properties>
      <testcase name="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Declined Transaction after CardTransition/Detailed_onboarding_and_cardtransition_result_declined_transaction" time="10.551" classname="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Declined Transaction after CardTransition/Detailed_onboarding_and_cardtransition_result_declined_transaction" status="PASSED">
         <system-out><![CDATA[2020-10-13 11:14:32 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Declined Transaction after CardTransition/Detailed_onboarding_and_cardtransition_result_declined_transaction: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Declined Transaction after CardTransition/Detailed_onboarding_and_cardtransition_result_declined_transaction

2020-10-13 11:14:32 - [TEST_STEP][PASSED] - card_product_token = detailed_Onboarding.detailed_onboarding.createCardProduct(start_date, card_product_name, payment_instrument, ecommerce, activate_upon_issue): detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-10-13 11:14:36 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/0.har

2020-10-13 11:14:36 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:36 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:36 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:36 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:37 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:37 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:14:37 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:14:37 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:14:37 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:14:37 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:37 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:37 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "fe6427b8-9123-4248-a54b-2202a9d958f2",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:14:36Z",
  "last_modified_time" : "2020-10-13T16:14:36Z"
}

2020-10-13 11:14:37 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "fe6427b8-9123-4248-a54b-2202a9d958f2",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:14:36Z",
  "last_modified_time" : "2020-10-13T16:14:36Z"
}

2020-10-13 11:14:37 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:37 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:37 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:37 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:37 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-10-13 11:14:37 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = fe6427b8-9123-4248-a54b-2202a9d958f2

2020-10-13 11:14:37 - [MESSAGE][INFO] - -----> card_product_token = fe6427b8-9123-4248-a54b-2202a9d958f2

2020-10-13 11:14:37 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-10-13 11:14:37 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = fe6427b8-9123-4248-a54b-2202a9d958f2

2020-10-13 11:14:37 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = fe6427b8-9123-4248-a54b-2202a9d958f2

2020-10-13 11:14:37 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:37 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:37 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:37 - [MESSAGE][INFO] - -----> card_product_token = fe6427b8-9123-4248-a54b-2202a9d958f2

2020-10-13 11:14:37 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = fe6427b8-9123-4248-a54b-2202a9d958f2

2020-10-13 11:14:37 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-10-13 11:14:37 - [TEST_STEP][PASSED] - funding_source_token = detailed_Onboarding.detailed_onboarding.createCardFundingSource(program_name): detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-10-13 11:14:38 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/1.har

2020-10-13 11:14:38 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:14:38 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:14:38 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "d1a07d39-b074-47d6-8a57-592dd7275266",
  "created_time" : "2020-10-13T16:14:38Z",
  "last_modified_time" : "2020-10-13T16:14:38Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:14:38 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "d1a07d39-b074-47d6-8a57-592dd7275266",
  "created_time" : "2020-10-13T16:14:38Z",
  "last_modified_time" : "2020-10-13T16:14:38Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - funding_token = token: null

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = d1a07d39-b074-47d6-8a57-592dd7275266

2020-10-13 11:14:38 - [MESSAGE][INFO] - -----> funding_token = d1a07d39-b074-47d6-8a57-592dd7275266

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = d1a07d39-b074-47d6-8a57-592dd7275266

2020-10-13 11:14:38 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = d1a07d39-b074-47d6-8a57-592dd7275266

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:38 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:38 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:38 - [MESSAGE][INFO] - -----> funding_source_token = d1a07d39-b074-47d6-8a57-592dd7275266

2020-10-13 11:14:38 - [MESSAGE][INFO] - ----> GlobalVariable funding_source_token = d1a07d39-b074-47d6-8a57-592dd7275266

2020-10-13 11:14:38 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-10-13 11:14:38 - [TEST_STEP][PASSED] - user_token = detailed_Onboarding.detailed_onboarding.createDetailedUser(user_first_name, user_middle_name, user_last_name, active, user_password, phone, gender, user_email, ssn_expiration_date, user_id_type, user_address1, city, user_state, country, birth_date, corporate_card_holder, user_ssn, id_card_number, id_card_expiration_date, nationality, company, uses_parent_account, user_postal_code): detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-10-13 11:14:39 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/2.har

2020-10-13 11:14:39 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:14:39 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:14:39 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "6573d3cd-1b70-4a40-a071-07b955efc077",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:14:39Z",
  "last_modified_time" : "2020-10-13T16:14:39Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "69b2c29d-f77c-47aa-8548-3622fc6a4246",
    "account_number" : "40013372351530419",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:14:39 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "6573d3cd-1b70-4a40-a071-07b955efc077",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:14:39Z",
  "last_modified_time" : "2020-10-13T16:14:39Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "69b2c29d-f77c-47aa-8548-3622fc6a4246",
    "account_number" : "40013372351530419",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - user_token = token: null

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = 6573d3cd-1b70-4a40-a071-07b955efc077

2020-10-13 11:14:39 - [MESSAGE][INFO] - -----> user_token = 6573d3cd-1b70-4a40-a071-07b955efc077

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = 6573d3cd-1b70-4a40-a071-07b955efc077

2020-10-13 11:14:39 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 6573d3cd-1b70-4a40-a071-07b955efc077

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:39 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:39 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:39 - [MESSAGE][INFO] - -----> user_token = 6573d3cd-1b70-4a40-a071-07b955efc077

2020-10-13 11:14:39 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 6573d3cd-1b70-4a40-a071-07b955efc077

2020-10-13 11:14:39 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-10-13 11:14:39 - [TEST_STEP][PASSED] - card_token = detailed_Onboarding.detailed_onboarding.createCard(user_token, card_product_token): detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-10-13 11:14:40 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/3.har

2020-10-13 11:14:40 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:14:40 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "6573d3cd-1b70-4a40-a071-07b955efc077",
  "card_product_token": "fe6427b8-9123-4248-a54b-2202a9d958f2"
}

2020-10-13 11:14:40 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "6573d3cd-1b70-4a40-a071-07b955efc077",
  "card_product_token": "fe6427b8-9123-4248-a54b-2202a9d958f2"
}

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-10-13T16:14:40Z",
  "last_modified_time" : "2020-10-13T16:14:40Z",
  "token" : "d31bb8a2-7f59-4573-a182-049571e4ed40",
  "user_token" : "6573d3cd-1b70-4a40-a071-07b955efc077",
  "card_product_token" : "fe6427b8-9123-4248-a54b-2202a9d958f2",
  "last_four" : "9932",
  "pan" : "111111______9932",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "16012961462482895744",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:14:40 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-10-13T16:14:40Z",
  "last_modified_time" : "2020-10-13T16:14:40Z",
  "token" : "d31bb8a2-7f59-4573-a182-049571e4ed40",
  "user_token" : "6573d3cd-1b70-4a40-a071-07b955efc077",
  "card_product_token" : "fe6427b8-9123-4248-a54b-2202a9d958f2",
  "last_four" : "9932",
  "pan" : "111111______9932",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "16012961462482895744",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - card_token = token: null

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = d31bb8a2-7f59-4573-a182-049571e4ed40

2020-10-13 11:14:40 - [MESSAGE][INFO] - -----> card_token = d31bb8a2-7f59-4573-a182-049571e4ed40

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = d31bb8a2-7f59-4573-a182-049571e4ed40

2020-10-13 11:14:40 - [MESSAGE][INFO] - ----> GlobalVariable card_token = d31bb8a2-7f59-4573-a182-049571e4ed40

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:40 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:40 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:40 - [MESSAGE][INFO] - -----> card_token = d31bb8a2-7f59-4573-a182-049571e4ed40

2020-10-13 11:14:40 - [MESSAGE][INFO] - ----> GlobalVariable card_token = d31bb8a2-7f59-4573-a182-049571e4ed40

2020-10-13 11:14:40 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-10-13 11:14:40 - [TEST_STEP][PASSED] - gpa_token = detailed_Onboarding.detailed_onboarding.createGpaOrder(user_token, gpaamount, currency_code, funding_source_token): detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-10-13 11:14:41 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/4.har

2020-10-13 11:14:41 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-10-13 11:14:41 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "6573d3cd-1b70-4a40-a071-07b955efc077",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "d1a07d39-b074-47d6-8a57-592dd7275266"
}

2020-10-13 11:14:41 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "6573d3cd-1b70-4a40-a071-07b955efc077",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "d1a07d39-b074-47d6-8a57-592dd7275266"
}

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "18cb7773-137d-4a97-8675-4ee9bc23d095",
  "amount" : 10000,
  "created_time" : "2020-10-13T16:14:41Z",
  "last_modified_time" : "2020-10-13T16:14:41Z",
  "transaction_token" : "6d9a70ee-5fc4-40cc-ab98-d2e5f69cab84",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********5266",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-10-13T16:14:38Z",
      "last_modified_time" : "2020-10-13T16:14:38Z"
    }
  },
  "funding_source_token" : "**********5266",
  "user_token" : "6573d3cd-1b70-4a40-a071-07b955efc077",
  "currency_code" : "USD"
}

2020-10-13 11:14:41 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "18cb7773-137d-4a97-8675-4ee9bc23d095",
  "amount" : 10000,
  "created_time" : "2020-10-13T16:14:41Z",
  "last_modified_time" : "2020-10-13T16:14:41Z",
  "transaction_token" : "6d9a70ee-5fc4-40cc-ab98-d2e5f69cab84",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********5266",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-10-13T16:14:38Z",
      "last_modified_time" : "2020-10-13T16:14:38Z"
    }
  },
  "funding_source_token" : "**********5266",
  "user_token" : "6573d3cd-1b70-4a40-a071-07b955efc077",
  "currency_code" : "USD"
}

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - gpa_token = token: null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - log.logInfo("-----> gpa_token = " + gpa_token): -----> gpa_token = 18cb7773-137d-4a97-8675-4ee9bc23d095

2020-10-13 11:14:41 - [MESSAGE][INFO] - -----> gpa_token = 18cb7773-137d-4a97-8675-4ee9bc23d095

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - user_token = gpa_token: null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable gpa_token = " + gpa_token): ----> GlobalVariable gpa_token = 

2020-10-13 11:14:41 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:41 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:41 - [MESSAGE][INFO] - -----> gpa_token = 18cb7773-137d-4a97-8675-4ee9bc23d095

2020-10-13 11:14:41 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 18cb7773-137d-4a97-8675-4ee9bc23d095

2020-10-13 11:14:41 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - detailed_Onboarding.detailed_onboarding.createCardTransition(card_token, "SUSPENDED", channel, "01"): detailed_Onboarding.detailed_onboarding.createCardTransition is PASSED

2020-10-13 11:14:41 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/5.har

2020-10-13 11:14:41 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardtransitions

2020-10-13 11:14:41 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardtransitions

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "d31bb8a2-7f59-4573-a182-049571e4ed40",
  "state": "SUSPENDED",
  "channel": "API",
  "reason_code": "01"
}

2020-10-13 11:14:41 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "d31bb8a2-7f59-4573-a182-049571e4ed40",
  "state": "SUSPENDED",
  "channel": "API",
  "reason_code": "01"
}

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "b39eea71-a5ae-4d1d-b063-ea5b02808c0e",
  "card_token" : "d31bb8a2-7f59-4573-a182-049571e4ed40",
  "user_token" : "6573d3cd-1b70-4a40-a071-07b955efc077",
  "state" : "SUSPENDED",
  "reason" : "Suspended card",
  "reason_code" : "01",
  "channel" : "API",
  "fulfillment_status" : "ISSUED",
  "validations" : {
    "user" : {
      "birth_date" : false,
      "phone" : false,
      "ssn" : false,
      "random_name_line1_postfix" : false
    }
  },
  "type" : "state.suspended",
  "created_time" : "2020-10-13T16:14:41Z",
  "card_product_token" : "fe6427b8-9123-4248-a54b-2202a9d958f2",
  "last_four" : "9932",
  "pan" : "111111______9932",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59.000Z",
  "barcode" : "16012961462482895744",
  "pin_is_set" : false,
  "user" : {
    "metadata" : { }
  },
  "card" : {
    "metadata" : { }
  }
}

2020-10-13 11:14:41 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "b39eea71-a5ae-4d1d-b063-ea5b02808c0e",
  "card_token" : "d31bb8a2-7f59-4573-a182-049571e4ed40",
  "user_token" : "6573d3cd-1b70-4a40-a071-07b955efc077",
  "state" : "SUSPENDED",
  "reason" : "Suspended card",
  "reason_code" : "01",
  "channel" : "API",
  "fulfillment_status" : "ISSUED",
  "validations" : {
    "user" : {
      "birth_date" : false,
      "phone" : false,
      "ssn" : false,
      "random_name_line1_postfix" : false
    }
  },
  "type" : "state.suspended",
  "created_time" : "2020-10-13T16:14:41Z",
  "card_product_token" : "fe6427b8-9123-4248-a54b-2202a9d958f2",
  "last_four" : "9932",
  "pan" : "111111______9932",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59.000Z",
  "barcode" : "16012961462482895744",
  "pin_is_set" : false,
  "user" : {
    "metadata" : { }
  },
  "card" : {
    "metadata" : { }
  }
}

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:41 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:41 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:41 - [MESSAGE][INFO] - -----> transition_reason = Suspended card

2020-10-13 11:14:41 - [MESSAGE][INFO] - -----> transitionState = SUSPENDED

2020-10-13 11:14:41 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardTransition is PASSED

2020-10-13 11:14:41 - [TEST_STEP][PASSED] - original_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuthDeclined(card_token, trans_amount1, mid, beeceptor_declined_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuthDeclined is PASSED

2020-10-13 11:14:42 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/6.har

2020-10-13 11:14:42 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-10-13 11:14:42 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "d31bb8a2-7f59-4573-a182-049571e4ed40",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/declined-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:42 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "d31bb8a2-7f59-4573-a182-049571e4ed40",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/declined-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "DECLINED",
    "identifier" : "172",
    "token" : "00b2726f-7bb8-443b-9342-84195a21de12",
    "user_token" : "6573d3cd-1b70-4a40-a071-07b955efc077",
    "acting_user_token" : "6573d3cd-1b70-4a40-a071-07b955efc077",
    "card_token" : "d31bb8a2-7f59-4573-a182-049571e4ed40",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 10000.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 10000.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00
        }
      }
    },
    "duration" : 37,
    "created_time" : "2020-10-13T16:14:42Z",
    "user_transaction_time" : "2020-10-13T16:14:42Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "response" : {
      "code" : "1003",
      "memo" : "Card suspended"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "270487"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9932",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:42.357Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "671860902220",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111118649549932",
    "3" : "000000",
    "4" : 10.00,
    "7" : "1013161442",
    "11" : "000007270487",
    "12" : "20201013161442",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "671860902220",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1107",
    "39" : "0014",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Card suspended",
      "2" : "Card suspended",
      "3" : "59",
      "4" : "Card suspended"
    },
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:42 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "DECLINED",
    "identifier" : "172",
    "token" : "00b2726f-7bb8-443b-9342-84195a21de12",
    "user_token" : "6573d3cd-1b70-4a40-a071-07b955efc077",
    "acting_user_token" : "6573d3cd-1b70-4a40-a071-07b955efc077",
    "card_token" : "d31bb8a2-7f59-4573-a182-049571e4ed40",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 10000.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 10000.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00
        }
      }
    },
    "duration" : 37,
    "created_time" : "2020-10-13T16:14:42Z",
    "user_transaction_time" : "2020-10-13T16:14:42Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "response" : {
      "code" : "1003",
      "memo" : "Card suspended"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "270487"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9932",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:42.357Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "671860902220",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111118649549932",
    "3" : "000000",
    "4" : 10.00,
    "7" : "1013161442",
    "11" : "000007270487",
    "12" : "20201013161442",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "671860902220",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1107",
    "39" : "0014",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Card suspended",
      "2" : "Card suspended",
      "3" : "59",
      "4" : "Card suspended"
    },
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - declinedState = state: null

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - log.logInfo("-----> transaction.state = " + declinedState): -----> transaction.state = DECLINED

2020-10-13 11:14:42 - [MESSAGE][INFO] - -----> transaction.state = DECLINED

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - verifyElementPropertyValue(response, "transaction.state", "DECLINED"): Verify element property value successfully

2020-10-13 11:14:42 - [MESSAGE][PASSED] - Verify element property value successfully

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - declined_response_reason = memo: null

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - log.logInfo("-----> declined_response_reason = " + declined_response_reason): -----> declined_response_reason = Card suspended

2020-10-13 11:14:42 - [MESSAGE][INFO] - -----> declined_response_reason = Card suspended

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = 00b2726f-7bb8-443b-9342-84195a21de12

2020-10-13 11:14:42 - [MESSAGE][INFO] - -----> original_transaction_token = 00b2726f-7bb8-443b-9342-84195a21de12

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = 00b2726f-7bb8-443b-9342-84195a21de12

2020-10-13 11:14:42 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 00b2726f-7bb8-443b-9342-84195a21de12

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:42 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:42 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:42 - [MESSAGE][INFO] - -----> original_transaction_token = 00b2726f-7bb8-443b-9342-84195a21de12

2020-10-13 11:14:42 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 00b2726f-7bb8-443b-9342-84195a21de12

2020-10-13 11:14:42 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuthDeclined is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction" time="6.222" classname="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction" status="PASSED">
         <system-out><![CDATA[2020-10-13 11:14:42 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction/Detailed_onboarding_with_card_transaction

2020-10-13 11:14:42 - [TEST_STEP][PASSED] - card_product_token = detailed_Onboarding.detailed_onboarding.createCardProduct(start_date, card_product_name, payment_instrument, ecommerce, activate_upon_issue): detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-10-13 11:14:43 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/7.har

2020-10-13 11:14:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:14:43 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:14:43 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "918b980e-9362-4ecb-8ca2-f3c74e6d126f",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:14:43Z",
  "last_modified_time" : "2020-10-13T16:14:43Z"
}

2020-10-13 11:14:43 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "918b980e-9362-4ecb-8ca2-f3c74e6d126f",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:14:43Z",
  "last_modified_time" : "2020-10-13T16:14:43Z"
}

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = 918b980e-9362-4ecb-8ca2-f3c74e6d126f

2020-10-13 11:14:43 - [MESSAGE][INFO] - -----> card_product_token = 918b980e-9362-4ecb-8ca2-f3c74e6d126f

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = 918b980e-9362-4ecb-8ca2-f3c74e6d126f

2020-10-13 11:14:43 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 918b980e-9362-4ecb-8ca2-f3c74e6d126f

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:43 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:43 - [MESSAGE][INFO] - -----> card_product_token = 918b980e-9362-4ecb-8ca2-f3c74e6d126f

2020-10-13 11:14:43 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 918b980e-9362-4ecb-8ca2-f3c74e6d126f

2020-10-13 11:14:43 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - funding_source_token = detailed_Onboarding.detailed_onboarding.createCardFundingSource(program_name): detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-10-13 11:14:43 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/8.har

2020-10-13 11:14:43 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:14:43 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:14:43 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "e0f585e7-3c9c-4692-84fa-b80910acd167",
  "created_time" : "2020-10-13T16:14:43Z",
  "last_modified_time" : "2020-10-13T16:14:43Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:14:43 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "e0f585e7-3c9c-4692-84fa-b80910acd167",
  "created_time" : "2020-10-13T16:14:43Z",
  "last_modified_time" : "2020-10-13T16:14:43Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - funding_token = token: null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = e0f585e7-3c9c-4692-84fa-b80910acd167

2020-10-13 11:14:43 - [MESSAGE][INFO] - -----> funding_token = e0f585e7-3c9c-4692-84fa-b80910acd167

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = e0f585e7-3c9c-4692-84fa-b80910acd167

2020-10-13 11:14:43 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = e0f585e7-3c9c-4692-84fa-b80910acd167

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:43 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:43 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:43 - [MESSAGE][INFO] - -----> funding_source_token = e0f585e7-3c9c-4692-84fa-b80910acd167

2020-10-13 11:14:43 - [MESSAGE][INFO] - ----> GlobalVariable funding_source_token = e0f585e7-3c9c-4692-84fa-b80910acd167

2020-10-13 11:14:43 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-10-13 11:14:43 - [TEST_STEP][PASSED] - user_token = detailed_Onboarding.detailed_onboarding.createDetailedUser(user_first_name, user_middle_name, user_last_name, active, user_password, phone, gender, user_email, ssn_expiration_date, user_id_type, user_address1, city, user_state, country, birth_date, corporate_card_holder, user_ssn, id_card_number, id_card_expiration_date, nationality, company, uses_parent_account, user_postal_code): detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-10-13 11:14:44 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/9.har

2020-10-13 11:14:44 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:14:44 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:14:44 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:14:44Z",
  "last_modified_time" : "2020-10-13T16:14:44Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "0b616c46-5bad-4a6a-a635-93cb531f343a",
    "account_number" : "40013372370150561",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:14:44 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:14:44Z",
  "last_modified_time" : "2020-10-13T16:14:44Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "0b616c46-5bad-4a6a-a635-93cb531f343a",
    "account_number" : "40013372370150561",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - user_token = token: null

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = 70c651ab-b3b7-4682-806a-d0660e8cbba6

2020-10-13 11:14:44 - [MESSAGE][INFO] - -----> user_token = 70c651ab-b3b7-4682-806a-d0660e8cbba6

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = 70c651ab-b3b7-4682-806a-d0660e8cbba6

2020-10-13 11:14:44 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 70c651ab-b3b7-4682-806a-d0660e8cbba6

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:44 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:44 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:44 - [MESSAGE][INFO] - -----> user_token = 70c651ab-b3b7-4682-806a-d0660e8cbba6

2020-10-13 11:14:44 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 70c651ab-b3b7-4682-806a-d0660e8cbba6

2020-10-13 11:14:44 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-10-13 11:14:44 - [TEST_STEP][PASSED] - card_token = detailed_Onboarding.detailed_onboarding.createCard(user_token, card_product_token): detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-10-13 11:14:45 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/10.har

2020-10-13 11:14:45 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:14:45 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "70c651ab-b3b7-4682-806a-d0660e8cbba6",
  "card_product_token": "918b980e-9362-4ecb-8ca2-f3c74e6d126f"
}

2020-10-13 11:14:45 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "70c651ab-b3b7-4682-806a-d0660e8cbba6",
  "card_product_token": "918b980e-9362-4ecb-8ca2-f3c74e6d126f"
}

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-10-13T16:14:45Z",
  "last_modified_time" : "2020-10-13T16:14:45Z",
  "token" : "a7e1db0d-b5c0-42b8-b49d-678ba3448746",
  "user_token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
  "card_product_token" : "918b980e-9362-4ecb-8ca2-f3c74e6d126f",
  "last_four" : "9303",
  "pan" : "111111______9303",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "41817571728091283193",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:14:45 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-10-13T16:14:45Z",
  "last_modified_time" : "2020-10-13T16:14:45Z",
  "token" : "a7e1db0d-b5c0-42b8-b49d-678ba3448746",
  "user_token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
  "card_product_token" : "918b980e-9362-4ecb-8ca2-f3c74e6d126f",
  "last_four" : "9303",
  "pan" : "111111______9303",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "41817571728091283193",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - card_token = token: null

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = a7e1db0d-b5c0-42b8-b49d-678ba3448746

2020-10-13 11:14:45 - [MESSAGE][INFO] - -----> card_token = a7e1db0d-b5c0-42b8-b49d-678ba3448746

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = a7e1db0d-b5c0-42b8-b49d-678ba3448746

2020-10-13 11:14:45 - [MESSAGE][INFO] - ----> GlobalVariable card_token = a7e1db0d-b5c0-42b8-b49d-678ba3448746

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:45 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:45 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:45 - [MESSAGE][INFO] - -----> card_token = a7e1db0d-b5c0-42b8-b49d-678ba3448746

2020-10-13 11:14:45 - [MESSAGE][INFO] - ----> GlobalVariable card_token = a7e1db0d-b5c0-42b8-b49d-678ba3448746

2020-10-13 11:14:45 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-10-13 11:14:45 - [TEST_STEP][PASSED] - gpa_token = detailed_Onboarding.detailed_onboarding.createGpaOrder(user_token, gpaamount, currency_code, funding_source_token): detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-10-13 11:14:46 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/11.har

2020-10-13 11:14:46 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-10-13 11:14:46 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "70c651ab-b3b7-4682-806a-d0660e8cbba6",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "e0f585e7-3c9c-4692-84fa-b80910acd167"
}

2020-10-13 11:14:46 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "70c651ab-b3b7-4682-806a-d0660e8cbba6",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "e0f585e7-3c9c-4692-84fa-b80910acd167"
}

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "9d495439-b995-4119-a4a9-fda265636415",
  "amount" : 10000,
  "created_time" : "2020-10-13T16:14:46Z",
  "last_modified_time" : "2020-10-13T16:14:46Z",
  "transaction_token" : "2f4908a6-8641-4bf7-91f3-6235d6a1f6c4",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********d167",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-10-13T16:14:43Z",
      "last_modified_time" : "2020-10-13T16:14:43Z"
    }
  },
  "funding_source_token" : "**********d167",
  "user_token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
  "currency_code" : "USD"
}

2020-10-13 11:14:46 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "9d495439-b995-4119-a4a9-fda265636415",
  "amount" : 10000,
  "created_time" : "2020-10-13T16:14:46Z",
  "last_modified_time" : "2020-10-13T16:14:46Z",
  "transaction_token" : "2f4908a6-8641-4bf7-91f3-6235d6a1f6c4",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********d167",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-10-13T16:14:43Z",
      "last_modified_time" : "2020-10-13T16:14:43Z"
    }
  },
  "funding_source_token" : "**********d167",
  "user_token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
  "currency_code" : "USD"
}

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - gpa_token = token: null

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - log.logInfo("-----> gpa_token = " + gpa_token): -----> gpa_token = 9d495439-b995-4119-a4a9-fda265636415

2020-10-13 11:14:46 - [MESSAGE][INFO] - -----> gpa_token = 9d495439-b995-4119-a4a9-fda265636415

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - user_token = gpa_token: null

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable gpa_token = " + gpa_token): ----> GlobalVariable gpa_token = 18cb7773-137d-4a97-8675-4ee9bc23d095

2020-10-13 11:14:46 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 18cb7773-137d-4a97-8675-4ee9bc23d095

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:46 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:46 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:46 - [MESSAGE][INFO] - -----> gpa_token = 9d495439-b995-4119-a4a9-fda265636415

2020-10-13 11:14:46 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 9d495439-b995-4119-a4a9-fda265636415

2020-10-13 11:14:46 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-10-13 11:14:46 - [TEST_STEP][PASSED] - original_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuth(card_token, trans_amount1, mid, beeceptor_create_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-10-13 11:14:47 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/12.har

2020-10-13 11:14:47 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-10-13 11:14:47 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "a7e1db0d-b5c0-42b8-b49d-678ba3448746",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:47 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "a7e1db0d-b5c0-42b8-b49d-678ba3448746",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "174",
    "token" : "a7a0f4b4-aa5f-433a-8848-ff4e24661ddc",
    "user_token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
    "acting_user_token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
    "card_token" : "a7e1db0d-b5c0-42b8-b49d-678ba3448746",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 119,
    "created_time" : "2020-10-13T16:14:46Z",
    "user_transaction_time" : "2020-10-13T16:14:46Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "782992",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "193754"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9303",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:46.876Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "211644314218",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111119399149303",
    "3" : "000000",
    "4" : 10.00,
    "7" : "1013161446",
    "11" : "000007193754",
    "12" : "20201013161446",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "211644314218",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1075",
    "38" : "782992",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:47 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "174",
    "token" : "a7a0f4b4-aa5f-433a-8848-ff4e24661ddc",
    "user_token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
    "acting_user_token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
    "card_token" : "a7e1db0d-b5c0-42b8-b49d-678ba3448746",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 119,
    "created_time" : "2020-10-13T16:14:46Z",
    "user_transaction_time" : "2020-10-13T16:14:46Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "782992",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "193754"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9303",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:46.876Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "211644314218",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111119399149303",
    "3" : "000000",
    "4" : 10.00,
    "7" : "1013161446",
    "11" : "000007193754",
    "12" : "20201013161446",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "211644314218",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1075",
    "38" : "782992",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = a7a0f4b4-aa5f-433a-8848-ff4e24661ddc

2020-10-13 11:14:47 - [MESSAGE][INFO] - -----> original_transaction_token = a7a0f4b4-aa5f-433a-8848-ff4e24661ddc

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = a7a0f4b4-aa5f-433a-8848-ff4e24661ddc

2020-10-13 11:14:47 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = a7a0f4b4-aa5f-433a-8848-ff4e24661ddc

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:47 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:47 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:47 - [MESSAGE][INFO] - -----> original_transaction_token = a7a0f4b4-aa5f-433a-8848-ff4e24661ddc

2020-10-13 11:14:47 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = a7a0f4b4-aa5f-433a-8848-ff4e24661ddc

2020-10-13 11:14:47 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-10-13 11:14:47 - [TEST_STEP][PASSED] - advice_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuthAdvice(original_transaction_token, advice_amount, mid, beeceptor_create_auth_advice, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-10-13 11:14:48 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/13.har

2020-10-13 11:14:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-10-13 11:14:48 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "a7a0f4b4-aa5f-433a-8848-ff4e24661ddc",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:48 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "a7a0f4b4-aa5f-433a-8848-ff4e24661ddc",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "175",
    "token" : "1338e7bb-955b-4c18-920e-cc4062940eb5",
    "user_token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
    "acting_user_token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
    "card_token" : "a7e1db0d-b5c0-42b8-b49d-678ba3448746",
    "preceding_related_transaction_token" : "a7a0f4b4-aa5f-433a-8848-ff4e24661ddc",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 111,
    "created_time" : "2020-10-13T16:14:47Z",
    "user_transaction_time" : "2020-10-13T16:14:46Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "782992",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000051"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9303",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:47.795Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "211644314218",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111119399149303",
    "3" : "900000",
    "4" : 1.00,
    "7" : "1013161447",
    "11" : "000000000051",
    "12" : "20201013161447",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "211644314218",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1076",
    "38" : "782992",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "a7a0f4b4-aa5f-433a-8848-ff4e24661ddc"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:48 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "175",
    "token" : "1338e7bb-955b-4c18-920e-cc4062940eb5",
    "user_token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
    "acting_user_token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
    "card_token" : "a7e1db0d-b5c0-42b8-b49d-678ba3448746",
    "preceding_related_transaction_token" : "a7a0f4b4-aa5f-433a-8848-ff4e24661ddc",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 111,
    "created_time" : "2020-10-13T16:14:47Z",
    "user_transaction_time" : "2020-10-13T16:14:46Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "782992",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000051"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9303",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:47.795Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "network_reference_id" : "211644314218",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111119399149303",
    "3" : "900000",
    "4" : 1.00,
    "7" : "1013161447",
    "11" : "000000000051",
    "12" : "20201013161447",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "211644314218",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1076",
    "38" : "782992",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "a7a0f4b4-aa5f-433a-8848-ff4e24661ddc"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - advice_transaction_token = token: null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - log.logInfo("-----> advice_transaction_token = " + advice_transaction_token): -----> advice_transaction_token = 1338e7bb-955b-4c18-920e-cc4062940eb5

2020-10-13 11:14:48 - [MESSAGE][INFO] - -----> advice_transaction_token = 1338e7bb-955b-4c18-920e-cc4062940eb5

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - advice_transaction_token = advice_transaction_token: null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable advice_transaction_token = " + advice_transaction_token): ----> GlobalVariable advice_transaction_token = 1338e7bb-955b-4c18-920e-cc4062940eb5

2020-10-13 11:14:48 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = 1338e7bb-955b-4c18-920e-cc4062940eb5

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:48 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:48 - [MESSAGE][INFO] - -----> advice_transaction_token = 1338e7bb-955b-4c18-920e-cc4062940eb5

2020-10-13 11:14:48 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = 1338e7bb-955b-4c18-920e-cc4062940eb5

2020-10-13 11:14:48 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - cleared_transaction_token = detailed_Onboarding.detailed_onboarding.createTransClearing(original_transaction_token, trans_amount1, mid, force_post, beeceptor_settle_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-10-13 11:14:48 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/14.har

2020-10-13 11:14:48 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:14:48 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "a7a0f4b4-aa5f-433a-8848-ff4e24661ddc",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:48 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "a7a0f4b4-aa5f-433a-8848-ff4e24661ddc",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "176",
    "token" : "ae6dff5d-ef14-41ee-8c61-b71e67ac59f9",
    "user_token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
    "acting_user_token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
    "card_token" : "a7e1db0d-b5c0-42b8-b49d-678ba3448746",
    "preceding_related_transaction_token" : "a7a0f4b4-aa5f-433a-8848-ff4e24661ddc",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 88,
    "created_time" : "2020-10-13T16:14:48Z",
    "user_transaction_time" : "2020-10-13T16:14:48Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "782992",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000055"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9303",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:48.540Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "211644314218",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111119399149303",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161448",
    "11" : "000000000055",
    "12" : "20201013161448",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "211644314218",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1108",
    "38" : "782992",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "a7a0f4b4-aa5f-433a-8848-ff4e24661ddc"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:48 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "176",
    "token" : "ae6dff5d-ef14-41ee-8c61-b71e67ac59f9",
    "user_token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
    "acting_user_token" : "70c651ab-b3b7-4682-806a-d0660e8cbba6",
    "card_token" : "a7e1db0d-b5c0-42b8-b49d-678ba3448746",
    "preceding_related_transaction_token" : "a7a0f4b4-aa5f-433a-8848-ff4e24661ddc",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 88,
    "created_time" : "2020-10-13T16:14:48Z",
    "user_transaction_time" : "2020-10-13T16:14:48Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "782992",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000055"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "9303",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:48.540Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "211644314218",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111119399149303",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161448",
    "11" : "000000000055",
    "12" : "20201013161448",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "211644314218",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1108",
    "38" : "782992",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "a7a0f4b4-aa5f-433a-8848-ff4e24661ddc"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - cleared_transaction_token = token: null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - log.logInfo("-----> cleared_transaction_token = " + cleared_transaction_token): -----> cleared_transaction_token = ae6dff5d-ef14-41ee-8c61-b71e67ac59f9

2020-10-13 11:14:48 - [MESSAGE][INFO] - -----> cleared_transaction_token = ae6dff5d-ef14-41ee-8c61-b71e67ac59f9

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - cleared_transaction_token = cleared_transaction_token: null

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable cleared_transaction_token = " + cleared_transaction_token): ----> GlobalVariable cleared_transaction_token = ae6dff5d-ef14-41ee-8c61-b71e67ac59f9

2020-10-13 11:14:48 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = ae6dff5d-ef14-41ee-8c61-b71e67ac59f9

2020-10-13 11:14:48 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:48 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:48 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:48 - [MESSAGE][INFO] - -----> cleared_transaction_token = ae6dff5d-ef14-41ee-8c61-b71e67ac59f9

2020-10-13 11:14:48 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = ae6dff5d-ef14-41ee-8c61-b71e67ac59f9

2020-10-13 11:14:48 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction With Refund/Detailed_onboarding_with_card_transaction_and_refund" time="6.715" classname="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction With Refund/Detailed_onboarding_with_card_transaction_and_refund" status="PASSED">
         <system-out><![CDATA[2020-10-13 11:14:48 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction With Refund/Detailed_onboarding_with_card_transaction_and_refund: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Card Settled Transaction With Refund/Detailed_onboarding_with_card_transaction_and_refund

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - card_product_token = detailed_Onboarding.detailed_onboarding.createCardProduct(start_date, card_product_name, payment_instrument, ecommerce, activate_upon_issue): detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-10-13 11:14:49 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/15.har

2020-10-13 11:14:49 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:14:49 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:14:49 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "a8b7da86-8944-40fa-a16e-4dc03a1a7990",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:14:49Z",
  "last_modified_time" : "2020-10-13T16:14:49Z"
}

2020-10-13 11:14:49 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "a8b7da86-8944-40fa-a16e-4dc03a1a7990",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:14:49Z",
  "last_modified_time" : "2020-10-13T16:14:49Z"
}

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = a8b7da86-8944-40fa-a16e-4dc03a1a7990

2020-10-13 11:14:49 - [MESSAGE][INFO] - -----> card_product_token = a8b7da86-8944-40fa-a16e-4dc03a1a7990

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = a8b7da86-8944-40fa-a16e-4dc03a1a7990

2020-10-13 11:14:49 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = a8b7da86-8944-40fa-a16e-4dc03a1a7990

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:49 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:49 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:49 - [MESSAGE][INFO] - -----> card_product_token = a8b7da86-8944-40fa-a16e-4dc03a1a7990

2020-10-13 11:14:49 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = a8b7da86-8944-40fa-a16e-4dc03a1a7990

2020-10-13 11:14:49 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-10-13 11:14:49 - [TEST_STEP][PASSED] - funding_source_token = detailed_Onboarding.detailed_onboarding.createCardFundingSource(program_name): detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-10-13 11:14:50 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/16.har

2020-10-13 11:14:50 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:14:50 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:14:50 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "fdd32771-6f58-497e-ba7f-4edb76ec08bb",
  "created_time" : "2020-10-13T16:14:50Z",
  "last_modified_time" : "2020-10-13T16:14:50Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:14:50 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "fdd32771-6f58-497e-ba7f-4edb76ec08bb",
  "created_time" : "2020-10-13T16:14:50Z",
  "last_modified_time" : "2020-10-13T16:14:50Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - funding_token = token: null

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = fdd32771-6f58-497e-ba7f-4edb76ec08bb

2020-10-13 11:14:50 - [MESSAGE][INFO] - -----> funding_token = fdd32771-6f58-497e-ba7f-4edb76ec08bb

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = fdd32771-6f58-497e-ba7f-4edb76ec08bb

2020-10-13 11:14:50 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = fdd32771-6f58-497e-ba7f-4edb76ec08bb

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:50 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:50 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:50 - [MESSAGE][INFO] - -----> funding_source_token = fdd32771-6f58-497e-ba7f-4edb76ec08bb

2020-10-13 11:14:50 - [MESSAGE][INFO] - ----> GlobalVariable funding_source_token = fdd32771-6f58-497e-ba7f-4edb76ec08bb

2020-10-13 11:14:50 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-10-13 11:14:50 - [TEST_STEP][PASSED] - user_token = detailed_Onboarding.detailed_onboarding.createDetailedUser(user_first_name, user_middle_name, user_last_name, active, user_password, phone, gender, user_email, ssn_expiration_date, user_id_type, user_address1, city, user_state, country, birth_date, corporate_card_holder, user_ssn, id_card_number, id_card_expiration_date, nationality, company, uses_parent_account, user_postal_code): detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-10-13 11:14:50 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/17.har

2020-10-13 11:14:51 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:14:51 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:14:51 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "cfe91567-8a2a-464c-93ee-933098925721",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:14:50Z",
  "last_modified_time" : "2020-10-13T16:14:50Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "b23714e4-c5a4-4a33-98bc-35b856cae1fb",
    "account_number" : "40013372389500814",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:14:51 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "cfe91567-8a2a-464c-93ee-933098925721",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:14:50Z",
  "last_modified_time" : "2020-10-13T16:14:50Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "b23714e4-c5a4-4a33-98bc-35b856cae1fb",
    "account_number" : "40013372389500814",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - user_token = token: null

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = cfe91567-8a2a-464c-93ee-933098925721

2020-10-13 11:14:51 - [MESSAGE][INFO] - -----> user_token = cfe91567-8a2a-464c-93ee-933098925721

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = cfe91567-8a2a-464c-93ee-933098925721

2020-10-13 11:14:51 - [MESSAGE][INFO] - ----> GlobalVariable user_token = cfe91567-8a2a-464c-93ee-933098925721

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:51 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:51 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:51 - [MESSAGE][INFO] - -----> user_token = cfe91567-8a2a-464c-93ee-933098925721

2020-10-13 11:14:51 - [MESSAGE][INFO] - ----> GlobalVariable user_token = cfe91567-8a2a-464c-93ee-933098925721

2020-10-13 11:14:51 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-10-13 11:14:51 - [TEST_STEP][PASSED] - card_token = detailed_Onboarding.detailed_onboarding.createCard(user_token, card_product_token): detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-10-13 11:14:52 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/18.har

2020-10-13 11:14:52 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:14:52 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "cfe91567-8a2a-464c-93ee-933098925721",
  "card_product_token": "a8b7da86-8944-40fa-a16e-4dc03a1a7990"
}

2020-10-13 11:14:52 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "cfe91567-8a2a-464c-93ee-933098925721",
  "card_product_token": "a8b7da86-8944-40fa-a16e-4dc03a1a7990"
}

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-10-13T16:14:51Z",
  "last_modified_time" : "2020-10-13T16:14:51Z",
  "token" : "8c871fe3-8f57-43ef-a690-cf80061d8876",
  "user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
  "card_product_token" : "a8b7da86-8944-40fa-a16e-4dc03a1a7990",
  "last_four" : "6409",
  "pan" : "111111______6409",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "24823078211131212439",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:14:52 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-10-13T16:14:51Z",
  "last_modified_time" : "2020-10-13T16:14:51Z",
  "token" : "8c871fe3-8f57-43ef-a690-cf80061d8876",
  "user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
  "card_product_token" : "a8b7da86-8944-40fa-a16e-4dc03a1a7990",
  "last_four" : "6409",
  "pan" : "111111______6409",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "24823078211131212439",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - card_token = token: null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = 8c871fe3-8f57-43ef-a690-cf80061d8876

2020-10-13 11:14:52 - [MESSAGE][INFO] - -----> card_token = 8c871fe3-8f57-43ef-a690-cf80061d8876

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = 8c871fe3-8f57-43ef-a690-cf80061d8876

2020-10-13 11:14:52 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 8c871fe3-8f57-43ef-a690-cf80061d8876

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:52 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:52 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:52 - [MESSAGE][INFO] - -----> card_token = 8c871fe3-8f57-43ef-a690-cf80061d8876

2020-10-13 11:14:52 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 8c871fe3-8f57-43ef-a690-cf80061d8876

2020-10-13 11:14:52 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - gpa_token = detailed_Onboarding.detailed_onboarding.createGpaOrder(user_token, gpaamount, currency_code, funding_source_token): detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-10-13 11:14:52 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/19.har

2020-10-13 11:14:52 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-10-13 11:14:52 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "cfe91567-8a2a-464c-93ee-933098925721",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "fdd32771-6f58-497e-ba7f-4edb76ec08bb"
}

2020-10-13 11:14:52 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "cfe91567-8a2a-464c-93ee-933098925721",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "fdd32771-6f58-497e-ba7f-4edb76ec08bb"
}

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "afae4370-e663-4487-b36a-a90174795405",
  "amount" : 10000,
  "created_time" : "2020-10-13T16:14:52Z",
  "last_modified_time" : "2020-10-13T16:14:52Z",
  "transaction_token" : "5410641a-c3bf-4c49-92e5-88bfbf747e9c",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********08bb",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-10-13T16:14:50Z",
      "last_modified_time" : "2020-10-13T16:14:50Z"
    }
  },
  "funding_source_token" : "**********08bb",
  "user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
  "currency_code" : "USD"
}

2020-10-13 11:14:52 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "afae4370-e663-4487-b36a-a90174795405",
  "amount" : 10000,
  "created_time" : "2020-10-13T16:14:52Z",
  "last_modified_time" : "2020-10-13T16:14:52Z",
  "transaction_token" : "5410641a-c3bf-4c49-92e5-88bfbf747e9c",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********08bb",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-10-13T16:14:50Z",
      "last_modified_time" : "2020-10-13T16:14:50Z"
    }
  },
  "funding_source_token" : "**********08bb",
  "user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
  "currency_code" : "USD"
}

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - gpa_token = token: null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - log.logInfo("-----> gpa_token = " + gpa_token): -----> gpa_token = afae4370-e663-4487-b36a-a90174795405

2020-10-13 11:14:52 - [MESSAGE][INFO] - -----> gpa_token = afae4370-e663-4487-b36a-a90174795405

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - user_token = gpa_token: null

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable gpa_token = " + gpa_token): ----> GlobalVariable gpa_token = 9d495439-b995-4119-a4a9-fda265636415

2020-10-13 11:14:52 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 9d495439-b995-4119-a4a9-fda265636415

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:52 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:52 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:52 - [MESSAGE][INFO] - -----> gpa_token = afae4370-e663-4487-b36a-a90174795405

2020-10-13 11:14:52 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = afae4370-e663-4487-b36a-a90174795405

2020-10-13 11:14:52 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-10-13 11:14:52 - [TEST_STEP][PASSED] - original_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuth(card_token, trans_amount1, mid, beeceptor_create_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-10-13 11:14:53 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/20.har

2020-10-13 11:14:53 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-10-13 11:14:53 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "8c871fe3-8f57-43ef-a690-cf80061d8876",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:53 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "8c871fe3-8f57-43ef-a690-cf80061d8876",
  "amount": "10",
  "mid": "USD",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-transaction",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "178",
    "token" : "62175942-0444-4f6b-a264-ca803077a63a",
    "user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
    "acting_user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
    "card_token" : "8c871fe3-8f57-43ef-a690-cf80061d8876",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 131,
    "created_time" : "2020-10-13T16:14:53Z",
    "user_transaction_time" : "2020-10-13T16:14:53Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "245233",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "354265"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "6409",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:53.123Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "408966976166",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111111457926409",
    "3" : "000000",
    "4" : 10.00,
    "7" : "1013161453",
    "11" : "000000354265",
    "12" : "20201013161453",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "408966976166",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1109",
    "38" : "245233",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:53 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization",
    "state" : "PENDING",
    "identifier" : "178",
    "token" : "62175942-0444-4f6b-a264-ca803077a63a",
    "user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
    "acting_user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
    "card_token" : "8c871fe3-8f57-43ef-a690-cf80061d8876",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 131,
    "created_time" : "2020-10-13T16:14:53Z",
    "user_transaction_time" : "2020-10-13T16:14:53Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "245233",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "system_trace_audit_number" : "354265"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "6409",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:53.123Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "408966976166",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "1"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2110",
    "2" : "1111111457926409",
    "3" : "000000",
    "4" : 10.00,
    "7" : "1013161453",
    "11" : "000000354265",
    "12" : "20201013161453",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "408966976166",
    "22" : "10000000020000000100000001000000",
    "24" : "181",
    "26" : "6411",
    "37" : "1109",
    "38" : "245233",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099900000018402C000001000000",
    "63" : "DISCOVER",
    "112" : {
      "22" : "0200010000700",
      "101" : "9990.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "34" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = 62175942-0444-4f6b-a264-ca803077a63a

2020-10-13 11:14:53 - [MESSAGE][INFO] - -----> original_transaction_token = 62175942-0444-4f6b-a264-ca803077a63a

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = 62175942-0444-4f6b-a264-ca803077a63a

2020-10-13 11:14:53 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 62175942-0444-4f6b-a264-ca803077a63a

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:53 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:53 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:53 - [MESSAGE][INFO] - -----> original_transaction_token = 62175942-0444-4f6b-a264-ca803077a63a

2020-10-13 11:14:53 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 62175942-0444-4f6b-a264-ca803077a63a

2020-10-13 11:14:53 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuth is PASSED

2020-10-13 11:14:53 - [TEST_STEP][PASSED] - advice_transaction_token = detailed_Onboarding.detailed_onboarding.createTransAuthAdvice(original_transaction_token, advice_amount, mid, beeceptor_create_auth_advice, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-10-13 11:14:54 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/21.har

2020-10-13 11:14:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-10-13 11:14:54 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/authorization/advice

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "62175942-0444-4f6b-a264-ca803077a63a",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:54 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "62175942-0444-4f6b-a264-ca803077a63a",
  "amount": "1",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-auth-advice",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "179",
    "token" : "6afd3b01-371c-46dc-b13a-effbef875124",
    "user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
    "acting_user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
    "card_token" : "8c871fe3-8f57-43ef-a690-cf80061d8876",
    "preceding_related_transaction_token" : "62175942-0444-4f6b-a264-ca803077a63a",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 118,
    "created_time" : "2020-10-13T16:14:53Z",
    "user_transaction_time" : "2020-10-13T16:14:53Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "245233",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000056"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "6409",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:53.891Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "408966976166",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111111457926409",
    "3" : "900000",
    "4" : 1.00,
    "7" : "1013161453",
    "11" : "000000000056",
    "12" : "20201013161453",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "408966976166",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1110",
    "38" : "245233",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "62175942-0444-4f6b-a264-ca803077a63a"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:54 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.advice",
    "state" : "PENDING",
    "identifier" : "179",
    "token" : "6afd3b01-371c-46dc-b13a-effbef875124",
    "user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
    "acting_user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
    "card_token" : "8c871fe3-8f57-43ef-a690-cf80061d8876",
    "preceding_related_transaction_token" : "62175942-0444-4f6b-a264-ca803077a63a",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -1.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -1.00
        }
      }
    },
    "duration" : 118,
    "created_time" : "2020-10-13T16:14:53Z",
    "user_transaction_time" : "2020-10-13T16:14:53Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 1.00,
    "amount" : 1.00,
    "currency_code" : "USD",
    "approval_code" : "245233",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000056"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "6409",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:53.891Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "408966976166",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111111457926409",
    "3" : "900000",
    "4" : 1.00,
    "7" : "1013161453",
    "11" : "000000000056",
    "12" : "20201013161453",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "408966976166",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1110",
    "38" : "245233",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "62175942-0444-4f6b-a264-ca803077a63a"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - advice_transaction_token = token: null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - log.logInfo("-----> advice_transaction_token = " + advice_transaction_token): -----> advice_transaction_token = 6afd3b01-371c-46dc-b13a-effbef875124

2020-10-13 11:14:54 - [MESSAGE][INFO] - -----> advice_transaction_token = 6afd3b01-371c-46dc-b13a-effbef875124

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - advice_transaction_token = advice_transaction_token: null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable advice_transaction_token = " + advice_transaction_token): ----> GlobalVariable advice_transaction_token = 6afd3b01-371c-46dc-b13a-effbef875124

2020-10-13 11:14:54 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = 6afd3b01-371c-46dc-b13a-effbef875124

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:54 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:54 - [MESSAGE][INFO] - -----> advice_transaction_token = 6afd3b01-371c-46dc-b13a-effbef875124

2020-10-13 11:14:54 - [MESSAGE][INFO] - ----> GlobalVariable advice_transaction_token = 6afd3b01-371c-46dc-b13a-effbef875124

2020-10-13 11:14:54 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransAuthAdvice is PASSED

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - cleared_transaction_token = detailed_Onboarding.detailed_onboarding.createTransClearing(original_transaction_token, trans_amount1, mid, force_post, beeceptor_settle_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-10-13 11:14:54 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/22.har

2020-10-13 11:14:54 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:14:54 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "62175942-0444-4f6b-a264-ca803077a63a",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:54 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "62175942-0444-4f6b-a264-ca803077a63a",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "180",
    "token" : "a5e87cd7-549c-4109-99a5-1b311d4c51a1",
    "user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
    "acting_user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
    "card_token" : "8c871fe3-8f57-43ef-a690-cf80061d8876",
    "preceding_related_transaction_token" : "62175942-0444-4f6b-a264-ca803077a63a",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 71,
    "created_time" : "2020-10-13T16:14:54Z",
    "user_transaction_time" : "2020-10-13T16:14:54Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "245233",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000057"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "6409",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:54.628Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "408966976166",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111111457926409",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161454",
    "11" : "000000000057",
    "12" : "20201013161454",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "408966976166",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1111",
    "38" : "245233",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "62175942-0444-4f6b-a264-ca803077a63a"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:54 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "180",
    "token" : "a5e87cd7-549c-4109-99a5-1b311d4c51a1",
    "user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
    "acting_user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
    "card_token" : "8c871fe3-8f57-43ef-a690-cf80061d8876",
    "preceding_related_transaction_token" : "62175942-0444-4f6b-a264-ca803077a63a",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9989.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9989.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 71,
    "created_time" : "2020-10-13T16:14:54Z",
    "user_transaction_time" : "2020-10-13T16:14:54Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "245233",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000057"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "6409",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:54.628Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "408966976166",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111111457926409",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161454",
    "11" : "000000000057",
    "12" : "20201013161454",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "408966976166",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1111",
    "38" : "245233",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "62175942-0444-4f6b-a264-ca803077a63a"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - cleared_transaction_token = token: null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - log.logInfo("-----> cleared_transaction_token = " + cleared_transaction_token): -----> cleared_transaction_token = a5e87cd7-549c-4109-99a5-1b311d4c51a1

2020-10-13 11:14:54 - [MESSAGE][INFO] - -----> cleared_transaction_token = a5e87cd7-549c-4109-99a5-1b311d4c51a1

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - cleared_transaction_token = cleared_transaction_token: null

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable cleared_transaction_token = " + cleared_transaction_token): ----> GlobalVariable cleared_transaction_token = a5e87cd7-549c-4109-99a5-1b311d4c51a1

2020-10-13 11:14:54 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = a5e87cd7-549c-4109-99a5-1b311d4c51a1

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:54 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:54 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:54 - [MESSAGE][INFO] - -----> cleared_transaction_token = a5e87cd7-549c-4109-99a5-1b311d4c51a1

2020-10-13 11:14:54 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = a5e87cd7-549c-4109-99a5-1b311d4c51a1

2020-10-13 11:14:54 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-10-13 11:14:54 - [TEST_STEP][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearingRefund(original_transaction_token, trans_amount1, mid, is_refund, beeceptor_create_refund, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearingRefund is PASSED

2020-10-13 11:14:55 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/23.har

2020-10-13 11:14:55 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:14:55 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "62175942-0444-4f6b-a264-ca803077a63a",
  "amount": "10",
  "mid": "USD",
  "is_refund": "true",
    "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-refund",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:55 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "62175942-0444-4f6b-a264-ca803077a63a",
  "amount": "10",
  "mid": "USD",
  "is_refund": "true",
    "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-refund",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "refund",
    "state" : "COMPLETION",
    "identifier" : "181",
    "token" : "4ea8ba26-40e7-4eaf-b62e-ed9aed51b89b",
    "user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
    "acting_user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
    "card_token" : "8c871fe3-8f57-43ef-a690-cf80061d8876",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : 10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : 10.00
        }
      }
    },
    "duration" : 91,
    "created_time" : "2020-10-13T16:14:55Z",
    "user_transaction_time" : "2020-10-13T16:14:55Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "030581",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000058"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "6409",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:55.318Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "408966976166",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111111457926409",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161455",
    "11" : "000000000058",
    "12" : "20201013161455",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "408966976166",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1112",
    "38" : "030581",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "62175942-0444-4f6b-a264-ca803077a63a"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:55 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "refund",
    "state" : "COMPLETION",
    "identifier" : "181",
    "token" : "4ea8ba26-40e7-4eaf-b62e-ed9aed51b89b",
    "user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
    "acting_user_token" : "cfe91567-8a2a-464c-93ee-933098925721",
    "card_token" : "8c871fe3-8f57-43ef-a690-cf80061d8876",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 10000.00,
      "available_balance" : 9999.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : 10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 10000.00,
          "available_balance" : 9999.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : 10.00
        }
      }
    },
    "duration" : 91,
    "created_time" : "2020-10-13T16:14:55Z",
    "user_transaction_time" : "2020-10-13T16:14:55Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "030581",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000058"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "6409",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:55.318Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "network_reference_id" : "408966976166",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111111457926409",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161455",
    "11" : "000000000058",
    "12" : "20201013161455",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "21" : "408966976166",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1112",
    "38" : "030581",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099990000018402C000001000000",
    "56" : {
      "7" : "62175942-0444-4f6b-a264-ca803077a63a"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9999.00",
      "102" : "10000.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - refund_transaction_token = token: null

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - log.logInfo("-----> refund_transaction_token = " + refund_transaction_token): -----> refund_transaction_token = 4ea8ba26-40e7-4eaf-b62e-ed9aed51b89b

2020-10-13 11:14:55 - [MESSAGE][INFO] - -----> refund_transaction_token = 4ea8ba26-40e7-4eaf-b62e-ed9aed51b89b

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - refund_transaction_token = refund_transaction_token: null

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable refund_transaction_token = " + refund_transaction_token): ----> GlobalVariable refund_transaction_token = 4ea8ba26-40e7-4eaf-b62e-ed9aed51b89b

2020-10-13 11:14:55 - [MESSAGE][INFO] - ----> GlobalVariable refund_transaction_token = 4ea8ba26-40e7-4eaf-b62e-ed9aed51b89b

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:55 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:55 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:55 - [MESSAGE][INFO] - -----> refund_transaction_token = 4ea8ba26-40e7-4eaf-b62e-ed9aed51b89b

2020-10-13 11:14:55 - [MESSAGE][INFO] - ----> GlobalVariable refund_transaction_token = 4ea8ba26-40e7-4eaf-b62e-ed9aed51b89b

2020-10-13 11:14:55 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearingRefund is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Financial Settled Transaction/Detailed_onboarding_with_financial_transactions" time="6.726" classname="Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Financial Settled Transaction/Detailed_onboarding_with_financial_transactions" status="PASSED">
         <system-out><![CDATA[2020-10-13 11:14:55 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Financial Settled Transaction/Detailed_onboarding_with_financial_transactions: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Financial Settled Transaction/Detailed_onboarding_with_financial_transactions

2020-10-13 11:14:55 - [TEST_STEP][PASSED] - card_product_token = detailed_Onboarding.detailed_onboarding.createCardProduct(start_date, card_product_name, payment_instrument, ecommerce, activate_upon_issue): detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-10-13 11:14:56 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/24.har

2020-10-13 11:14:56 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:14:56 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:14:56 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "39310e56-1810-4330-ba0d-160970d56e77",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:14:56Z",
  "last_modified_time" : "2020-10-13T16:14:56Z"
}

2020-10-13 11:14:56 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "39310e56-1810-4330-ba0d-160970d56e77",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:14:56Z",
  "last_modified_time" : "2020-10-13T16:14:56Z"
}

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = 39310e56-1810-4330-ba0d-160970d56e77

2020-10-13 11:14:56 - [MESSAGE][INFO] - -----> card_product_token = 39310e56-1810-4330-ba0d-160970d56e77

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = 39310e56-1810-4330-ba0d-160970d56e77

2020-10-13 11:14:56 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 39310e56-1810-4330-ba0d-160970d56e77

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:56 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:56 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:56 - [MESSAGE][INFO] - -----> card_product_token = 39310e56-1810-4330-ba0d-160970d56e77

2020-10-13 11:14:56 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 39310e56-1810-4330-ba0d-160970d56e77

2020-10-13 11:14:56 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardProduct is PASSED

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - funding_source_token = detailed_Onboarding.detailed_onboarding.createCardFundingSource(program_name): detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-10-13 11:14:56 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/25.har

2020-10-13 11:14:56 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:14:56 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:14:56 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "e903aaa6-750e-4662-9e76-176a013cd900",
  "created_time" : "2020-10-13T16:14:56Z",
  "last_modified_time" : "2020-10-13T16:14:56Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:14:56 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "e903aaa6-750e-4662-9e76-176a013cd900",
  "created_time" : "2020-10-13T16:14:56Z",
  "last_modified_time" : "2020-10-13T16:14:56Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - funding_token = token: null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = e903aaa6-750e-4662-9e76-176a013cd900

2020-10-13 11:14:56 - [MESSAGE][INFO] - -----> funding_token = e903aaa6-750e-4662-9e76-176a013cd900

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = e903aaa6-750e-4662-9e76-176a013cd900

2020-10-13 11:14:56 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = e903aaa6-750e-4662-9e76-176a013cd900

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:56 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:56 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:56 - [MESSAGE][INFO] - -----> funding_source_token = e903aaa6-750e-4662-9e76-176a013cd900

2020-10-13 11:14:56 - [MESSAGE][INFO] - ----> GlobalVariable funding_source_token = e903aaa6-750e-4662-9e76-176a013cd900

2020-10-13 11:14:56 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCardFundingSource is PASSED

2020-10-13 11:14:56 - [TEST_STEP][PASSED] - user_token = detailed_Onboarding.detailed_onboarding.createDetailedUser(user_first_name, user_middle_name, user_last_name, active, user_password, phone, gender, user_email, ssn_expiration_date, user_id_type, user_address1, city, user_state, country, birth_date, corporate_card_holder, user_ssn, id_card_number, id_card_expiration_date, nationality, company, uses_parent_account, user_postal_code): detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-10-13 11:14:57 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/26.har

2020-10-13 11:14:57 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:14:57 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:14:57 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:14:57Z",
  "last_modified_time" : "2020-10-13T16:14:57Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "53b8a639-0ad1-40e1-b43c-6f14979c4504",
    "account_number" : "40013372409600008",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:14:57 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:14:57Z",
  "last_modified_time" : "2020-10-13T16:14:57Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "53b8a639-0ad1-40e1-b43c-6f14979c4504",
    "account_number" : "40013372409600008",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - user_token = token: null

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = 641c0336-fd98-4672-86f9-8c70f4aaa20e

2020-10-13 11:14:57 - [MESSAGE][INFO] - -----> user_token = 641c0336-fd98-4672-86f9-8c70f4aaa20e

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = 641c0336-fd98-4672-86f9-8c70f4aaa20e

2020-10-13 11:14:57 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 641c0336-fd98-4672-86f9-8c70f4aaa20e

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:57 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:57 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:57 - [MESSAGE][INFO] - -----> user_token = 641c0336-fd98-4672-86f9-8c70f4aaa20e

2020-10-13 11:14:57 - [MESSAGE][INFO] - ----> GlobalVariable user_token = 641c0336-fd98-4672-86f9-8c70f4aaa20e

2020-10-13 11:14:57 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createDetailedUser is PASSED

2020-10-13 11:14:57 - [TEST_STEP][PASSED] - card_token = detailed_Onboarding.detailed_onboarding.createCard(user_token, card_product_token): detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-10-13 11:14:58 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/27.har

2020-10-13 11:14:58 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:14:58 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "641c0336-fd98-4672-86f9-8c70f4aaa20e",
  "card_product_token": "39310e56-1810-4330-ba0d-160970d56e77"
}

2020-10-13 11:14:58 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "641c0336-fd98-4672-86f9-8c70f4aaa20e",
  "card_product_token": "39310e56-1810-4330-ba0d-160970d56e77"
}

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-10-13T16:14:58Z",
  "last_modified_time" : "2020-10-13T16:14:58Z",
  "token" : "407de7e5-21ea-4da4-a801-b2d5919c958e",
  "user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
  "card_product_token" : "39310e56-1810-4330-ba0d-160970d56e77",
  "last_four" : "2811",
  "pan" : "111111______2811",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "18534514363643027143",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:14:58 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-10-13T16:14:58Z",
  "last_modified_time" : "2020-10-13T16:14:58Z",
  "token" : "407de7e5-21ea-4da4-a801-b2d5919c958e",
  "user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
  "card_product_token" : "39310e56-1810-4330-ba0d-160970d56e77",
  "last_four" : "2811",
  "pan" : "111111______2811",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "18534514363643027143",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - card_token = token: null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = 407de7e5-21ea-4da4-a801-b2d5919c958e

2020-10-13 11:14:58 - [MESSAGE][INFO] - -----> card_token = 407de7e5-21ea-4da4-a801-b2d5919c958e

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = 407de7e5-21ea-4da4-a801-b2d5919c958e

2020-10-13 11:14:58 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 407de7e5-21ea-4da4-a801-b2d5919c958e

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:58 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:58 - [MESSAGE][INFO] - -----> card_token = 407de7e5-21ea-4da4-a801-b2d5919c958e

2020-10-13 11:14:58 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 407de7e5-21ea-4da4-a801-b2d5919c958e

2020-10-13 11:14:58 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createCard is PASSED

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - gpa_token = detailed_Onboarding.detailed_onboarding.createGpaOrder(user_token, gpaamount, currency_code, funding_source_token): detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-10-13 11:14:58 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/28.har

2020-10-13 11:14:58 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-10-13 11:14:58 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/gpaorders

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "641c0336-fd98-4672-86f9-8c70f4aaa20e",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "e903aaa6-750e-4662-9e76-176a013cd900"
}

2020-10-13 11:14:58 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "641c0336-fd98-4672-86f9-8c70f4aaa20e",
  "amount": "10000",
  "currency_code": "USD",
  "funding_source_token": "e903aaa6-750e-4662-9e76-176a013cd900"
}

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "65bfb72f-b682-4e1d-a065-12ab9f2e862d",
  "amount" : 10000,
  "created_time" : "2020-10-13T16:14:58Z",
  "last_modified_time" : "2020-10-13T16:14:58Z",
  "transaction_token" : "c80c3774-35ce-4da8-9cf7-abfc851fd086",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********d900",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-10-13T16:14:56Z",
      "last_modified_time" : "2020-10-13T16:14:56Z"
    }
  },
  "funding_source_token" : "**********d900",
  "user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
  "currency_code" : "USD"
}

2020-10-13 11:14:58 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "65bfb72f-b682-4e1d-a065-12ab9f2e862d",
  "amount" : 10000,
  "created_time" : "2020-10-13T16:14:58Z",
  "last_modified_time" : "2020-10-13T16:14:58Z",
  "transaction_token" : "c80c3774-35ce-4da8-9cf7-abfc851fd086",
  "state" : "COMPLETION",
  "response" : {
    "code" : "0000",
    "memo" : "Approved or completed successfully"
  },
  "funding" : {
    "amount" : 10000,
    "source" : {
      "type" : "program",
      "token" : "**********d900",
      "active" : true,
      "name" : "Program Funding",
      "is_default_account" : false,
      "created_time" : "2020-10-13T16:14:56Z",
      "last_modified_time" : "2020-10-13T16:14:56Z"
    }
  },
  "funding_source_token" : "**********d900",
  "user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
  "currency_code" : "USD"
}

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - gpa_token = token: null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - log.logInfo("-----> gpa_token = " + gpa_token): -----> gpa_token = 65bfb72f-b682-4e1d-a065-12ab9f2e862d

2020-10-13 11:14:58 - [MESSAGE][INFO] - -----> gpa_token = 65bfb72f-b682-4e1d-a065-12ab9f2e862d

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - user_token = gpa_token: null

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable gpa_token = " + gpa_token): ----> GlobalVariable gpa_token = afae4370-e663-4487-b36a-a90174795405

2020-10-13 11:14:58 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = afae4370-e663-4487-b36a-a90174795405

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:58 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:58 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:58 - [MESSAGE][INFO] - -----> gpa_token = 65bfb72f-b682-4e1d-a065-12ab9f2e862d

2020-10-13 11:14:58 - [MESSAGE][INFO] - ----> GlobalVariable gpa_token = 65bfb72f-b682-4e1d-a065-12ab9f2e862d

2020-10-13 11:14:58 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createGpaOrder is PASSED

2020-10-13 11:14:58 - [TEST_STEP][PASSED] - detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal(card_token, trans_amount1, mid, beeceptor_create_financial_withdrawal, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal is PASSED

2020-10-13 11:14:59 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/29.har

2020-10-13 11:14:59 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/financial/withdrawal

2020-10-13 11:14:59 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/financial/withdrawal

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "407de7e5-21ea-4da4-a801-b2d5919c958e",
  "amount": "10",
  "mid": "USD",
  "account_type": "",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-financial-withdrawal",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:59 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "407de7e5-21ea-4da4-a801-b2d5919c958e",
  "amount": "10",
  "mid": "USD",
  "account_type": "",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-financial-withdrawal",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.atm.withdrawal",
    "state" : "COMPLETION",
    "identifier" : "183",
    "token" : "5d769ec2-8e95-475f-8a86-2b8349bc2587",
    "user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
    "acting_user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
    "card_token" : "407de7e5-21ea-4da4-a801-b2d5919c958e",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 85,
    "created_time" : "2020-10-13T16:14:59Z",
    "user_transaction_time" : "2020-10-13T16:14:59Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "currency_code" : "USD",
    "approval_code" : "925981",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "59338525689",
      "retrieval_reference_number" : "135595821249",
      "system_trace_audit_number" : "694858"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2811",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:59.343Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "tid" : "TR100000",
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111114826672811",
    "3" : "000000",
    "4" : 10.00,
    "5" : 10.00,
    "7" : "1013161459",
    "11" : "694858",
    "12" : "041459",
    "13" : "1013",
    "14" : "2410",
    "15" : "1013",
    "17" : "1013",
    "18" : "6411",
    "22" : "10000000020000000100000001000000",
    "26" : "6411",
    "32" : "59338525689",
    "33" : "46173386718",
    "37" : "135595821249",
    "38" : "925981",
    "39" : "0000",
    "41" : "TR100000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "48" : "Bank of Marqeta",
    "50" : "840",
    "54" : "00028402C00000099900000018402C000000999000",
    "58" : "00000000022",
    "59" : "0000000",
    "63" : "DISCOVER",
    "112" : {
      "101" : "9990.00",
      "102" : "9990.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "35" : "API"
    },
    "123" : "123 Main St.           ",
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:59 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.atm.withdrawal",
    "state" : "COMPLETION",
    "identifier" : "183",
    "token" : "5d769ec2-8e95-475f-8a86-2b8349bc2587",
    "user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
    "acting_user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
    "card_token" : "407de7e5-21ea-4da4-a801-b2d5919c958e",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9990.00,
      "available_balance" : 9990.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9990.00,
          "available_balance" : 9990.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 85,
    "created_time" : "2020-10-13T16:14:59Z",
    "user_transaction_time" : "2020-10-13T16:14:59Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "currency_code" : "USD",
    "approval_code" : "925981",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "59338525689",
      "retrieval_reference_number" : "135595821249",
      "system_trace_audit_number" : "694858"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2811",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:14:59.343Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "tid" : "TR100000",
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111114826672811",
    "3" : "000000",
    "4" : 10.00,
    "5" : 10.00,
    "7" : "1013161459",
    "11" : "694858",
    "12" : "041459",
    "13" : "1013",
    "14" : "2410",
    "15" : "1013",
    "17" : "1013",
    "18" : "6411",
    "22" : "10000000020000000100000001000000",
    "26" : "6411",
    "32" : "59338525689",
    "33" : "46173386718",
    "37" : "135595821249",
    "38" : "925981",
    "39" : "0000",
    "41" : "TR100000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "48" : "Bank of Marqeta",
    "50" : "840",
    "54" : "00028402C00000099900000018402C000000999000",
    "58" : "00000000022",
    "59" : "0000000",
    "63" : "DISCOVER",
    "112" : {
      "101" : "9990.00",
      "102" : "9990.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "35" : "API"
    },
    "123" : "123 Main St.           ",
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = 5d769ec2-8e95-475f-8a86-2b8349bc2587

2020-10-13 11:14:59 - [MESSAGE][INFO] - -----> original_transaction_token = 5d769ec2-8e95-475f-8a86-2b8349bc2587

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = 5d769ec2-8e95-475f-8a86-2b8349bc2587

2020-10-13 11:14:59 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 5d769ec2-8e95-475f-8a86-2b8349bc2587

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:14:59 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:14:59 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:14:59 - [MESSAGE][INFO] - -----> original_transaction_token = 5d769ec2-8e95-475f-8a86-2b8349bc2587

2020-10-13 11:14:59 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 5d769ec2-8e95-475f-8a86-2b8349bc2587

2020-10-13 11:14:59 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal is PASSED

2020-10-13 11:14:59 - [TEST_STEP][PASSED] - detailed_Onboarding.detailed_onboarding.updateCardProduct(card_product_token): detailed_Onboarding.detailed_onboarding.updateCardProduct is PASSED

2020-10-13 11:15:00 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/30.har

2020-10-13 11:15:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts/39310e56-1810-4330-ba0d-160970d56e77

2020-10-13 11:15:00 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts/39310e56-1810-4330-ba0d-160970d56e77

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "config": {
    "poi": {
      "atm": true
    }
  }
}

2020-10-13 11:15:00 - [MESSAGE][INFO] - -------> Request Body= {
  "config": {
    "poi": {
      "atm": true
    }
  }
}

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "39310e56-1810-4330-ba0d-160970d56e77",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:14:56Z",
  "last_modified_time" : "2020-10-13T16:15:00Z"
}

2020-10-13 11:15:00 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "39310e56-1810-4330-ba0d-160970d56e77",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:14:56Z",
  "last_modified_time" : "2020-10-13T16:15:00Z"
}

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 200: null

2020-10-13 11:15:00 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:15:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:15:00 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.updateCardProduct is PASSED

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - original_transaction_token = detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal(card_token, trans_amount1, mid, beeceptor_create_financial_withdrawal, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal is PASSED

2020-10-13 11:15:00 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/31.har

2020-10-13 11:15:00 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/financial/withdrawal

2020-10-13 11:15:00 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/financial/withdrawal

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "card_token": "407de7e5-21ea-4da4-a801-b2d5919c958e",
  "amount": "10",
  "mid": "USD",
  "account_type": "",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-financial-withdrawal",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:15:00 - [MESSAGE][INFO] - -------> Request Body= {
  "card_token": "407de7e5-21ea-4da4-a801-b2d5919c958e",
  "amount": "10",
  "mid": "USD",
  "account_type": "",
  "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-financial-withdrawal",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.atm.withdrawal",
    "state" : "COMPLETION",
    "identifier" : "184",
    "token" : "69b7b833-cf76-4e57-b55b-fcaf717ab88c",
    "user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
    "acting_user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
    "card_token" : "407de7e5-21ea-4da4-a801-b2d5919c958e",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9980.00,
      "available_balance" : 9980.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9980.00,
          "available_balance" : 9980.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 86,
    "created_time" : "2020-10-13T16:15:00Z",
    "user_transaction_time" : "2020-10-13T16:15:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "currency_code" : "USD",
    "approval_code" : "134911",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "92409282333",
      "retrieval_reference_number" : "368402876065",
      "system_trace_audit_number" : "511305"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2811",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:15:00.624Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "tid" : "TR100000",
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111114826672811",
    "3" : "000000",
    "4" : 10.00,
    "5" : 10.00,
    "7" : "1013161500",
    "11" : "511305",
    "12" : "041500",
    "13" : "1013",
    "14" : "2410",
    "15" : "1013",
    "17" : "1013",
    "18" : "6411",
    "22" : "10000000020000000100000001000000",
    "26" : "6411",
    "32" : "92409282333",
    "33" : "61885106340",
    "37" : "368402876065",
    "38" : "134911",
    "39" : "0000",
    "41" : "TR100000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "48" : "Bank of Marqeta",
    "50" : "840",
    "54" : "00028402C00000099800000018402C000000998000",
    "58" : "00000000022",
    "59" : "0000000",
    "63" : "DISCOVER",
    "112" : {
      "101" : "9980.00",
      "102" : "9980.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "35" : "API"
    },
    "123" : "123 Main St.           ",
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:15:00 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.atm.withdrawal",
    "state" : "COMPLETION",
    "identifier" : "184",
    "token" : "69b7b833-cf76-4e57-b55b-fcaf717ab88c",
    "user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
    "acting_user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
    "card_token" : "407de7e5-21ea-4da4-a801-b2d5919c958e",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9980.00,
      "available_balance" : 9980.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9980.00,
          "available_balance" : 9980.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 86,
    "created_time" : "2020-10-13T16:15:00Z",
    "user_transaction_time" : "2020-10-13T16:15:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "currency_code" : "USD",
    "approval_code" : "134911",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "92409282333",
      "retrieval_reference_number" : "368402876065",
      "system_trace_audit_number" : "511305"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2811",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:15:00.624Z",
    "issuer_payment_node" : "00b8d031e0a4759766b5b5266f5229d8",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "tid" : "TR100000",
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111114826672811",
    "3" : "000000",
    "4" : 10.00,
    "5" : 10.00,
    "7" : "1013161500",
    "11" : "511305",
    "12" : "041500",
    "13" : "1013",
    "14" : "2410",
    "15" : "1013",
    "17" : "1013",
    "18" : "6411",
    "22" : "10000000020000000100000001000000",
    "26" : "6411",
    "32" : "92409282333",
    "33" : "61885106340",
    "37" : "368402876065",
    "38" : "134911",
    "39" : "0000",
    "41" : "TR100000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "48" : "Bank of Marqeta",
    "50" : "840",
    "54" : "00028402C00000099800000018402C000000998000",
    "58" : "00000000022",
    "59" : "0000000",
    "63" : "DISCOVER",
    "112" : {
      "101" : "9980.00",
      "102" : "9980.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "35" : "API"
    },
    "123" : "123 Main St.           ",
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - original_transaction_token = token: null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - log.logInfo("-----> original_transaction_token = " + original_transaction_token): -----> original_transaction_token = 69b7b833-cf76-4e57-b55b-fcaf717ab88c

2020-10-13 11:15:00 - [MESSAGE][INFO] - -----> original_transaction_token = 69b7b833-cf76-4e57-b55b-fcaf717ab88c

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - original_transaction_token = original_transaction_token: null

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable original_transaction_token = " + original_transaction_token): ----> GlobalVariable original_transaction_token = 69b7b833-cf76-4e57-b55b-fcaf717ab88c

2020-10-13 11:15:00 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 69b7b833-cf76-4e57-b55b-fcaf717ab88c

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:15:00 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:15:00 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:15:00 - [MESSAGE][INFO] - -----> original_transaction_token = 69b7b833-cf76-4e57-b55b-fcaf717ab88c

2020-10-13 11:15:00 - [MESSAGE][INFO] - ----> GlobalVariable original_transaction_token = 69b7b833-cf76-4e57-b55b-fcaf717ab88c

2020-10-13 11:15:00 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransFinancialWithdrawal is PASSED

2020-10-13 11:15:00 - [TEST_STEP][PASSED] - cleared_transaction_token = detailed_Onboarding.detailed_onboarding.createTransClearing(original_transaction_token, trans_amount1, mid, force_post, beeceptor_settle_transaction, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-10-13 11:15:01 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/32.har

2020-10-13 11:15:01 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:15:01 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "69b7b833-cf76-4e57-b55b-fcaf717ab88c",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:15:01 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "69b7b833-cf76-4e57-b55b-fcaf717ab88c",
  "amount": "10",
  "mid": "USD",
  "force_post": "true",
  "webhook": {
    "endpoint": "${beeceptor_settle_transaction}",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "185",
    "token" : "a459a8cb-07c8-408d-a2c0-999096fd5d7e",
    "user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
    "acting_user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
    "card_token" : "407de7e5-21ea-4da4-a801-b2d5919c958e",
    "preceding_related_transaction_token" : "69b7b833-cf76-4e57-b55b-fcaf717ab88c",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9970.00,
      "available_balance" : 9970.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9970.00,
          "available_balance" : 9970.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 71,
    "created_time" : "2020-10-13T16:15:01Z",
    "user_transaction_time" : "2020-10-13T16:15:01Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "134911",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000059"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2811",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:15:01.321Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111114826672811",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161501",
    "11" : "000000000059",
    "12" : "20201013161501",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1113",
    "38" : "134911",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "69b7b833-cf76-4e57-b55b-fcaf717ab88c"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:15:01 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "pindebit.authorization.clearing",
    "state" : "COMPLETION",
    "identifier" : "185",
    "token" : "a459a8cb-07c8-408d-a2c0-999096fd5d7e",
    "user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
    "acting_user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
    "card_token" : "407de7e5-21ea-4da4-a801-b2d5919c958e",
    "preceding_related_transaction_token" : "69b7b833-cf76-4e57-b55b-fcaf717ab88c",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9970.00,
      "available_balance" : 9970.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : -10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9970.00,
          "available_balance" : 9970.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : -10.00
        }
      }
    },
    "duration" : 71,
    "created_time" : "2020-10-13T16:15:01Z",
    "user_transaction_time" : "2020-10-13T16:15:01Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "134911",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000059"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2811",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:15:01.321Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111114826672811",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161501",
    "11" : "000000000059",
    "12" : "20201013161501",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1113",
    "38" : "134911",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "56" : {
      "7" : "69b7b833-cf76-4e57-b55b-fcaf717ab88c"
    },
    "63" : "DISCOVER",
    "112" : {
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - cleared_transaction_token = token: null

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - log.logInfo("-----> cleared_transaction_token = " + cleared_transaction_token): -----> cleared_transaction_token = a459a8cb-07c8-408d-a2c0-999096fd5d7e

2020-10-13 11:15:01 - [MESSAGE][INFO] - -----> cleared_transaction_token = a459a8cb-07c8-408d-a2c0-999096fd5d7e

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - cleared_transaction_token = cleared_transaction_token: null

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable cleared_transaction_token = " + cleared_transaction_token): ----> GlobalVariable cleared_transaction_token = a459a8cb-07c8-408d-a2c0-999096fd5d7e

2020-10-13 11:15:01 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = a459a8cb-07c8-408d-a2c0-999096fd5d7e

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:15:01 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:15:01 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:15:01 - [MESSAGE][INFO] - -----> cleared_transaction_token = a459a8cb-07c8-408d-a2c0-999096fd5d7e

2020-10-13 11:15:01 - [MESSAGE][INFO] - ----> GlobalVariable cleared_transaction_token = a459a8cb-07c8-408d-a2c0-999096fd5d7e

2020-10-13 11:15:01 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearing is PASSED

2020-10-13 11:15:01 - [TEST_STEP][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearingRefund(original_transaction_token, trans_amount1, mid, is_refund, beeceptor_create_refund, beeceptor_username, beeceptor_password): detailed_Onboarding.detailed_onboarding.createTransClearingRefund is PASSED

2020-10-13 11:15:02 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Detailed Test Suite/Detailed_Onboarding_With_Transactions/20201013_111420/requests/main/33.har

2020-10-13 11:15:02 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:15:02 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/simulate/clearing

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "original_transaction_token": "69b7b833-cf76-4e57-b55b-fcaf717ab88c",
  "amount": "10",
  "mid": "USD",
  "is_refund": "true",
    "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-refund",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:15:02 - [MESSAGE][INFO] - -------> Request Body= {
  "original_transaction_token": "69b7b833-cf76-4e57-b55b-fcaf717ab88c",
  "amount": "10",
  "mid": "USD",
  "is_refund": "true",
    "webhook": {
    "endpoint": "https://create-transaction.free.beeceptor.com/create-refund",
    "username": "chase.small@outlook.com",
    "password": "Shredder1991!"
  }
}

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "transaction" : {
    "type" : "refund",
    "state" : "COMPLETION",
    "identifier" : "186",
    "token" : "ed9f347c-0f3a-4355-95f9-e4d508ec7f38",
    "user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
    "acting_user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
    "card_token" : "407de7e5-21ea-4da4-a801-b2d5919c958e",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9980.00,
      "available_balance" : 9980.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : 10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9980.00,
          "available_balance" : 9980.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : 10.00
        }
      }
    },
    "duration" : 75,
    "created_time" : "2020-10-13T16:15:02Z",
    "user_transaction_time" : "2020-10-13T16:15:02Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "505231",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000060"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2811",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:15:02.068Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111114826672811",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161502",
    "11" : "000000000060",
    "12" : "20201013161502",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1114",
    "38" : "505231",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099800000018402C000000998000",
    "56" : {
      "7" : "69b7b833-cf76-4e57-b55b-fcaf717ab88c"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9980.00",
      "102" : "9980.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:15:02 - [MESSAGE][INFO] - -------> Response Body= {
  "transaction" : {
    "type" : "refund",
    "state" : "COMPLETION",
    "identifier" : "186",
    "token" : "ed9f347c-0f3a-4355-95f9-e4d508ec7f38",
    "user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
    "acting_user_token" : "641c0336-fd98-4672-86f9-8c70f4aaa20e",
    "card_token" : "407de7e5-21ea-4da4-a801-b2d5919c958e",
    "gpa" : {
      "currency_code" : "USD",
      "ledger_balance" : 9980.00,
      "available_balance" : 9980.00,
      "credit_balance" : 0.00,
      "pending_credits" : 0.00,
      "impacted_amount" : 10.00,
      "balances" : {
        "USD" : {
          "currency_code" : "USD",
          "ledger_balance" : 9980.00,
          "available_balance" : 9980.00,
          "credit_balance" : 0.00,
          "pending_credits" : 0.00,
          "impacted_amount" : 10.00
        }
      }
    },
    "duration" : 75,
    "created_time" : "2020-10-13T16:15:02Z",
    "user_transaction_time" : "2020-10-13T16:15:02Z",
    "settlement_date" : "2020-10-13T00:00:00Z",
    "request_amount" : 10.00,
    "amount" : 10.00,
    "issuer_interchange_amount" : 0,
    "currency_code" : "USD",
    "approval_code" : "505231",
    "response" : {
      "code" : "0000",
      "memo" : "Approved or completed successfully"
    },
    "network" : "DISCOVER",
    "acquirer_fee_amount" : 0,
    "acquirer" : {
      "institution_id_code" : "000000",
      "system_trace_audit_number" : "000060"
    },
    "user" : {
      "metadata" : { }
    },
    "card" : {
      "last_four" : "2811",
      "metadata" : { }
    },
    "issuer_received_time" : "2020-10-13T16:15:02.068Z",
    "issuer_payment_node" : "6e9f8d699bb8de211dde694e995d7011",
    "card_acceptor" : {
      "mid" : "USD",
      "mcc" : "6411",
      "network_mid" : "USD",
      "mcc_groups" : [ "NONE" ],
      "name" : "Marqeta Storefront",
      "address" : "330 Central Ave. St.",
      "city" : "St. Petersburg",
      "state" : "CA",
      "zip" : "33705",
      "country" : "USA",
      "poi" : {
        "partial_approval_capable" : "0"
      }
    },
    "is_recurring" : false,
    "is_installment" : false
  },
  "raw_iso8583" : {
    "0" : "2210",
    "2" : "1111114826672811",
    "3" : "900000",
    "4" : 10.00,
    "7" : "1013161502",
    "11" : "000000000060",
    "12" : "20201013161502",
    "13" : "201013",
    "14" : "2410",
    "15" : "20201013",
    "17" : "1013",
    "25" : "9000",
    "26" : "6411",
    "32" : "000000",
    "37" : "1114",
    "38" : "505231",
    "39" : "0000",
    "42" : "USD",
    "43" : {
      "2" : "Marqeta Storefront",
      "3" : "330 Central Ave. St.",
      "4" : "St. Petersburg",
      "5" : "CA",
      "6" : "33705",
      "7" : "840"
    },
    "44" : {
      "1" : "Approved or completed successfully",
      "3" : "00",
      "4" : "Approved or completed successfully"
    },
    "54" : "00028402C00000099800000018402C000000998000",
    "56" : {
      "7" : "69b7b833-cf76-4e57-b55b-fcaf717ab88c"
    },
    "63" : "DISCOVER",
    "112" : {
      "101" : "9980.00",
      "102" : "9980.00",
      "103" : "840"
    },
    "113" : {
      "2" : "106",
      "29" : "Y",
      "35" : "API"
    },
    "180" : "evbvhpcf"
  }
}

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - refund_transaction_token = token: null

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - log.logInfo("-----> refund_transaction_token = " + refund_transaction_token): -----> refund_transaction_token = ed9f347c-0f3a-4355-95f9-e4d508ec7f38

2020-10-13 11:15:02 - [MESSAGE][INFO] - -----> refund_transaction_token = ed9f347c-0f3a-4355-95f9-e4d508ec7f38

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - refund_transaction_token = refund_transaction_token: null

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable refund_transaction_token = " + refund_transaction_token): ----> GlobalVariable refund_transaction_token = ed9f347c-0f3a-4355-95f9-e4d508ec7f38

2020-10-13 11:15:02 - [MESSAGE][INFO] - ----> GlobalVariable refund_transaction_token = ed9f347c-0f3a-4355-95f9-e4d508ec7f38

2020-10-13 11:15:02 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:15:02 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:15:02 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:15:02 - [MESSAGE][INFO] - -----> refund_transaction_token = ed9f347c-0f3a-4355-95f9-e4d508ec7f38

2020-10-13 11:15:02 - [MESSAGE][INFO] - ----> GlobalVariable refund_transaction_token = ed9f347c-0f3a-4355-95f9-e4d508ec7f38

2020-10-13 11:15:02 - [MESSAGE][PASSED] - detailed_Onboarding.detailed_onboarding.createTransClearingRefund is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2020-10-13 11:14:31 - [TEST_SUITE][PASSED] - Detailed_Onboarding_With_Transactions: Test Cases/API Test Cases/Quickstart_with_transactions/Transaction Tests/Financial Settled Transaction/Detailed_onboarding_with_financial_transactions]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
   <testsuite name="Basic_Dev_Onboarding" tests="2" failures="0" errors="0" time="8.761" timestamp="2020-10-13 11:15:13" hostname="csmall - csmall-mbp" id="Test Suites/Basic Test Suite/Basic_Dev_Onboarding">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="/Users/csmall/ApiAutomationProject/Reports/20201013_111419/Basic Test Suite/Basic_Dev_Onboarding/20201013_111422"/>
         <property name="logFiles" value="/Users/csmall/ApiAutomationProject/Reports/20201013_111419/Basic Test Suite/Basic_Dev_Onboarding/20201013_111422/execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="csmall - csmall-mbp"/>
         <property name="hostAddress" value="192.168.1.45"/>
         <property name="os" value="Mac OS X 64bit"/>
         <property name="katalonVersion" value="null.null"/>
      </properties>
      <testcase name="Test Cases/API Test Cases/Basic_Quickstart_Test_Case/Basic_Onboarding" time="4.987" classname="Test Cases/API Test Cases/Basic_Quickstart_Test_Case/Basic_Onboarding" status="PASSED">
         <system-out><![CDATA[2020-10-13 11:15:13 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Basic_Quickstart_Test_Case/Basic_Onboarding: Test Cases/API Test Cases/Basic_Quickstart_Test_Case/Basic_Onboarding

2020-10-13 11:15:13 - [TEST_STEP][PASSED] - card_product_token = api_Basic_Onboarding.api_basic_onboarding.createCardProduct(start_date, card_product_name, payment_instrument, ecommerce, activate_upon_issue, atm): api_Basic_Onboarding.api_basic_onboarding.createCardProduct is PASSED

2020-10-13 11:15:15 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Basic Test Suite/Basic_Dev_Onboarding/20201013_111422/requests/main/0.har

2020-10-13 11:15:15 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:15:16 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:15:16 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "e3a26ecc-ec62-4a4a-86db-1dbb1df9ad02",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:15:15Z",
  "last_modified_time" : "2020-10-13T16:15:15Z"
}

2020-10-13 11:15:16 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "e3a26ecc-ec62-4a4a-86db-1dbb1df9ad02",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:15:15Z",
  "last_modified_time" : "2020-10-13T16:15:15Z"
}

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = e3a26ecc-ec62-4a4a-86db-1dbb1df9ad02

2020-10-13 11:15:16 - [MESSAGE][INFO] - -----> card_product_token = e3a26ecc-ec62-4a4a-86db-1dbb1df9ad02

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = e3a26ecc-ec62-4a4a-86db-1dbb1df9ad02

2020-10-13 11:15:16 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = e3a26ecc-ec62-4a4a-86db-1dbb1df9ad02

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:15:16 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:15:16 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:15:16 - [MESSAGE][INFO] - -----> card_product_token = e3a26ecc-ec62-4a4a-86db-1dbb1df9ad02

2020-10-13 11:15:16 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = e3a26ecc-ec62-4a4a-86db-1dbb1df9ad02

2020-10-13 11:15:16 - [MESSAGE][PASSED] - api_Basic_Onboarding.api_basic_onboarding.createCardProduct is PASSED

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - program_token = api_Basic_Onboarding.api_basic_onboarding.createCardFundingSource(program_name): api_Basic_Onboarding.api_basic_onboarding.createCardFundingSource is PASSED

2020-10-13 11:15:16 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Basic Test Suite/Basic_Dev_Onboarding/20201013_111422/requests/main/1.har

2020-10-13 11:15:16 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:15:16 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:15:16 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "2dafc465-f8bd-4210-9c1d-0f7972ac264d",
  "created_time" : "2020-10-13T16:15:16Z",
  "last_modified_time" : "2020-10-13T16:15:16Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:15:16 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "2dafc465-f8bd-4210-9c1d-0f7972ac264d",
  "created_time" : "2020-10-13T16:15:16Z",
  "last_modified_time" : "2020-10-13T16:15:16Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - funding_token = token: null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = 2dafc465-f8bd-4210-9c1d-0f7972ac264d

2020-10-13 11:15:16 - [MESSAGE][INFO] - -----> funding_token = 2dafc465-f8bd-4210-9c1d-0f7972ac264d

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = 2dafc465-f8bd-4210-9c1d-0f7972ac264d

2020-10-13 11:15:16 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = 2dafc465-f8bd-4210-9c1d-0f7972ac264d

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:15:16 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:15:16 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:15:16 - [MESSAGE][INFO] - -----> funding_token = 2dafc465-f8bd-4210-9c1d-0f7972ac264d

2020-10-13 11:15:16 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 2dafc465-f8bd-4210-9c1d-0f7972ac264d

2020-10-13 11:15:16 - [MESSAGE][PASSED] - api_Basic_Onboarding.api_basic_onboarding.createCardFundingSource is PASSED

2020-10-13 11:15:16 - [TEST_STEP][PASSED] - user_token = api_Basic_Onboarding.api_basic_onboarding.createUser(first_name, last_name, active): api_Basic_Onboarding.api_basic_onboarding.createUser is PASSED

2020-10-13 11:15:17 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Basic Test Suite/Basic_Dev_Onboarding/20201013_111422/requests/main/2.har

2020-10-13 11:15:17 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:15:17 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "ChaseTestFirstName",
    "last_name": "ChaseTestLastName",
    "active": true
}

2020-10-13 11:15:17 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "ChaseTestFirstName",
    "last_name": "ChaseTestLastName",
    "active": true
}

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "a3437301-064e-4dba-ae4d-07b25a8ce043",
  "active" : true,
  "first_name" : "ChaseTestFirstName",
  "last_name" : "ChaseTestLastName",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:15:17Z",
  "last_modified_time" : "2020-10-13T16:15:17Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "c90bca86-41ad-47ce-96e2-656d673b1099",
    "account_number" : "40013372430467211",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:15:17 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "a3437301-064e-4dba-ae4d-07b25a8ce043",
  "active" : true,
  "first_name" : "ChaseTestFirstName",
  "last_name" : "ChaseTestLastName",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:15:17Z",
  "last_modified_time" : "2020-10-13T16:15:17Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "c90bca86-41ad-47ce-96e2-656d673b1099",
    "account_number" : "40013372430467211",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - user_token = token: null

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = a3437301-064e-4dba-ae4d-07b25a8ce043

2020-10-13 11:15:17 - [MESSAGE][INFO] - -----> user_token = a3437301-064e-4dba-ae4d-07b25a8ce043

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = a3437301-064e-4dba-ae4d-07b25a8ce043

2020-10-13 11:15:17 - [MESSAGE][INFO] - ----> GlobalVariable user_token = a3437301-064e-4dba-ae4d-07b25a8ce043

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:15:17 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:15:17 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:15:17 - [MESSAGE][INFO] - -----> user_token = a3437301-064e-4dba-ae4d-07b25a8ce043

2020-10-13 11:15:17 - [MESSAGE][INFO] - ----> GlobalVariable user_token = a3437301-064e-4dba-ae4d-07b25a8ce043

2020-10-13 11:15:17 - [MESSAGE][PASSED] - api_Basic_Onboarding.api_basic_onboarding.createUser is PASSED

2020-10-13 11:15:17 - [TEST_STEP][PASSED] - card_token = api_Basic_Onboarding.api_basic_onboarding.createCard(user_token, card_product_token): api_Basic_Onboarding.api_basic_onboarding.createCard is PASSED

2020-10-13 11:15:18 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Basic Test Suite/Basic_Dev_Onboarding/20201013_111422/requests/main/3.har

2020-10-13 11:15:18 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:15:18 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "a3437301-064e-4dba-ae4d-07b25a8ce043",
  "card_product_token": "e3a26ecc-ec62-4a4a-86db-1dbb1df9ad02"
}

2020-10-13 11:15:18 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "a3437301-064e-4dba-ae4d-07b25a8ce043",
  "card_product_token": "e3a26ecc-ec62-4a4a-86db-1dbb1df9ad02"
}

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-10-13T16:15:18Z",
  "last_modified_time" : "2020-10-13T16:15:18Z",
  "token" : "e54be141-9403-4d61-9582-83e94e9337d8",
  "user_token" : "a3437301-064e-4dba-ae4d-07b25a8ce043",
  "card_product_token" : "e3a26ecc-ec62-4a4a-86db-1dbb1df9ad02",
  "last_four" : "2247",
  "pan" : "111111______2247",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "10093662034649077623",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:15:18 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-10-13T16:15:18Z",
  "last_modified_time" : "2020-10-13T16:15:18Z",
  "token" : "e54be141-9403-4d61-9582-83e94e9337d8",
  "user_token" : "a3437301-064e-4dba-ae4d-07b25a8ce043",
  "card_product_token" : "e3a26ecc-ec62-4a4a-86db-1dbb1df9ad02",
  "last_four" : "2247",
  "pan" : "111111______2247",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "10093662034649077623",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - card_token = token: null

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = e54be141-9403-4d61-9582-83e94e9337d8

2020-10-13 11:15:18 - [MESSAGE][INFO] - -----> card_token = e54be141-9403-4d61-9582-83e94e9337d8

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = e54be141-9403-4d61-9582-83e94e9337d8

2020-10-13 11:15:18 - [MESSAGE][INFO] - ----> GlobalVariable card_token = e54be141-9403-4d61-9582-83e94e9337d8

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:15:18 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:15:18 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:15:18 - [MESSAGE][INFO] - -----> card_token = e54be141-9403-4d61-9582-83e94e9337d8

2020-10-13 11:15:18 - [MESSAGE][INFO] - ----> GlobalVariable card_token = e54be141-9403-4d61-9582-83e94e9337d8

2020-10-13 11:15:18 - [MESSAGE][PASSED] - api_Basic_Onboarding.api_basic_onboarding.createCard is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/API Test Cases/Basic_Quickstart_Test_Case/Dev Onboarding" time="3.371" classname="Test Cases/API Test Cases/Basic_Quickstart_Test_Case/Dev Onboarding" status="PASSED">
         <system-out><![CDATA[2020-10-13 11:15:18 - [TEST_CASE][PASSED] - Test Cases/API Test Cases/Basic_Quickstart_Test_Case/Dev Onboarding: Test Cases/API Test Cases/Basic_Quickstart_Test_Case/Dev Onboarding

2020-10-13 11:15:18 - [TEST_STEP][PASSED] - api_Basic_Onboarding.api_basic_onboarding.pingService(): api_Basic_Onboarding.api_basic_onboarding.pingService is PASSED

2020-10-13 11:15:19 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Basic Test Suite/Basic_Dev_Onboarding/20201013_111422/requests/main/4.har

2020-10-13 11:15:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/ping

2020-10-13 11:15:19 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/ping

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {"success":true,"version":"rel-20.9.0","revision":"254221907dc33ff8564232fdd997ff0f78769a19","timestamp":"Thu Sep 17 19:45:17 UTC 2020","env":"sandbox","id":"i-0e0a4a9bc40f8d05d:us-east-1a:10.128.19.176"}

2020-10-13 11:15:19 - [MESSAGE][INFO] - -------> Response Body= {"success":true,"version":"rel-20.9.0","revision":"254221907dc33ff8564232fdd997ff0f78769a19","timestamp":"Thu Sep 17 19:45:17 UTC 2020","env":"sandbox","id":"i-0e0a4a9bc40f8d05d:us-east-1a:10.128.19.176"}

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - assert success != null: null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - verifyElementPropertyValue(response, "success", true): Verify element property value successfully

2020-10-13 11:15:19 - [MESSAGE][PASSED] - Verify element property value successfully

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 200: null

2020-10-13 11:15:19 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:15:19 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:15:19 - [MESSAGE][INFO] - -----> success_value = true

2020-10-13 11:15:19 - [MESSAGE][PASSED] - api_Basic_Onboarding.api_basic_onboarding.pingService is PASSED

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - card_product_token = api_Basic_Onboarding.api_basic_onboarding.createCardProduct(start_date, name, payment_instrument, ecommerce, activate_upon_issue, atm): api_Basic_Onboarding.api_basic_onboarding.createCardProduct is PASSED

2020-10-13 11:15:19 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Basic Test Suite/Basic_Dev_Onboarding/20201013_111422/requests/main/5.har

2020-10-13 11:15:19 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:15:19 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cardproducts

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:15:19 - [MESSAGE][INFO] - -------> Request Body= {
  "start_date": "2020-09-10",
  "name": "Example Card Product",
  "config": {
    "fulfillment": {
      "payment_instrument":"VIRTUAL_PAN"
     },
    "poi": {
      "ecommerce": true,
      "atm": "true"
    },
    "card_life_cycle": {
      "activate_upon_issue": true
    }
  }
}

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "ef93ff66-8e0b-4721-855a-cbe78d29b41d",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:15:19Z",
  "last_modified_time" : "2020-10-13T16:15:19Z"
}

2020-10-13 11:15:19 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "ef93ff66-8e0b-4721-855a-cbe78d29b41d",
  "name" : "Example Card Product",
  "active" : true,
  "start_date" : "2020-09-10",
  "config" : {
    "poi" : {
      "other" : {
        "allow" : true,
        "card_presence_required" : false,
        "cardholder_presence_required" : false
      },
      "ecommerce" : true,
      "atm" : true
    },
    "transaction_controls" : {
      "accepted_countries_token" : "accept_us_only",
      "always_require_pin" : false,
      "always_require_icc" : false,
      "allow_gpa_auth" : true,
      "require_card_not_present_card_security_code" : false,
      "allow_mcc_group_authorization_controls" : true,
      "allow_first_pin_set_via_financial_transaction" : false,
      "ignore_card_suspended_state" : false,
      "allow_chip_fallback" : true,
      "allow_network_load" : false,
      "allow_network_load_card_activation" : false,
      "allow_quasi_cash" : false,
      "enable_partial_auth_approval" : true,
      "address_verification" : {
        "av_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : true
        },
        "auth_messages" : {
          "validate" : true,
          "decline_on_address_number_mismatch" : false,
          "decline_on_postal_code_mismatch" : false
        }
      },
      "strong_customer_authentication_limits" : { }
    },
    "selective_auth" : {
      "sa_mode" : 1,
      "enable_regex_search_chain" : false,
      "dmd_location_sensitivity" : 0
    },
    "special" : {
      "merchant_on_boarding" : false
    },
    "card_life_cycle" : {
      "activate_upon_issue" : true,
      "expiration_offset" : {
        "unit" : "YEARS",
        "value" : 4
      },
      "card_service_code" : 101,
      "update_expiration_upon_activation" : false
    },
    "clearing_and_settlement" : {
      "overdraft_destination" : "GPA"
    },
    "jit_funding" : {
      "paymentcard_funding_source" : {
        "enabled" : false,
        "refunds_destination" : ""
      },
      "programgateway_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : "",
        "always_fund" : true
      },
      "program_funding_source" : {
        "enabled" : false,
        "funding_source_token" : "",
        "refunds_destination" : ""
      }
    },
    "digital_wallet_tokenization" : {
      "provisioning_controls" : {
        "manual_entry" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "wallet_provider_card_on_file" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        },
        "in_app_provisioning" : {
          "enabled" : false,
          "address_verification" : {
            "validate" : true
          }
        }
      },
      "card_art_id" : ""
    },
    "fulfillment" : {
      "payment_instrument" : "VIRTUAL_PAN",
      "package_id" : "0",
      "all_zero_card_security_code" : false,
      "bin_prefix" : "111111",
      "bulk_ship" : false,
      "pan_length" : "16",
      "fulfillment_provider" : "PERFECTPLASTIC",
      "allow_card_creation" : true,
      "uppercase_name_lines" : true,
      "enable_offline_pin" : false
    }
  },
  "created_time" : "2020-10-13T16:15:19Z",
  "last_modified_time" : "2020-10-13T16:15:19Z"
}

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - card_product_token = token: null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - log.logInfo("-----> card_product_token = " + card_product_token): -----> card_product_token = ef93ff66-8e0b-4721-855a-cbe78d29b41d

2020-10-13 11:15:19 - [MESSAGE][INFO] - -----> card_product_token = ef93ff66-8e0b-4721-855a-cbe78d29b41d

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - card_product_token = card_product_token: null

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_product_token = " + card_product_token): ----> GlobalVariable card_product_token = ef93ff66-8e0b-4721-855a-cbe78d29b41d

2020-10-13 11:15:19 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = ef93ff66-8e0b-4721-855a-cbe78d29b41d

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:15:19 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:15:19 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:15:19 - [MESSAGE][INFO] - -----> card_product_token = ef93ff66-8e0b-4721-855a-cbe78d29b41d

2020-10-13 11:15:19 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = ef93ff66-8e0b-4721-855a-cbe78d29b41d

2020-10-13 11:15:19 - [MESSAGE][PASSED] - api_Basic_Onboarding.api_basic_onboarding.createCardProduct is PASSED

2020-10-13 11:15:19 - [TEST_STEP][PASSED] - program_token = api_Basic_Onboarding.api_basic_onboarding.createCardFundingSource(program_name): api_Basic_Onboarding.api_basic_onboarding.createCardFundingSource is PASSED

2020-10-13 11:15:20 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Basic Test Suite/Basic_Dev_Onboarding/20201013_111422/requests/main/6.har

2020-10-13 11:15:20 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:15:20 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/fundingsources/program

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:15:20 - [MESSAGE][INFO] - -------> Request Body= {
  "name": "Program Funding"
}

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "62dee545-2f8a-48b6-b2a0-9dcac1b196e5",
  "created_time" : "2020-10-13T16:15:20Z",
  "last_modified_time" : "2020-10-13T16:15:20Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:15:20 - [MESSAGE][INFO] - -------> Response Body= {
  "name" : "Program Funding",
  "active" : true,
  "token" : "62dee545-2f8a-48b6-b2a0-9dcac1b196e5",
  "created_time" : "2020-10-13T16:15:20Z",
  "last_modified_time" : "2020-10-13T16:15:20Z",
  "account" : "12.003.001.000000"
}

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - funding_token = token: null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - log.logInfo("-----> funding_token = " + funding_token): -----> funding_token = 62dee545-2f8a-48b6-b2a0-9dcac1b196e5

2020-10-13 11:15:20 - [MESSAGE][INFO] - -----> funding_token = 62dee545-2f8a-48b6-b2a0-9dcac1b196e5

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - funding_token = funding_token: null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable funding_token = " + funding_token): ----> GlobalVariable funding_token = 62dee545-2f8a-48b6-b2a0-9dcac1b196e5

2020-10-13 11:15:20 - [MESSAGE][INFO] - ----> GlobalVariable funding_token = 62dee545-2f8a-48b6-b2a0-9dcac1b196e5

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:15:20 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:15:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:15:20 - [MESSAGE][INFO] - -----> funding_token = 62dee545-2f8a-48b6-b2a0-9dcac1b196e5

2020-10-13 11:15:20 - [MESSAGE][INFO] - ----> GlobalVariable card_product_token = 62dee545-2f8a-48b6-b2a0-9dcac1b196e5

2020-10-13 11:15:20 - [MESSAGE][PASSED] - api_Basic_Onboarding.api_basic_onboarding.createCardFundingSource is PASSED

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - user_token = api_Basic_Onboarding.api_basic_onboarding.createUser(first_name, last_name, active): api_Basic_Onboarding.api_basic_onboarding.createUser is PASSED

2020-10-13 11:15:20 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Basic Test Suite/Basic_Dev_Onboarding/20201013_111422/requests/main/7.har

2020-10-13 11:15:20 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:15:20 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/users

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:15:20 - [MESSAGE][INFO] - -------> Request Body= {
    "first_name": "Chaseuser",
    "last_name": "Smalluser",
    "active": true
}

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "token" : "b843a999-ab73-4048-b870-aa55836e8306",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:15:20Z",
  "last_modified_time" : "2020-10-13T16:15:20Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "1a0807b5-7f76-4a82-8e17-edeffa473049",
    "account_number" : "40013372452121761",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:15:20 - [MESSAGE][INFO] - -------> Response Body= {
  "token" : "b843a999-ab73-4048-b870-aa55836e8306",
  "active" : true,
  "first_name" : "Chaseuser",
  "last_name" : "Smalluser",
  "uses_parent_account" : false,
  "corporate_card_holder" : false,
  "created_time" : "2020-10-13T16:15:20Z",
  "last_modified_time" : "2020-10-13T16:15:20Z",
  "metadata" : { },
  "account_holder_group_token" : "DEFAULT_AHG",
  "status" : "ACTIVE",
  "deposit_account" : {
    "token" : "1a0807b5-7f76-4a82-8e17-edeffa473049",
    "account_number" : "40013372452121761",
    "routing_number" : "293748000",
    "allow_immediate_credit" : false
  }
}

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - user_token = token: null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - log.logInfo("-----> user_token = " + user_token): -----> user_token = b843a999-ab73-4048-b870-aa55836e8306

2020-10-13 11:15:20 - [MESSAGE][INFO] - -----> user_token = b843a999-ab73-4048-b870-aa55836e8306

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - user_token = user_token: null

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable user_token = " + user_token): ----> GlobalVariable user_token = b843a999-ab73-4048-b870-aa55836e8306

2020-10-13 11:15:20 - [MESSAGE][INFO] - ----> GlobalVariable user_token = b843a999-ab73-4048-b870-aa55836e8306

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:15:20 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:15:20 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:15:20 - [MESSAGE][INFO] - -----> user_token = b843a999-ab73-4048-b870-aa55836e8306

2020-10-13 11:15:20 - [MESSAGE][INFO] - ----> GlobalVariable user_token = b843a999-ab73-4048-b870-aa55836e8306

2020-10-13 11:15:20 - [MESSAGE][PASSED] - api_Basic_Onboarding.api_basic_onboarding.createUser is PASSED

2020-10-13 11:15:20 - [TEST_STEP][PASSED] - card_token = api_Basic_Onboarding.api_basic_onboarding.createCard(user_token, card_product_token): api_Basic_Onboarding.api_basic_onboarding.createCard is PASSED

2020-10-13 11:15:21 - [MESSAGE][INFO] - HAR: /Users/csmall/ApiAutomationProject/Reports/20201013_111419/Basic Test Suite/Basic_Dev_Onboarding/20201013_111422/requests/main/8.har

2020-10-13 11:15:21 - [TEST_CASE][PASSED] - Start Test Case : Verification: Verification accomplished successfully

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - log = new com.kms.katalon.core.logging.KeywordLogger(): null

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - request = getInstance().getCurrentRequest(): null

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - println(restUrl.toString()): null

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - println(httpBody.toString()): null

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Url= " + restUrl.toString()): -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:15:21 - [MESSAGE][INFO] - -------> Request Url= https://sandbox-api.marqeta.com/v3/cards

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - log.logInfo("-------> Request Body= " + httpBody.toString()): -------> Request Body= {
  "user_token": "b843a999-ab73-4048-b870-aa55836e8306",
  "card_product_token": "ef93ff66-8e0b-4721-855a-cbe78d29b41d"
}

2020-10-13 11:15:21 - [MESSAGE][INFO] - -------> Request Body= {
  "user_token": "b843a999-ab73-4048-b870-aa55836e8306",
  "card_product_token": "ef93ff66-8e0b-4721-855a-cbe78d29b41d"
}

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - response = getInstance().getCurrentResponse(): null

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - println(responseBodyContent.toString()): null

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - log.logInfo("-------> Response Body= " + responseBodyContent.toString()): -------> Response Body= {
  "created_time" : "2020-10-13T16:15:21Z",
  "last_modified_time" : "2020-10-13T16:15:21Z",
  "token" : "505ce271-dc70-46ed-b14c-7b9069b1c68b",
  "user_token" : "b843a999-ab73-4048-b870-aa55836e8306",
  "card_product_token" : "ef93ff66-8e0b-4721-855a-cbe78d29b41d",
  "last_four" : "8641",
  "pan" : "111111______8641",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "19112256141271260128",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:15:21 - [MESSAGE][INFO] - -------> Response Body= {
  "created_time" : "2020-10-13T16:15:21Z",
  "last_modified_time" : "2020-10-13T16:15:21Z",
  "token" : "505ce271-dc70-46ed-b14c-7b9069b1c68b",
  "user_token" : "b843a999-ab73-4048-b870-aa55836e8306",
  "card_product_token" : "ef93ff66-8e0b-4721-855a-cbe78d29b41d",
  "last_four" : "8641",
  "pan" : "111111______8641",
  "expiration" : "1024",
  "expiration_time" : "2024-10-31T23:59:59Z",
  "barcode" : "19112256141271260128",
  "pin_is_set" : false,
  "state" : "ACTIVE",
  "state_reason" : "New card activated",
  "fulfillment_status" : "ISSUED",
  "instrument_type" : "VIRTUAL_PAN",
  "expedite" : false,
  "metadata" : { }
}

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - jsonSlurper = new groovy.json.JsonSlurper(): null

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - jsonResponse = jsonSlurper.parseText(response.getResponseText()): null

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - assert token != null: null

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - println(token): null

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - card_token = token: null

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - log.logInfo("-----> card_token = " + card_token): -----> card_token = 505ce271-dc70-46ed-b14c-7b9069b1c68b

2020-10-13 11:15:21 - [MESSAGE][INFO] - -----> card_token = 505ce271-dc70-46ed-b14c-7b9069b1c68b

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - card_token = card_token: null

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - log.logInfo("----> GlobalVariable card_token = " + card_token): ----> GlobalVariable card_token = 505ce271-dc70-46ed-b14c-7b9069b1c68b

2020-10-13 11:15:21 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 505ce271-dc70-46ed-b14c-7b9069b1c68b

2020-10-13 11:15:21 - [TEST_STEP][PASSED] - assert response.getStatusCode() == 201: null

2020-10-13 11:15:21 - [MESSAGE][PASSED] - Verify response successfully

2020-10-13 11:15:21 - [MESSAGE][PASSED] - Send request and verify the response successfully

2020-10-13 11:15:21 - [MESSAGE][INFO] - -----> card_token = 505ce271-dc70-46ed-b14c-7b9069b1c68b

2020-10-13 11:15:21 - [MESSAGE][INFO] - ----> GlobalVariable card_token = 505ce271-dc70-46ed-b14c-7b9069b1c68b

2020-10-13 11:15:21 - [MESSAGE][PASSED] - api_Basic_Onboarding.api_basic_onboarding.createCard is PASSED]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2020-10-13 11:15:13 - [TEST_SUITE][PASSED] - Basic_Dev_Onboarding: Test Cases/API Test Cases/Basic_Quickstart_Test_Case/Dev Onboarding]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
